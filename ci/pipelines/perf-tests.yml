---
resources:
  - name: perf-tests-pipeline
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-ci
      branch: master
      paths:
        - ci/pipelines/perf-tests.yml

  - name: perf-tests-git-release
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-perftests
      branch: master
      tag_regex: "alpha_release-(.*)"
      username: alphagov-pay-ci-concourse
      password: ((github-access-token))

  - name: pay-ci
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-ci
      branch: master
      username: alphagov-pay-ci-concourse
      password: ((github-access-token))

  - name: perf-tests-ecr-registry-test
    type: registry-image
    icon: docker
    source:
      repository: govukpay/perftests
      tag: latest
      aws_access_key_id: ((readonly_access_key_id))
      aws_secret_access_key: ((readonly_secret_access_key))
      aws_session_token: ((readonly_session_token))
      aws_role_arn: arn:aws:iam::((pay_aws_test_account_id)):role/concourse
      aws_ecr_registry_id: "((pay_aws_test_account_id))"
      aws_region: eu-west-1

  - name: perf-tests-ecr-release
    type: registry-image
    icon: docker
    source:
      repository: govukpay/perftests
      variant: release
      aws_access_key_id: ((readonly_access_key_id))
      aws_secret_access_key: ((readonly_secret_access_key))
      aws_session_token: ((readonly_session_token))
      aws_role_arn: arn:aws:iam::((pay_aws_test_account_id)):role/concourse
      aws_ecr_registry_id: "((pay_aws_test_account_id))"
      aws_region: eu-west-1

  - name: perf-tests-dockerhub
    type: registry-image
    icon: docker
    source:
      repository: govukpay/perftests
      tag: latest-master
      password: ((docker-password))
      username: ((docker-username))

  - name: slack-notification
    type: slack-notification
    source:
      url: https://hooks.slack.com/services/((slack-notification-secret))

  - name: paas
    type: cf-cli
    icon: cloud-upload-outline
    source:
      api: https://api.cloud.service.gov.uk
      org: govuk-pay
      space: build
      username: ((cf-username))
      password: ((cf-password))
      cf_cli_version: 7

resource_types:
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource
      tag: latest

  - name: cf-cli
    type: registry-image
    source:
      repository: nulldriver/cf-cli-resource

groups:
  - name: complete-perf-tests
    jobs:
      - scale-and-run-all-simulations
  - name: individual-perf-tests
    jobs:
      - run-payment-simulation-perf-test
      - run-search-payment-simulation-perf-test
      - run-self-service-simulation-perf-test
  - name: environment-scaling
    jobs:
      - scale-up-databases
      - scale-up-services
      - scale-up-all
      - scale-down-databases
      - scale-down-services
      - scale-down-all
  - name: perf-tests-build
    jobs:
      - build-and-push-perf-tests
  - name: update-perf-tests-pipeline
    jobs:
      - update-perf-tests-pipeline
  - name: all-jobs
    jobs:
      - scale-and-run-all-simulations
      - run-payment-simulation-perf-test
      - run-search-payment-simulation-perf-test
      - run-self-service-simulation-perf-test
      - scale-up-databases
      - scale-up-services
      - scale-up-all
      - scale-down-databases
      - scale-down-services
      - scale-down-all
      - build-and-push-perf-tests
      - update-perf-tests-pipeline

definitions:
  - &pause-deploy-to-perf
    task: pause-deploy-to-perf-pipeline
    file: pay-ci/ci/tasks/pause-unpause-pipeline.yml
    params:
      ACTION: pause
      PIPELINE: deploy-to-perf
      FLY_USERNAME: pay-dev
      FLY_PASSWORD: ((readonly_local_user_password))

  - &unpause-deploy-to-perf
    task: unpause-deploy-to-perf-pipeline
    file: pay-ci/ci/tasks/pause-unpause-pipeline.yml
    params:
      ACTION: unpause
      PIPELINE: deploy-to-perf
      FLY_USERNAME: pay-dev
      FLY_PASSWORD: ((readonly_local_user_password))

  - &scale-down-services
    in_parallel:
      - put: scale-down-stubs
        resource: paas
        params:
          command: scale
          app_name: pay-stubs
          instances: 1
      - task: scale-down-adminusers
        file: pay-ci/ci/tasks/scale-fargate-service.yml
        params:
          SERVICE_NAME: adminusers
          SCALE_DIRECTION: in
          DESIRED_HEALTHY_INSTANCES: 0
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
      - task: scale-down-cardid
        file: pay-ci/ci/tasks/scale-fargate-service.yml
        params:
          SERVICE_NAME: cardid
          SCALE_DIRECTION: in
          DESIRED_HEALTHY_INSTANCES: 0
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
      - task: scale-down-connector
        file: pay-ci/ci/tasks/scale-fargate-service.yml
        params:
          SERVICE_NAME: connector
          SCALE_DIRECTION: in
          DESIRED_HEALTHY_INSTANCES: 0
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
      - task: scale-down-frontend
        file: pay-ci/ci/tasks/scale-fargate-service.yml
        params:
          SERVICE_NAME: frontend
          SCALE_DIRECTION: in
          DESIRED_HEALTHY_INSTANCES: 0
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
      - task: scale-down-ledger
        file: pay-ci/ci/tasks/scale-fargate-service.yml
        params:
          SERVICE_NAME: ledger
          SCALE_DIRECTION: in
          DESIRED_HEALTHY_INSTANCES: 0
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
      - task: scale-down-notifications
        file: pay-ci/ci/tasks/scale-fargate-service.yml
        params:
          SERVICE_NAME: notifications
          SCALE_DIRECTION: in
          DESIRED_HEALTHY_INSTANCES: 0
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
      - task: scale-down-publicapi
        file: pay-ci/ci/tasks/scale-fargate-service.yml
        params:
          SERVICE_NAME: publicapi
          SCALE_DIRECTION: in
          DESIRED_HEALTHY_INSTANCES: 0
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
      - task: scale-down-publicauth
        file: pay-ci/ci/tasks/scale-fargate-service.yml
        params:
          SERVICE_NAME: publicauth
          SCALE_DIRECTION: in
          DESIRED_HEALTHY_INSTANCES: 0
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
      - task: scale-down-selfservice
        file: pay-ci/ci/tasks/scale-fargate-service.yml
        params:
          SERVICE_NAME: selfservice
          SCALE_DIRECTION: in
          DESIRED_HEALTHY_INSTANCES: 0
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))

  - &scale-down-databases
    in_parallel:
      - task: stop-adminusers-db
        file: pay-ci/ci/tasks/stop-rds-instance.yml
        params:
          RDS_INSTANCE_NAME: test-perf-1-adminusers-rds-0
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
      - task: stop-connector-db
        file: pay-ci/ci/tasks/stop-rds-instance.yml
        params:
          RDS_INSTANCE_NAME: test-perf-1-connector-rds-0
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
      - task: stop-ledger-db
        file: pay-ci/ci/tasks/stop-rds-instance.yml
        params:
          RDS_INSTANCE_NAME: test-perf-1-ledger-rds-0
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
      - task: stop-products-db
        file: pay-ci/ci/tasks/stop-rds-instance.yml
        params:
          RDS_INSTANCE_NAME: test-perf-1-products-rds-0
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
      - task: stop-publicauth-db
        file: pay-ci/ci/tasks/stop-rds-instance.yml
        params:
          RDS_INSTANCE_NAME: test-perf-1-publicauth-rds-0
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))

  - &scale-up-services
    in_parallel:
      - task: scale-up-adminusers
        file: pay-ci/ci/tasks/scale-fargate-service.yml
        params:
          SERVICE_NAME: adminusers
          SCALE_DIRECTION: out
          DESIRED_HEALTHY_INSTANCES: 3
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
      - task: scale-up-cardid
        file: pay-ci/ci/tasks/scale-fargate-service.yml
        params:
          SERVICE_NAME: cardid
          SCALE_DIRECTION: out
          DESIRED_HEALTHY_INSTANCES: 3
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
      - task: scale-up-connector
        file: pay-ci/ci/tasks/scale-fargate-service.yml
        params:
          SERVICE_NAME: connector
          SCALE_DIRECTION: out
          DESIRED_HEALTHY_INSTANCES: 15
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
      - task: scale-up-frontend
        file: pay-ci/ci/tasks/scale-fargate-service.yml
        params:
          SERVICE_NAME: frontend
          SCALE_DIRECTION: out
          DESIRED_HEALTHY_INSTANCES: 11
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
      - task: scale-up-ledger
        file: pay-ci/ci/tasks/scale-fargate-service.yml
        params:
          SERVICE_NAME: ledger
          SCALE_DIRECTION: out
          DESIRED_HEALTHY_INSTANCES: 3
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
      - task: scale-up-notifications
        file: pay-ci/ci/tasks/scale-fargate-service.yml
        params:
          SERVICE_NAME: notifications
          SCALE_DIRECTION: out
          DESIRED_HEALTHY_INSTANCES: 3
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
      - task: scale-up-publicapi
        file: pay-ci/ci/tasks/scale-fargate-service.yml
        params:
          SERVICE_NAME: publicapi
          SCALE_DIRECTION: out
          DESIRED_HEALTHY_INSTANCES: 4
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
      - task: scale-up-publicauth
        file: pay-ci/ci/tasks/scale-fargate-service.yml
        params:
          SERVICE_NAME: publicauth
          SCALE_DIRECTION: out
          DESIRED_HEALTHY_INSTANCES: 3
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
      - task: scale-up-selfservice
        file: pay-ci/ci/tasks/scale-fargate-service.yml
        params:
          SERVICE_NAME: selfservice
          SCALE_DIRECTION: out
          DESIRED_HEALTHY_INSTANCES: 3
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
      - put: scale-up-stubs
        resource: paas
        params:
          command: scale
          app_name: pay-stubs
          instances: 5
  - &scale-up-databases
    in_parallel:
      - task: start-adminusers-db
        file: pay-ci/ci/tasks/start-rds-instance.yml
        params:
          RDS_INSTANCE_NAME: test-perf-1-adminusers-rds-0
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
      - task: start-connector-db
        file: pay-ci/ci/tasks/start-rds-instance.yml
        params:
          RDS_INSTANCE_NAME: test-perf-1-connector-rds-0
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
      - task: start-ledger-db
        file: pay-ci/ci/tasks/start-rds-instance.yml
        params:
          RDS_INSTANCE_NAME: test-perf-1-ledger-rds-0
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
      - task: start-products-db
        file: pay-ci/ci/tasks/start-rds-instance.yml
        params:
          RDS_INSTANCE_NAME: test-perf-1-products-rds-0
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
      - task: start-publicauth-db
        file: pay-ci/ci/tasks/start-rds-instance.yml
        params:
          RDS_INSTANCE_NAME: test-perf-1-publicauth-rds-0
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))

  - &prepare-codebuild
    task: prepare-codebuild
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: alpine
          tag: latest
      outputs:
        - name: run-codebuild-configuration
      run:
        path: ash
        args:
          - -euo
          - pipefail
          - -c
          - |
            echo "CardIDSimulation"
            echo "------------------------------------------------------------------"
            cat <<EOF | tee ./run-codebuild-configuration/perf-tests-CardIDSimulation.json
            {
              "projectName": "perf-tests-test-perf-1",
              "sourceVersion": "",
              "secondarySourcesVersions": {},
              "environmentVariables": {
                "PERF_TESTS_VERSION": "((.:release-tag))",
                "GATLING_CLASS": "uk.gov.pay.CardIDSimulation",
                "USE_CONCURRENT": "((.:gatling-simulation-settings.CardIDSimulation.USE_CONCURRENT))",
                "RAMPUP_USERS_FROM": "((.:gatling-simulation-settings.CardIDSimulation.RAMPUP_USERS_FROM))",
                "RAMPUP_USERS_TO": "((.:gatling-simulation-settings.CardIDSimulation.RAMPUP_USERS_TO))",
                "RAMPUP_DURATION_IN_SECONDS": "((.:gatling-simulation-settings.CardIDSimulation.RAMPUP_DURATION_IN_SECONDS))",
                "INITIAL_THROUGHPUT_RPS": "((.:gatling-simulation-settings.CardIDSimulation.INITIAL_THROUGHPUT_RPS))",
                "INITIAL_THROUGHPUT_RAMPUP_SECONDS": "((.:gatling-simulation-settings.CardIDSimulation.INITIAL_THROUGHPUT_RAMPUP_SECONDS))",
                "INITIAL_THROUGHPUT_DURATION_MINUTES": "((.:gatling-simulation-settings.CardIDSimulation.INITIAL_THROUGHPUT_DURATION_MINUTES))",
                "THROUGHPUT_TO_MAINTAIN": "((.:gatling-simulation-settings.CardIDSimulation.THROUGHPUT_TO_MAINTAIN))",
                "FINAL_THROUGHPUT_DURATION_MINUTES": "((.:gatling-simulation-settings.CardIDSimulation.FINAL_THROUGHPUT_DURATION_MINUTES))",
                "CONSTANT_USERS_AFTER_RAMPUP": "((.:gatling-simulation-settings.CardIDSimulation.CONSTANT_USERS_AFTER_RAMPUP))",
                "CONSTANT_DURATION_AFTER_RAMPUP": "((.:gatling-simulation-settings.CardIDSimulation.CONSTANT_DURATION_AFTER_RAMPUP))"
              }
            }
            EOF

            echo "PaymentSimulation"
            echo "------------------------------------------------------------------"
            cat <<EOF | tee ./run-codebuild-configuration/perf-tests-PaymentSimulation.json
            {
              "projectName": "perf-tests-test-perf-1",
              "sourceVersion": "",
              "secondarySourcesVersions": {},
              "environmentVariables": {
                "PERF_TESTS_VERSION": "((.:release-tag))",
                "GATLING_CLASS": "uk.gov.pay.PaymentSimulation",
                "USE_CONCURRENT": "((.:gatling-simulation-settings.PaymentSimulation.USE_CONCURRENT))",
                "RAMPUP_USERS_FROM": "((.:gatling-simulation-settings.PaymentSimulation.RAMPUP_USERS_FROM))",
                "RAMPUP_USERS_TO": "((.:gatling-simulation-settings.PaymentSimulation.RAMPUP_USERS_TO))",
                "RAMPUP_DURATION_IN_SECONDS": "((.:gatling-simulation-settings.PaymentSimulation.RAMPUP_DURATION_IN_SECONDS))",
                "INITIAL_THROUGHPUT_RPS": "((.:gatling-simulation-settings.PaymentSimulation.INITIAL_THROUGHPUT_RPS))",
                "INITIAL_THROUGHPUT_RAMPUP_SECONDS": "((.:gatling-simulation-settings.PaymentSimulation.INITIAL_THROUGHPUT_RAMPUP_SECONDS))",
                "INITIAL_THROUGHPUT_DURATION_MINUTES": "((.:gatling-simulation-settings.PaymentSimulation.INITIAL_THROUGHPUT_DURATION_MINUTES))",
                "THROUGHPUT_TO_MAINTAIN": "((.:gatling-simulation-settings.PaymentSimulation.THROUGHPUT_TO_MAINTAIN))",
                "FINAL_THROUGHPUT_DURATION_MINUTES": "((.:gatling-simulation-settings.PaymentSimulation.FINAL_THROUGHPUT_DURATION_MINUTES))",
                "CONSTANT_USERS_AFTER_RAMPUP": "((.:gatling-simulation-settings.PaymentSimulation.CONSTANT_USERS_AFTER_RAMPUP))",
                "CONSTANT_DURATION_AFTER_RAMPUP": "((.:gatling-simulation-settings.PaymentSimulation.CONSTANT_DURATION_AFTER_RAMPUP))"
              }
            }
            EOF

            echo "PublicAuthSimulation"
            echo "------------------------------------------------------------------"
            cat <<EOF | tee ./run-codebuild-configuration/perf-tests-PublicAuthSimulation.json
            {
              "projectName": "perf-tests-test-perf-1",
              "sourceVersion": "",
              "secondarySourcesVersions": {},
              "environmentVariables": {
                "PERF_TESTS_VERSION": "((.:release-tag))",
                "GATLING_CLASS": "uk.gov.pay.PublicAuthSimulation",
                "USE_CONCURRENT": "((.:gatling-simulation-settings.PublicAuthSimulation.USE_CONCURRENT))",
                "RAMPUP_USERS_FROM": "((.:gatling-simulation-settings.PublicAuthSimulation.RAMPUP_USERS_FROM))",
                "RAMPUP_USERS_TO": "((.:gatling-simulation-settings.PublicAuthSimulation.RAMPUP_USERS_TO))",
                "RAMPUP_DURATION_IN_SECONDS": "((.:gatling-simulation-settings.PublicAuthSimulation.RAMPUP_DURATION_IN_SECONDS))",
                "INITIAL_THROUGHPUT_RPS": "((.:gatling-simulation-settings.PublicAuthSimulation.INITIAL_THROUGHPUT_RPS))",
                "INITIAL_THROUGHPUT_RAMPUP_SECONDS": "((.:gatling-simulation-settings.PublicAuthSimulation.INITIAL_THROUGHPUT_RAMPUP_SECONDS))",
                "INITIAL_THROUGHPUT_DURATION_MINUTES": "((.:gatling-simulation-settings.PublicAuthSimulation.INITIAL_THROUGHPUT_DURATION_MINUTES))",
                "THROUGHPUT_TO_MAINTAIN": "((.:gatling-simulation-settings.PublicAuthSimulation.THROUGHPUT_TO_MAINTAIN))",
                "FINAL_THROUGHPUT_DURATION_MINUTES": "((.:gatling-simulation-settings.PublicAuthSimulation.FINAL_THROUGHPUT_DURATION_MINUTES))",
                "CONSTANT_USERS_AFTER_RAMPUP": "((.:gatling-simulation-settings.PublicAuthSimulation.CONSTANT_USERS_AFTER_RAMPUP))",
                "CONSTANT_DURATION_AFTER_RAMPUP": "((.:gatling-simulation-settings.PublicAuthSimulation.CONSTANT_DURATION_AFTER_RAMPUP))"
              }
            }
            EOF

            echo "SearchPaymentsSimulation"
            echo "------------------------------------------------------------------"
            cat <<EOF | tee ./run-codebuild-configuration/perf-tests-SearchPaymentsSimulation.json
            {
              "projectName": "perf-tests-test-perf-1",
              "sourceVersion": "",
              "secondarySourcesVersions": {},
              "environmentVariables": {
                "PERF_TESTS_VERSION": "((.:release-tag))",
                "GATLING_CLASS": "uk.gov.pay.SearchPaymentsSimulation",
                "USE_CONCURRENT": "((.:gatling-simulation-settings.SearchPaymentsSimulation.USE_CONCURRENT))",
                "RAMPUP_USERS_FROM": "((.:gatling-simulation-settings.SearchPaymentsSimulation.RAMPUP_USERS_FROM))",
                "RAMPUP_USERS_TO": "((.:gatling-simulation-settings.SearchPaymentsSimulation.RAMPUP_USERS_TO))",
                "RAMPUP_DURATION_IN_SECONDS": "((.:gatling-simulation-settings.SearchPaymentsSimulation.RAMPUP_DURATION_IN_SECONDS))",
                "INITIAL_THROUGHPUT_RPS": "((.:gatling-simulation-settings.SearchPaymentsSimulation.INITIAL_THROUGHPUT_RPS))",
                "INITIAL_THROUGHPUT_RAMPUP_SECONDS": "((.:gatling-simulation-settings.SearchPaymentsSimulation.INITIAL_THROUGHPUT_RAMPUP_SECONDS))",
                "INITIAL_THROUGHPUT_DURATION_MINUTES": "((.:gatling-simulation-settings.SearchPaymentsSimulation.INITIAL_THROUGHPUT_DURATION_MINUTES))",
                "THROUGHPUT_TO_MAINTAIN": "((.:gatling-simulation-settings.SearchPaymentsSimulation.THROUGHPUT_TO_MAINTAIN))",
                "FINAL_THROUGHPUT_DURATION_MINUTES": "((.:gatling-simulation-settings.SearchPaymentsSimulation.FINAL_THROUGHPUT_DURATION_MINUTES))",
                "CONSTANT_USERS_AFTER_RAMPUP": "((.:gatling-simulation-settings.SearchPaymentsSimulation.CONSTANT_USERS_AFTER_RAMPUP))",
                "CONSTANT_DURATION_AFTER_RAMPUP": "((.:gatling-simulation-settings.SearchPaymentsSimulation.CONSTANT_DURATION_AFTER_RAMPUP))"
              }
            }
            EOF

            echo "SelfServiceSimulation"
            echo "------------------------------------------------------------------"
            cat <<EOF | tee ./run-codebuild-configuration/perf-tests-SelfServiceSimulation.json
            {
              "projectName": "perf-tests-test-perf-1",
              "sourceVersion": "",
              "secondarySourcesVersions": {},
              "environmentVariables": {
                "PERF_TESTS_VERSION": "((.:release-tag))",
                "GATLING_CLASS": "uk.gov.pay.SelfServiceSimulation",
                "USE_CONCURRENT": "((.:gatling-simulation-settings.SelfServiceSimulation.USE_CONCURRENT))",
                "RAMPUP_USERS_FROM": "((.:gatling-simulation-settings.SelfServiceSimulation.RAMPUP_USERS_FROM))",
                "RAMPUP_USERS_TO": "((.:gatling-simulation-settings.SelfServiceSimulation.RAMPUP_USERS_TO))",
                "RAMPUP_DURATION_IN_SECONDS": "((.:gatling-simulation-settings.SelfServiceSimulation.RAMPUP_DURATION_IN_SECONDS))",
                "INITIAL_THROUGHPUT_RPS": "((.:gatling-simulation-settings.SelfServiceSimulation.INITIAL_THROUGHPUT_RPS))",
                "INITIAL_THROUGHPUT_RAMPUP_SECONDS": "((.:gatling-simulation-settings.SelfServiceSimulation.INITIAL_THROUGHPUT_RAMPUP_SECONDS))",
                "INITIAL_THROUGHPUT_DURATION_MINUTES": "((.:gatling-simulation-settings.SelfServiceSimulation.INITIAL_THROUGHPUT_DURATION_MINUTES))",
                "THROUGHPUT_TO_MAINTAIN": "((.:gatling-simulation-settings.SelfServiceSimulation.THROUGHPUT_TO_MAINTAIN))",
                "FINAL_THROUGHPUT_DURATION_MINUTES": "((.:gatling-simulation-settings.SelfServiceSimulation.FINAL_THROUGHPUT_DURATION_MINUTES))",
                "CONSTANT_USERS_AFTER_RAMPUP": "((.:gatling-simulation-settings.SelfServiceSimulation.CONSTANT_USERS_AFTER_RAMPUP))",
                "CONSTANT_DURATION_AFTER_RAMPUP": "((.:gatling-simulation-settings.SelfServiceSimulation.CONSTANT_DURATION_AFTER_RAMPUP))"
              }
            }
            EOF

jobs:
  - name: scale-and-run-all-simulations
    serial: true
    serial_groups: [perf-tests]
    plan:
      - in_parallel:
        - get: perf-tests-ecr-release
        - get: pay-ci
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_test_account_id)):role/pay-cd-pay-dev-codebuild-executor-perf-tests-test-perf-1
          AWS_ROLE_SESSION_NAME: perf-tests-test-assume-role
      - in_parallel:
        - load_var: role
          file: assume-role/assume-role.json
          format: json
        - load_var: release-tag
          file: perf-tests-ecr-release/tag
        - load_var: gatling-simulation-settings
          file: perf-tests-git-release/ci/gatling-simulation-settings.json
          format: json
      - <<: *pause-deploy-to-perf
      - <<: *scale-up-databases
      - <<: *scale-up-services
      - <<: *prepare-codebuild
      - try:
          task: public-auth-simulation-perf-test
          file: pay-ci/ci/tasks/run-codebuild.yml
          params:
            PATH_TO_CONFIG: "../../../../run-codebuild-configuration/perf-tests-PublicAuthSimulation.json"
            AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
            AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
            AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
      - try:
          task: search-payments-simulation-perf-test
          file: pay-ci/ci/tasks/run-codebuild.yml
          params:
            PATH_TO_CONFIG: "../../../../run-codebuild-configuration/perf-tests-SearchPaymentsSimulation.json"
            AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
            AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
            AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
      - try:
          task: self-service-simulation-perf-test
          file: pay-ci/ci/tasks/run-codebuild.yml
          params:
            PATH_TO_CONFIG: "../../../../run-codebuild-configuration/perf-tests-SelfServiceSimulation.json"
            AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
            AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
            AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
      - try:
          task: payment-simulation-perf-test
          file: pay-ci/ci/tasks/run-codebuild.yml
          params:
            PATH_TO_CONFIG: "../../../../run-codebuild-configuration/perf-tests-PaymentSimulation.json"
            AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
            AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
            AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
    ensure:
      do:
        - <<: *scale-down-services
        - <<: *scale-down-databases
        - <<: *unpause-deploy-to-perf

  - name: run-search-payment-simulation-perf-test
    serial: true
    serial_groups: [perf-tests]
    plan:
      - in_parallel:
        - get: perf-tests-ecr-release
        - get: pay-ci
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_test_account_id)):role/pay-cd-pay-dev-codebuild-executor-perf-tests-test-perf-1
          AWS_ROLE_SESSION_NAME: perf-tests-test-assume-role
      - in_parallel:
        - load_var: role
          file: assume-role/assume-role.json
          format: json
        - load_var: release-tag
          file: perf-tests-ecr-release/tag
        - load_var: gatling-simulation-settings
          file: perf-tests-git-release/ci/gatling-simulation-settings.json
          format: json
      - <<: *prepare-codebuild
      - task: search-payments-simulation-perf-test
        file: pay-ci/ci/tasks/run-codebuild.yml
        params:
          PATH_TO_CONFIG: "../../../../run-codebuild-configuration/perf-tests-SearchPaymentsSimulation.json"
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))

  - name: run-payment-simulation-perf-test
    serial: true
    serial_groups: [perf-tests]
    plan:
      - in_parallel:
        - get: perf-tests-ecr-release
        - get: pay-ci
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_test_account_id)):role/pay-cd-pay-dev-codebuild-executor-perf-tests-test-perf-1
          AWS_ROLE_SESSION_NAME: perf-tests-test-assume-role
      - in_parallel:
        - load_var: role
          file: assume-role/assume-role.json
          format: json
        - load_var: release-tag
          file: perf-tests-ecr-release/tag
        - load_var: gatling-simulation-settings
          file: perf-tests-git-release/ci/gatling-simulation-settings.json
          format: json
      - <<: *prepare-codebuild
      - task: payment-simulation-perf-test
        file: pay-ci/ci/tasks/run-codebuild.yml
        params:
          PATH_TO_CONFIG: "../../../../run-codebuild-configuration/perf-tests-PaymentSimulation.json"
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))

  - name: run-self-service-simulation-perf-test
    serial: true
    serial_groups: [perf-tests]
    plan:
      - in_parallel:
        - get: perf-tests-ecr-release
        - get: pay-ci
        - get: perf-tests-git-release
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_test_account_id)):role/pay-cd-pay-dev-codebuild-executor-perf-tests-test-perf-1
          AWS_ROLE_SESSION_NAME: perf-tests-test-assume-role
      - in_parallel:
        - load_var: role
          file: assume-role/assume-role.json
          format: json
        - load_var: release-tag
          file: perf-tests-ecr-release/tag
        - load_var: gatling-simulation-settings
          file: perf-tests-git-release/ci/gatling-simulation-settings.json
          format: json
      - <<: *prepare-codebuild
      - task: self-service-simulation-perf-test
        file: pay-ci/ci/tasks/run-codebuild.yml
        params:
          PATH_TO_CONFIG: "../../../../run-codebuild-configuration/perf-tests-SelfServiceSimulation.json"
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))

  - name: scale-up-databases
    serial: true
    serial_groups: [perf-tests]
    plan:
      - get: pay-ci
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_test_account_id)):role/pay-cd-pay-dev-codebuild-executor-perf-tests-test-perf-1
          AWS_ROLE_SESSION_NAME: perf-tests-test-assume-role
      - in_parallel:
        - load_var: role
          file: assume-role/assume-role.json
          format: json
      - <<: *scale-up-databases

  - name: scale-up-services
    serial: true
    serial_groups: [perf-tests]
    plan:
      - get: pay-ci
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_test_account_id)):role/pay-cd-pay-dev-codebuild-executor-perf-tests-test-perf-1
          AWS_ROLE_SESSION_NAME: perf-tests-test-assume-role
      - in_parallel:
        - load_var: role
          file: assume-role/assume-role.json
          format: json
      - <<: *scale-up-services

  - name: scale-up-all
    serial: true
    serial_groups: [perf-tests]
    plan:
      - get: pay-ci
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_test_account_id)):role/pay-cd-pay-dev-codebuild-executor-perf-tests-test-perf-1
          AWS_ROLE_SESSION_NAME: perf-tests-test-assume-role
      - in_parallel:
        - load_var: role
          file: assume-role/assume-role.json
          format: json
      - <<: *scale-up-databases
      - <<: *scale-up-services

  - name: scale-down-databases
    serial: true
    serial_groups: [perf-tests]
    plan:
      - get: pay-ci
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_test_account_id)):role/pay-cd-pay-dev-codebuild-executor-perf-tests-test-perf-1
          AWS_ROLE_SESSION_NAME: perf-tests-test-assume-role
      - in_parallel:
        - load_var: role
          file: assume-role/assume-role.json
          format: json
      - <<: *pause-deploy-to-perf
      - <<: *scale-down-databases
    ensure:
      <<: *unpause-deploy-to-perf

  - name: scale-down-services
    serial: true
    serial_groups: [perf-tests]
    plan:
      - get: pay-ci
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_test_account_id)):role/pay-cd-pay-dev-codebuild-executor-perf-tests-test-perf-1
          AWS_ROLE_SESSION_NAME: perf-tests-test-assume-role
      - in_parallel:
        - load_var: role
          file: assume-role/assume-role.json
          format: json
      - <<: *scale-down-services

  - name: scale-down-all
    serial: true
    serial_groups: [perf-tests]
    plan:
      - get: pay-ci
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_test_account_id)):role/pay-cd-pay-dev-codebuild-executor-perf-tests-test-perf-1
          AWS_ROLE_SESSION_NAME: perf-tests-test-assume-role
      - in_parallel:
        - load_var: role
          file: assume-role/assume-role.json
          format: json
      - <<: *pause-deploy-to-perf
      - <<: *scale-down-services
      - <<: *scale-down-databases
    ensure:
      <<: *unpause-deploy-to-perf

  - name: build-and-push-perf-tests
    plan:
      - in_parallel:
        - get: perf-tests-git-release
          trigger: true
        - get: pay-ci
      - task: parse-release-tag
        file: pay-ci/ci/tasks/parse-release-tag.yml
        input_mapping:
          git-release: perf-tests-git-release
      - in_parallel:
        - load_var: release-number
          file: tags/release-number
        - load_var: release-name
          file: perf-tests-git-release/.git/ref
        - load_var: release-sha
          file: tags/release-sha
      - task: build-perf-tests-image
        privileged: true
        params:
          LABEL_release_number: ((.:release-number))
          LABEL_release_name: ((.:release-name))
          LABEL_release_sha: ((.:release-sha))            
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: concourse/oci-build-task
          inputs:
            - name: perf-tests-git-release
              path: .
          outputs:
            - name: image
          run:
            path: build
      - in_parallel:
        - put: perf-tests-ecr-registry-test
          params:
            image: image/image.tar
            additional_tags: tags/tags
          get_params:
            skip_download: true
        - put: perf-tests-dockerhub
          params:
            image: image/image.tar
            additional_tags: tags/tags
          get_params:
            skip_download: true
    on_failure:
      put: slack-notification
      attempts: 10
      params:
        channel: '#govuk-pay-announce'
        silent: true
        text: ':red-circle: Failed to build and push pay-perftests image - <https://pay-cd.deploy.payments.service.gov.uk/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|Concourse build #$BUILD_NAME>'
        icon_emoji: ":concourse:"
        username: pay-concourse
    on_success:
      put: slack-notification
      attempts: 10
      params:
        channel: '#govuk-pay-activity'
        silent: true
        text: ':green-circle: Built and pushed pay-perftests image - <https://pay-cd.deploy.payments.service.gov.uk/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|Concourse build #$BUILD_NAME>'
        icon_emoji: ":concourse:"
        username: pay-concourse

  - name: update-perf-tests-pipeline
    plan:
      - get: perf-tests-pipeline
        trigger: true
      - set_pipeline: perf-tests
        file: perf-tests-pipeline/ci/pipelines/perf-tests.yml
