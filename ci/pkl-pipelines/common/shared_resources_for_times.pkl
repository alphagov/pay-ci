import "package://pkg.pkl-lang.org/github.com/alphagov/pkl-concourse-pipeline/pkl-concourse-pipeline@0.0.4#/Pipeline.pkl"

import ".../common/PayResources.pkl"

function payDailyTimeResource(_name: String, _start: String, _stop: String): Pipeline.Resource = new PayResources.PayTimeResource {
  name = _name
  source {
    ["start"] = _start
    ["stop"] = _stop
  }
}

function payWeeklyTimeResource(_name: String, _start: String, _stop: String, day: String): Pipeline.Resource =
  (payDailyTimeResource(_name, _start, _stop)) {
    source {
      ["days"] = new Listing { day }
    }
}

function payIntervalResource(_name: String, interval: String): Pipeline.Resource = new PayResources.PayTimeResource {
  name = _name
    source {
      ["interval"] = interval
    }
}

function withLocation(timezone: String) = new Mixin {
  source { ["location"] = timezone }
}

cronResourceType: Pipeline.ResourceType = new {
  name = "cron-resource"
  type = "registry-image"
  source = new {
    ["repository"] = "governmentdigitalservice/pay-cron-resource"
    ["tag"] = "latest"
  }
}

class PayCronResource extends Pipeline.Resource {
  type = "cron-resource"
  icon = "calendar-multiselect"
  source {
    ["location"] = "Europe/London"
  }
}

quarterlyCronResource: Pipeline.Resource = new PayCronResource {
  name = "quarterly"
  source {
    // At 00:00 on 1st of the month in Feb, May, Aug, and Nov.
    ["expression"] = "0 0 1 FEB,MAY,AUG,NOV *"
  }
}

getQuarterlyCronTrigger: Pipeline.GetStep = new {
  get = "quarterly"
  trigger = true
}

twiceYearlyCronResource: Pipeline.Resource = new PayCronResource {
  name = "twice-yearly"
  source {
    // At 00:00 on 1st of the month in May, and November.
    ["expression"] = "0 0 1 MAY,NOV *"
  }
}

getTwiceYearlyCronTrigger: Pipeline.GetStep = new {
  get = "twice-yearly"
  trigger = true
}
