amends "package://pkg.pkl-lang.org/github.com/alphagov/pkl-concourse-pipeline/pkl-concourse-pipeline@0.0.4#/Pipeline.pkl"

import "package://pkg.pkl-lang.org/github.com/alphagov/pkl-concourse-pipeline/pkl-concourse-pipeline@0.0.4#/Resources.pkl"

import "../common/pipeline_self_update.pkl"
import "../common/shared_resources.pkl"
import "../common/PayResources.pkl"

local class PayJsLibraryPipeline {
  name: String
  short_name: String
  really_short_name: String
  source_branch: String
  repo_org: String
}

local payJsLibraries: Listing<PayJsLibraryPipeline> = new {
  new {
    name = "pay-js-commons"
    short_name = "js-commons"
    really_short_name = "commons"
    source_branch = "master"
    repo_org = "alphagov"
  }
  new {
    name = "pay-js-metrics"
    short_name = "js-metrics"
    really_short_name = "metrics"
    source_branch = "main"
    repo_org = "alphagov"
  }
  new {
    name = "pay-run-amock"
    short_name = "run-amock"
    really_short_name = "run-amock"
    source_branch = "main"
    repo_org = "alphagov"
  }
  new {
    name = "pay-firehose-logging-lambda"
    short_name = "pay-firehose-logging-lambda"
    really_short_name = "pay-firehose-logging-lambda"
    source_branch = "main"
    repo_org = "kbottla"
  }
}

resources = new {
  pipeline_self_update.PayPipelineSelfUpdateResource("pay-deploy/pay-js.pkl", "master")
  shared_resources.payCiGitHubResource
  for (jsLibrary in payJsLibraries) {
    new Resources.GitResource {
      name = "\(jsLibrary.short_name)-git-release"
      source = new {
        branch = jsLibrary.source_branch
        uri = "https://github.com/\(jsLibrary.repo_org)/\(jsLibrary.name)"
        username = "alphagov-pay-ci-concourse"
        password = "((github-access-token))"
        commit_filter = new {
          exclude = new {"\\[automated release\\]"}
        }
      }
    }
  }
}

groups = new {
  for (jsLibrary in payJsLibraries) {
    new {
      name = jsLibrary.short_name
      jobs = new { "version-and-push-\(jsLibrary.really_short_name)" }
    }
  }
  pipeline_self_update.payPipelineSelfUpdateGroup
}

jobs = new {
  pipeline_self_update.PayPipelineSelfUpdateJob("pay-deploy/pay-js.pkl")
  for (jsLibrary in payJsLibraries) {
    new {
      name = "version-and-push-\(jsLibrary.really_short_name)"
      plan = new {
        new InParallelStep {
          in_parallel = new Listing<Step> {
            new GetStep {
              get = "\(jsLibrary.short_name)-git-release"
              trigger = true
            }
            new GetStep { get = "pay-ci" }
          }
        }
        new TaskStep {
          task = "npm-version-and-create-pr"
          file = "pay-ci/ci/tasks/npm-version-and-create-pr.yml"
          input_mapping = new {
            ["src"] = "\(jsLibrary.short_name)-git-release"
          }
          params = new {
            ["BASE"] = "\(jsLibrary.source_branch)"
            ["REPO"] = "\(jsLibrary.repo_org)/\(jsLibrary.name)"
            ["GITHUB_TOKEN"] = "((github-access-token))"
          }
        }
      }
    }
  }
}
