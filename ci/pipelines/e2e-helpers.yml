---
resources:
  - name: endtoend-src
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-endtoend
      branch: master
      username: alphagov-pay-ci
      password: ((github-access-token))

  - name: reverse-proxy-src
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-scripts
      branch: master
      username: alphagov-pay-ci
      password: ((github-access-token))
      paths:
        # Should trigger on any changes to this folder
        - images/proxy/*

  - name: stubs-git-release
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-stubs
      branch: master
      tag_regex: "alpha_release-(.*)"
      username: alphagov-pay-ci
      password: ((github-access-token))

  - name: pay-infra-src
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-infra
      branch: master
      username: alphagov-pay-ci
      password: ((github-access-token))

  - name: pay-ci
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-ci
      branch: master
      username: alphagov-pay-ci
      password: ((github-access-token))

  - name: endtoend-ecr-registry-test
    type: registry-image
    icon: docker
    source:
      repository: govukpay/endtoend
      variant: release
      aws_access_key_id: ((readonly_access_key_id))
      aws_secret_access_key: ((readonly_secret_access_key))
      aws_session_token: ((readonly_session_token))
      aws_role_arn: arn:aws:iam::((pay_aws_test_account_id)):role/concourse
      # Hardcode the test account registry ID for now. Needs to be a string, not a number
      aws_ecr_registry_id: "((pay_aws_test_account_id))"
      aws_region: eu-west-1
      tag: latest

  - name: endtoend-dockerhub
    type: registry-image
    icon: docker
    source:
      repository: govukpay/endtoend
      tag: latest-master
      password: ((docker-password))
      username: ((docker-username))

  - name: reverse-proxy-ecr-registry-test
    type: registry-image
    icon: docker
    source:
      repository: govukpay/reverse-proxy
      variant: release
      aws_access_key_id: ((readonly_access_key_id))
      aws_secret_access_key: ((readonly_secret_access_key))
      aws_session_token: ((readonly_session_token))
      aws_role_arn: arn:aws:iam::((pay_aws_test_account_id)):role/concourse
      # Hardcode the test account registry ID for now. Needs to be a string, not a number
      aws_ecr_registry_id: "((pay_aws_test_account_id))"
      aws_region: eu-west-1
      tag: latest

  - name: reverse-proxy-dockerhub
    type: registry-image
    icon: docker
    source:
      repository: govukpay/reverse-proxy
      tag: latest-master
      password: ((docker-password))
      username: ((docker-username))

  - name: stubs-ecr-registry-test
    type: registry-image
    icon: docker
    source:
      repository: govukpay/stubs
      tag: latest
      aws_access_key_id: ((readonly_access_key_id))
      aws_secret_access_key: ((readonly_secret_access_key))
      aws_session_token: ((readonly_session_token))
      aws_role_arn: arn:aws:iam::((pay_aws_test_account_id)):role/concourse
      aws_ecr_registry_id: "((pay_aws_test_account_id))"
      aws_region: eu-west-1

  - name: stubs-candidate-ecr-registry-test
    type: registry-image
    icon: docker
    source:
      repository: govukpay/stubs
      aws_access_key_id: ((readonly_access_key_id))
      aws_secret_access_key: ((readonly_secret_access_key))
      aws_session_token: ((readonly_session_token))
      aws_role_arn: arn:aws:iam::((pay_aws_test_account_id)):role/concourse
      aws_ecr_registry_id: "((pay_aws_test_account_id))"
      aws_region: eu-west-1
      variant: candidate

  - name: stubs-dockerhub
    type: registry-image
    icon: docker
    source:
      repository: govukpay/stubs
      tag: latest-master
      password: ((docker-password))
      username: ((docker-username))

  - name: postgres-11-alpine
    type: registry-image
    icon: docker
    check_every: 1h
    source:
      repository: postgres
      tag: 11-alpine
      username: ((docker-username))
      password: ((docker-password))

  - name: ecr-postgres-11-alpine
    type: registry-image
    icon: docker
    check_every: never
    source:
      repository: postgres
      tag: 11-alpine
      aws_access_key_id: ((readonly_access_key_id))
      aws_secret_access_key: ((readonly_secret_access_key))
      aws_session_token: ((readonly_session_token))
      aws_role_arn: arn:aws:iam::((pay_aws_test_account_id)):role/concourse
      # Hardcode the test account registry ID for now. Needs to be a string, not a number
      aws_ecr_registry_id: "((pay_aws_test_account_id))"
      aws_region: eu-west-1

  - name: roribio16-alpine-sqs-latest
    type: registry-image
    icon: docker
    check_every: 1h
    source:
      repository: roribio16/alpine-sqs
      tag: latest
      username: ((docker-username))
      password: ((docker-password))

  - name: ecr-roribio16-alpine-sqs-latest
    type: registry-image
    icon: docker
    check_every: never
    source:
      repository: roribio16/alpine-sqs
      tag: latest
      aws_access_key_id: ((readonly_access_key_id))
      aws_secret_access_key: ((readonly_secret_access_key))
      aws_session_token: ((readonly_session_token))
      aws_role_arn: arn:aws:iam::((pay_aws_test_account_id)):role/concourse
      # Hardcode the test account registry ID for now. Needs to be a string, not a number
      aws_ecr_registry_id: "((pay_aws_test_account_id))"
      aws_region: eu-west-1

  - name: selenium-standalone-chrome-3-141-59-iron
    type: registry-image
    icon: docker
    check_every: 1h
    source:
      repository: selenium/standalone-chrome
      tag: 3.141.59-iron
      username: ((docker-username))
      password: ((docker-password))

  - name: ecr-selenium-standalone-chrome-3-141-59-iron
    type: registry-image
    icon: docker
    check_every: never
    source:
      repository: selenium/standalone-chrome
      tag: 3.141.59-iron
      aws_access_key_id: ((readonly_access_key_id))
      aws_secret_access_key: ((readonly_secret_access_key))
      aws_session_token: ((readonly_session_token))
      aws_role_arn: arn:aws:iam::((pay_aws_test_account_id)):role/concourse
      # Hardcode the test account registry ID for now. Needs to be a string, not a number
      aws_ecr_registry_id: "((pay_aws_test_account_id))"
      aws_region: eu-west-1

  - name: slack-notification
    type: slack-notification
    source:
      url: https://hooks.slack.com/services/((slack-notification-secret))

resource_types:
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource
      tag: latest

# Builds the Docker images used by end-to-end tests and pushes to ECR (and Dockerhub)
jobs:
  - name: build-and-push-endtoend-to-test-ecr
    plan:
      - get: endtoend-src
        trigger: true
      - task: build-endtoend-image
        privileged: true
        params:
          CONTEXT: endtoend-src
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: vito/oci-build-task
          inputs:
            - name: endtoend-src
          outputs:
            - name: image
          run:
            path: build
      - in_parallel:
          - put: endtoend-ecr-registry-test
            params:
              image: image/image.tar
          - put: endtoend-dockerhub
            params:
              image: image/image.tar
    on_failure:
      put: slack-notification
      attempts: 10
      params:
        channel: '#govuk-pay-starling'
        silent: true
        text: ':red-circle: Failed to build and push pay-endtoend - <https://pay-cd.deploy.payments.service.gov.uk/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|Concourse build #$BUILD_NAME>'
        icon_emoji: ":concourse:"
        username: pay-concourse
    on_success:
      put: slack-notification
      attempts: 10
      params:
        channel: '#govuk-pay-activity'
        silent: true
        text: ':green-circle: Built and pushed pay-endtoend - <https://pay-cd.deploy.payments.service.gov.uk/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|Concourse build #$BUILD_NAME>'
        icon_emoji: ":concourse:"
        username: pay-concourse

  - name: build-and-push-reverse-proxy-to-test-ecr
    plan:
      - get: reverse-proxy-src
        trigger: true
      - get: pay-infra-src
      - task: find-and-compile-naxsi-rules
        config:
          container_limits: { }
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: govukpay/concourse-runner
          inputs:
            - name: pay-infra-src
            - name: reverse-proxy-src
          outputs:
            - name: reverse-proxy-src
          run:
            path: /bin/sh
            args:
              - -ec
              - |
                cd reverse-proxy-src/images/proxy
                mkdir target

                # Search pay-infra files for naxsi rules and copy to current 'target' directory
                # See https://github.com/alphagov/pay-scripts/blob/master/images/proxy/build-latest-master.sh
                prod_naxsi_rules_source=../../../pay-infra-src/provisioning/terraform/modules/pay_microservices_v2
                find "$prod_naxsi_rules_source" -name \*.naxsi -exec cp {} target \;
      - task: build-reverse-proxy-image
        privileged: true
        params:
          CONTEXT: reverse-proxy-src/images/proxy/
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: vito/oci-build-task
          inputs:
          - name: reverse-proxy-src
          outputs:
          - name: image
          run:
            path: build
      - in_parallel:
        - put: reverse-proxy-ecr-registry-test
          params:
            image: image/image.tar
        - put: reverse-proxy-dockerhub
          params:
            image: image/image.tar
    on_failure:
      put: slack-notification
      attempts: 10
      params:
        channel: '#govuk-pay-starling'
        silent: true
        text: ':red-circle: Failed to build and push pay-reverse-proxy - <https://pay-cd.deploy.payments.service.gov.uk/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|Concourse build #$BUILD_NAME>'
        icon_emoji: ":concourse:"
        username: pay-concourse
    on_success:
      put: slack-notification
      attempts: 10
      params:
        channel: '#govuk-pay-activity'
        silent: true
        text: ':green-circle: Built and pushed pay-reverse-proxy - <https://pay-cd.deploy.payments.service.gov.uk/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|Concourse build #$BUILD_NAME>'
        icon_emoji: ":concourse:"
        username: pay-concourse

  - name: build-and-push-stubs-candidate
    plan:
      - in_parallel:
        - get: stubs-git-release
          trigger: true
        - get: pay-ci
      - in_parallel:
        - task: build-stubs-image
          privileged: true
          params:
            CONTEXT: stubs-git-release
          config:
            platform: linux
            image_resource:
              type: registry-image
              source:
                repository: vito/oci-build-task
            inputs:
            - name: stubs-git-release
            outputs:
            - name: image
            run:
              path: build
        - task: parse-release-tag
          file: pay-ci/ci/tasks/parse-release-tag.yml
          input_mapping:
            git-release: stubs-git-release
      - put: stubs-candidate-ecr-registry-test
        params:
          image: image/image.tar
          additional_tags: tags/candidate-tag
        get_params:
          skip_download: true
    on_failure:
      put: slack-notification
      attempts: 10
      params:
        channel: '#govuk-pay-starling'
        silent: true
        text: ':red-circle: Failed to build and push pay-stubs candidate image - <https://pay-cd.deploy.payments.service.gov.uk/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|Concourse build #$BUILD_NAME>'
        icon_emoji: ":concourse:"
        username: pay-concourse
    on_success:
      put: slack-notification
      attempts: 10
      params:
        channel: '#govuk-pay-activity'
        silent: true
        text: ':green-circle: Built and pushed pay-stubs candidate image - <https://pay-cd.deploy.payments.service.gov.uk/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|Concourse build #$BUILD_NAME>'
        icon_emoji: ":concourse:"
        username: pay-concourse

  - name: stubs-e2e
    plan:
      - in_parallel:
        - get: stubs-candidate-ecr-registry-test 
          passed: [build-and-push-stubs-candidate]
          trigger: true
          params:
            format: oci
        - get: pay-ci
      - in_parallel:
        - task: parse-candidate-tag
          file: pay-ci/ci/tasks/parse-candidate-tag.yml
          input_mapping:
            ecr-repo: stubs-candidate-ecr-registry-test
        - task: assume-role
          file: pay-ci/ci/tasks/assume-role.yml
          params:
            AWS_ROLE_ARN: arn:aws:iam::((pay_aws_test_account_id)):role/pay-cd-pay-dev-codebuild-executor-test-12
            AWS_ROLE_SESSION_NAME: e2e-test-assume-role
      - in_parallel:
        - load_var: candidate_image_tag
          file: stubs-candidate-ecr-registry-test/tag
        - load_var: role
          file: assume-role/assume-role.json
          format: json
      - task: prepare-codebuild
        file: pay-ci/ci/tasks/prepare-e2e-codebuild.yml
        params:
          PROJECT_UNDER_TEST: stubs
          RELEASE_TAG_UNDER_TEST: ((.:candidate_image_tag))
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
      - in_parallel:
        - task: run-codebuild-card
          file: pay-ci/ci/tasks/run-codebuild.yml
          params:
            PATH_TO_CONFIG: "../../../../run-codebuild-configuration/card.json"
            AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
            AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
            AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
        - task: run-codebuild-products
          file: pay-ci/ci/tasks/run-codebuild.yml
          params:
            PATH_TO_CONFIG: "../../../../run-codebuild-configuration/products.json"
            AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
            AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
            AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
      - in_parallel:
        - put: stubs-ecr-registry-test
          params:
            image: stubs-candidate-ecr-registry-test/image.tar
            additional_tags: parse-candidate-tag/release-tag
          get_params:
            skip_download: true
        - put: stubs-dockerhub
          params:
            image: stubs-candidate-ecr-registry-test/image.tar
          get_params:
            skip_download: true
    on_failure:
      put: slack-notification
      attempts: 10
      params:
        channel: '#govuk-pay-starling'
        silent: true
        text: ':red-circle: pay-stubs failed post-merge e2e tests - <https://pay-cd.deploy.payments.service.gov.uk/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|Concourse build #$BUILD_NAME>'
        icon_emoji: ":concourse:"
        username: pay-concourse
    on_success:
      put: slack-notification
      attempts: 10
      params:
        channel: '#govuk-pay-activity'
        silent: true
        text: ':green-circle: pay-stubs passed post-merge e2e tests and was pushed as a final release - <https://pay-cd.deploy.payments.service.gov.uk/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|Concourse build #$BUILD_NAME>'
        icon_emoji: ":concourse:"
        username: pay-concourse


  - name: copy-postgres-11
    plan:
      - get: postgres-11-alpine
        trigger: true
        params:
          format: oci
      - put: ecr-postgres-11-alpine
        params:
          image: postgres-11-alpine/image.tar
    on_failure:
      put: slack-notification
      attempts: 10
      params:
        channel: '#govuk-pay-starling'
        silent: true
        text: ':red-circle: Failed copying postgres:11-alpine image from Docker Hub to ECR - <https://pay-cd.deploy.payments.service.gov.uk/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|Concourse build #$BUILD_NAME>'
        icon_emoji: ":concourse:"
        username: pay-concourse
    on_success:
      put: slack-notification
      attempts: 10
      params:
        channel: '#govuk-pay-activity'
        silent: true
        text: ':green-circle: Copied postgres:11-alpine image from Docker Hub to ECR - <https://pay-cd.deploy.payments.service.gov.uk/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|Concourse build #$BUILD_NAME>'
        icon_emoji: ":concourse:"
        username: pay-concourse

  - name: copy-roribio16-alpine-sqs-latest
    plan:
      - get: roribio16-alpine-sqs-latest
        trigger: true
        params:
          format: oci
      - put: ecr-roribio16-alpine-sqs-latest
        params:
          image: roribio16-alpine-sqs-latest/image.tar
    on_failure:
      put: slack-notification
      attempts: 10
      params:
        channel: '#govuk-pay-starling'
        silent: true
        text: ':red-circle: Failed copying roribio16/alpine-sqs:latest image from Docker Hub to ECR - <https://pay-cd.deploy.payments.service.gov.uk/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|Concourse build #$BUILD_NAME>'
        icon_emoji: ":concourse:"
        username: pay-concourse
    on_success:
      put: slack-notification
      attempts: 10
      params:
        channel: '#govuk-pay-activity'
        silent: true
        text: ':green-circle: Copied roribio16/alpine-sqs:latest image from Docker Hub to ECR - <https://pay-cd.deploy.payments.service.gov.uk/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|Concourse build #$BUILD_NAME>'
        icon_emoji: ":concourse:"
        username: pay-concourse

  - name: copy-selenium-standalone-chrome-3-141-59-iron
    plan:
      - get: selenium-standalone-chrome-3-141-59-iron
        trigger: true
        params:
          format: oci
      - put: ecr-selenium-standalone-chrome-3-141-59-iron
        params:
          image: selenium-standalone-chrome-3-141-59-iron/image.tar
    on_failure:
      put: slack-notification
      attempts: 10
      params:
        channel: '#govuk-pay-starling'
        silent: true
        text: ':red-circle: Failed copying selenium/standalone-chrome:3-141-59-iron image from Docker Hub to ECR - <https://pay-cd.deploy.payments.service.gov.uk/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|Concourse build #$BUILD_NAME>'
        icon_emoji: ":concourse:"
        username: pay-concourse
    on_success:
      put: slack-notification
      attempts: 10
      params:
        channel: '#govuk-pay-activity'
        silent: true
        text: ':green-circle: Copied selenium/standalone-chrome:3-141-59-iron image from Docker Hub to ECR - <https://pay-cd.deploy.payments.service.gov.uk/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|Concourse build #$BUILD_NAME>'
        icon_emoji: ":concourse:"
        username: pay-concourse
