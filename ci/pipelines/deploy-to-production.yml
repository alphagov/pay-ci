definitions:
  aws_assumed_role_creds: &aws_assumed_role_creds
    AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
    AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
    AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))

  wait_for_deploy_params: &wait_for_deploy_params
    <<: *aws_assumed_role_creds
    APPLICATION_IMAGE_TAG: ((.:application_image_tag))
    NGINX_IMAGE_TAG: ((.:nginx_image_tag))
    TELEGRAF_IMAGE_TAG: ((.:telegraf_image_tag))
    ENVIRONMENT: production-2

  deploy_params: &deploy_params
    <<: *aws_assumed_role_creds
    APPLICATION_IMAGE_TAG: ((.:application_image_tag))
    NGINX_IMAGE_TAG: ((.:nginx_image_tag))
    TELEGRAF_IMAGE_TAG: ((.:telegraf_image_tag))
    ACCOUNT: production
    ENVIRONMENT: production-2

  check_release_versions_params: &check_release_versions_params
    <<: *aws_assumed_role_creds
    AWS_REGION: "eu-west-1"
    CLUSTER_NAME: "production-2-fargate"
    APPLICATION_IMAGE_TAG: ((.:application_image_tag))
    TELEGRAF_IMAGE_TAG: ((.:telegraf_image_tag))
    NGINX_IMAGE_TAG: ((.:nginx_image_tag))

  aws_prod_config: &aws_prod_config
    aws_access_key_id: ((readonly_access_key_id))
    aws_secret_access_key: ((readonly_secret_access_key))
    aws_session_token: ((readonly_session_token))
    aws_role_arn: arn:aws:iam::((pay_aws_prod_account_id)):role/concourse
    aws_ecr_registry_id: "((pay_aws_prod_account_id))"
    aws_region: eu-west-1
  put_start_slack_notification: &put_start_slack_notification
    put: slack-notification
    params:
      channel: '#govuk-pay-announce'
      text: "((.:start_snippet)) \n\n
            <https://cd.gds-reliability.engineering/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|Concourse build #$BUILD_NAME>"

  put_success_slack_notification_p1: &put_success_slack_notification_p1
    on_success:
      put: slack-notification
      params:
        channel: '#govuk-pay-announce'
        text: "((.:success_snippet)) \n\n
              <https://cd.gds-reliability.engineering/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|Concourse build #$BUILD_NAME>"

  put_success_slack_notification: &put_success_slack_notification
    on_success:
      put: slack-notification
      params:
        channel: '#govuk-pay-activity'
        text: "((.:success_snippet)) \n\n
              Build: https://cd.gds-reliability.engineering/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"

  put_failure_slack_notification: &put_failure_slack_notification
    on_failure:
      put: slack-notification
      params:
        channel: '#govuk-pay-announce'
        text: "((.:failure_snippet)) \n
              - <https://cd.gds-reliability.engineering/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|Concourse build #$BUILD_NAME>"

  snippet_params_all_versions: &snippet_params_all_versions
    ENV: production-2
    APPLICATION_IMAGE_TAG: ((.:application_image_tag))
    TELEGRAF_IMAGE_TAG: ((.:telegraf_image_tag))
    NGINX_IMAGE_TAG: ((.:nginx_image_tag))

  snippet_params_app_version: &snippet_params_app_version
    ENV: production-2
    APPLICATION_IMAGE_TAG: ((.:application_image_tag))

  # Separate tasks for each combination of scenario/environment
  smoke-test-run-all-on-production: &smoke-test-run-all-on-production
    limit: 8
    steps:
      - task: run_create_card_payment_sandbox-production
        file: pay-ci/ci/tasks/run-smoke-test.yml
        params:
          <<: *aws_assumed_role_creds
          AWS_REGION: "eu-west-1"
          SMOKE_TEST_NAME: "card_sandbox_prod"
      - task: run_create_card_payment_smartpay-production
        file: pay-ci/ci/tasks/run-smoke-test.yml
        params:
          <<: *aws_assumed_role_creds
          AWS_REGION: "eu-west-1"
          SMOKE_TEST_NAME: "card_smartpay_prod"
      - task: run_create_card_payment_worldpay_with_3ds-production
        file: pay-ci/ci/tasks/run-smoke-test.yml
        params:
          <<: *aws_assumed_role_creds
          AWS_REGION: "eu-west-1"
          SMOKE_TEST_NAME: "card_wpay_3ds_prod"
      - task: run_create_card_payment_worldpay_with_3ds2-production
        file: pay-ci/ci/tasks/run-smoke-test.yml
        params:
          <<: *aws_assumed_role_creds
          AWS_REGION: "eu-west-1"
          SMOKE_TEST_NAME: "card_wpay_3ds2_prod"
      - task: run_create_card_payment_worldpay_with_3ds2_exemption-production
        file: pay-ci/ci/tasks/run-smoke-test.yml
        params:
          <<: *aws_assumed_role_creds
          AWS_REGION: "eu-west-1"
          SMOKE_TEST_NAME: "card_wpay_3ds2ex_prod"
      - task: run_create_card_payment_worldpay_without_3ds-production
        file: pay-ci/ci/tasks/run-smoke-test.yml
        params:
          <<: *aws_assumed_role_creds
          AWS_REGION: "eu-west-1"
          SMOKE_TEST_NAME: "card_wpay_prod"
      - task: run_cancel_card_payment_sandbox-production
        file: pay-ci/ci/tasks/run-smoke-test.yml
        params:
          <<: *aws_assumed_role_creds
          AWS_REGION: "eu-west-1"
          SMOKE_TEST_NAME: "cancel_sandbox_prod"
      - task: run_use_payment_link_sandbox-production
        file: pay-ci/ci/tasks/run-smoke-test.yml
        params:
          <<: *aws_assumed_role_creds
          AWS_REGION: "eu-west-1"
          SMOKE_TEST_NAME: "pymntlnk_sandbox_prod"

resources:
  - name: deploy-to-prod-pipeline-definition
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-ci
      branch: master
      paths:
        - ci/pipelines/deploy-to-production.yml
  - name: pay-ci
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-ci
      branch: master
  - name: pay-infra
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-infra
      branch: master
      username: alphagov-pay-ci
      password: ((github-access-token))
  - name: toolbox-ecr-registry-prod
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/toolbox
      variant: release
      <<: *aws_prod_config
  - name: frontend-ecr-registry-prod
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/frontend
      variant: release
      <<: *aws_prod_config
  - name: adminusers-ecr-registry-prod
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/adminusers
      variant: release
      <<: *aws_prod_config
  - name: products-ecr-registry-prod
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/products
      variant: release
      <<: *aws_prod_config
  - name: products-ui-ecr-registry-prod
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/products-ui
      variant: release
      <<: *aws_prod_config
  - name: publicauth-ecr-registry-prod
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/publicauth
      variant: release
      <<: *aws_prod_config
  - name: cardid-ecr-registry-prod
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/cardid
      variant: release
      <<: *aws_prod_config
  - name: connector-ecr-registry-prod
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/connector
      variant: release
      <<: *aws_prod_config
  - name: selfservice-ecr-registry-prod
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/selfservice
      variant: release
      <<: *aws_prod_config
  - name: telegraf-ecr-registry-prod
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/telegraf
      variant: release
      <<: *aws_prod_config
  - name: nginx-proxy-ecr-registry-prod
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/docker-nginx-proxy
      variant: release
      <<: *aws_prod_config
  - name: nginx-forward-proxy-ecr-registry-prod
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/nginx-forward-proxy
      variant: release
      <<: *aws_prod_config
  - name: ledger-ecr-registry-prod
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/ledger
      variant: release
      <<: *aws_prod_config
  - name: publicapi-ecr-registry-prod
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/publicapi
      variant: release
      <<: *aws_prod_config
  - name: slack-notification
    type: slack-notification
    source:
      url: https://hooks.slack.com/services/((slack-notification-secret))

resource_types:
  - name: registry-image-resource-1-1-0
    type: registry-image
    source:
      repository: concourse/registry-image-resource
      tag: "1.1.0"
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource
      tag: latest

groups:
  - name: pipeline-meta-update
    jobs:
      - update-deploy-to-prod-pipeline
  - name: toolbox
    jobs:
      - deploy-toolbox-to-prod
      - smoke-test-toolbox-on-prod
  - name: frontend
    jobs:
      - deploy-frontend-to-prod
      - smoke-test-frontend-on-prod
      - frontend-pact-tag
  - name: adminusers
    jobs:
      - deploy-adminusers-to-prod
      - smoke-test-adminusers-on-prod
      - adminusers-pact-tag
  - name: products
    jobs:
      - deploy-products-to-prod
      - smoke-test-products-on-prod
      - products-pact-tag
  - name: products-ui
    jobs:
      - deploy-products-ui-to-prod
      - smoke-test-products-ui-on-prod
      - products-ui-pact-tag
  - name: publicauth
    jobs:
      - deploy-publicauth-to-prod
      - smoke-test-publicauth-on-prod
  - name: cardid
    jobs:
      - deploy-cardid-to-prod
      - smoke-test-cardid-on-prod
  - name: connector
    jobs:
      - deploy-connector-to-prod
      - smoke-test-connector-on-prod
      - connector-pact-tag
  - name: selfservice
    jobs:
      - deploy-selfservice-to-prod
      - smoke-test-selfservice-on-prod
      - selfservice-pact-tag
  - name: publicapi
    jobs:
      - deploy-publicapi-to-prod
      - smoke-test-publicapi-on-prod
      - publicapi-pact-tag
  - name: ledger
    jobs:
      - deploy-ledger-to-prod
      - smoke-test-ledger-on-prod
      - ledger-pact-tag
  - name: telegraf
    jobs:
      - deploy-toolbox-to-prod
  - name: nginx-forward-proxy
    jobs:
      - deploy-frontend-to-prod
  - name: nginx-proxy
    jobs:
      - deploy-toolbox-to-prod

jobs:
  - name: update-deploy-to-prod-pipeline
    plan:
      - get: deploy-to-prod-pipeline-definition
        trigger: true
      - set_pipeline: deploy-to-production
        file: deploy-to-prod-pipeline-definition/ci/pipelines/deploy-to-production.yml

  - name: deploy-selfservice-to-prod
    plan:
      - get: selfservice-ecr-registry-prod
        trigger: true
      - get: nginx-proxy-ecr-registry-prod
      - get: telegraf-ecr-registry-prod
      - get: pay-infra
      - get: pay-ci
      - load_var: application_image_tag
        file: selfservice-ecr-registry-prod/tag
      - load_var: nginx_image_tag
        file: nginx-proxy-ecr-registry-prod/tag
      - load_var: telegraf_image_tag
        file: telegraf-ecr-registry-prod/tag
      - task: create-notification-snippets
        file: pay-ci/ci/tasks/create-notification-snippets.yml
        params:
          APP_NAME: selfservice
          ACTION_NAME: Deployment
          <<: *snippet_params_all_versions
      - load_var: success_snippet
        file: snippet/success
      - load_var: failure_snippet
        file: snippet/failure
      - load_var: start_snippet
        file: snippet/start
      - <<: *put_start_slack_notification
      - task: get-git-sha-for-release-tag
        file: pay-ci/ci/tasks/get-git-sha-for-release-tag.yml
        params:
          APP_NAME: selfservice
          APPLICATION_IMAGE_TAG: ((.:application_image_tag))
      - load_var: git-sha
        file: git-sha/git-sha
      - task: check-pact-compatibility
        file: pay-ci/ci/tasks/check-pact-compatibility.yml
        params:
          GIT_SHA: ((.:git-sha))
          APP_NAME: selfservice
          PACT_TAG: production-fargate
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_prod_account_id)):role/concourse
          AWS_ROLE_SESSION_NAME: terraform-prod-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - task: check-release-versions
        file: pay-ci/ci/tasks/check-release-versions.yml
        params:
          <<: *check_release_versions_params
          APP_NAME: selfservice
      - task: deploy-to-prod
        file: pay-ci/ci/tasks/deploy-app.yml
        params:
          APP_NAME: selfservice
          <<: *deploy_params
      - task: wait-for-deploy
        file: pay-ci/ci/tasks/wait-for-deploy.yml
        params:
          APP_NAME: selfservice
          <<: *wait_for_deploy_params
    <<: *put_success_slack_notification_p1
    <<: *put_failure_slack_notification

  - name: smoke-test-selfservice-on-prod
    plan:
      - get: selfservice-ecr-registry-prod
        trigger: true
        passed: [deploy-selfservice-to-prod]
      - get: pay-ci
      - load_var: application_image_tag
        file: selfservice-ecr-registry-prod/tag
      - task: create-notification-snippets
        file: pay-ci/ci/tasks/create-notification-snippets.yml
        params:
          APP_NAME: selfservice
          ACTION_NAME: Smoke test
          <<: *snippet_params_app_version
      - load_var: success_snippet
        file: snippet/success
      - load_var: failure_snippet
        file: snippet/failure
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_deploy_account_id)):role/concourse_trigger_canary
          AWS_ROLE_SESSION_NAME: trigger-canary-deploy-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - in_parallel:
          <<: *smoke-test-run-all-on-production
    <<: *put_success_slack_notification
    <<: *put_failure_slack_notification

  - name: selfservice-pact-tag
    plan:
      - get: selfservice-ecr-registry-prod
        passed: [smoke-test-selfservice-on-prod]
        trigger: true
      - load_var: application_image_tag
        file: selfservice-ecr-registry-prod/tag
      - get: pay-ci
      - task: create-notification-snippets
        file: pay-ci/ci/tasks/create-notification-snippets.yml
        params:
          APP_NAME: selfservice
          ACTION_NAME: Pact tag
          <<: *snippet_params_app_version
      - load_var: success_snippet
        file: snippet/success
      - load_var: failure_snippet
        file: snippet/failure
      - task: get-git-sha-for-release-tag
        file: pay-ci/ci/tasks/get-git-sha-for-release-tag.yml
        params:
          APP_NAME: selfservice
          APPLICATION_IMAGE_TAG: ((.:application_image_tag))
      - load_var: git-sha
        file: git-sha/git-sha
      - task: tag-pact
        file: pay-ci/ci/tasks/pact-tag.yml
        params:
          GIT_SHA: ((.:git-sha))
          APP_NAME: selfservice
          PACT_TAG: production-fargate
    <<: *put_success_slack_notification
    <<: *put_failure_slack_notification

  - name: deploy-connector-to-prod
    plan:
      - get: connector-ecr-registry-prod
      - get: nginx-proxy-ecr-registry-prod
      - get: telegraf-ecr-registry-prod
      - get: pay-infra
      - get: pay-ci
      - load_var: application_image_tag
        file: connector-ecr-registry-prod/tag
      - load_var: nginx_image_tag
        file: nginx-proxy-ecr-registry-prod/tag
      - load_var: telegraf_image_tag
        file: telegraf-ecr-registry-prod/tag
      - task: create-notification-snippets
        file: pay-ci/ci/tasks/create-notification-snippets.yml
        params:
          APP_NAME: connector
          ACTION_NAME: Deployment
          <<: *snippet_params_all_versions
      - load_var: success_snippet
        file: snippet/success
      - load_var: failure_snippet
        file: snippet/failure
      - load_var: start_snippet
        file: snippet/start
      - <<: *put_start_slack_notification
      - task: get-git-sha-for-release-tag
        file: pay-ci/ci/tasks/get-git-sha-for-release-tag.yml
        params:
          APP_NAME: connector
          APPLICATION_IMAGE_TAG: ((.:application_image_tag))
      - load_var: git-sha
        file: git-sha/git-sha
      - task: check-pact-compatibility
        file: pay-ci/ci/tasks/check-pact-compatibility.yml
        params:
          GIT_SHA: ((.:git-sha))
          APP_NAME: connector
          PACT_TAG: production-fargate
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_prod_account_id)):role/concourse
          AWS_ROLE_SESSION_NAME: terraform-prod-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - task: check-release-versions
        file: pay-ci/ci/tasks/check-release-versions.yml
        params:
          <<: *check_release_versions_params
          APP_NAME: connector
      - task: deploy-to-prod
        file: pay-ci/ci/tasks/deploy-app.yml
        params:
          APP_NAME: connector
          <<: *deploy_params
      - task: wait-for-deploy
        file: pay-ci/ci/tasks/wait-for-deploy.yml
        params:
          APP_NAME: connector
          <<: *wait_for_deploy_params
    <<: *put_success_slack_notification_p1
    <<: *put_failure_slack_notification

  - name: smoke-test-connector-on-prod
    plan:
      - get: connector-ecr-registry-prod
        trigger: true
        passed: [deploy-connector-to-prod]
      - get: pay-ci
      - load_var: application_image_tag
        file: connector-ecr-registry-staging/tag
      - task: create-notification-snippets
        file: pay-ci/ci/tasks/create-notification-snippets.yml
        params:
          APP_NAME: connector
          ACTION_NAME: Smoke test
          <<: *snippet_params_app_version
      - load_var: success_snippet
        file: snippet/success
      - load_var: failure_snippet
        file: snippet/failure
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_deploy_account_id)):role/concourse_trigger_canary
          AWS_ROLE_SESSION_NAME: trigger-canary-deploy-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - in_parallel:
          <<: *smoke-test-run-all-on-production
    <<: *put_success_slack_notification
    <<: *put_failure_slack_notification

  - name: connector-pact-tag
    plan:
      - get: connector-ecr-registry-prod
        passed: [smoke-test-connector-on-prod]
        trigger: true
      - load_var: application_image_tag
        file: connector-ecr-registry-prod/tag
      - get: pay-ci
      - task: create-notification-snippets
        file: pay-ci/ci/tasks/create-notification-snippets.yml
        params:
          APP_NAME: connector
          ACTION_NAME: Pact tag
          <<: *snippet_params_app_version
      - load_var: success_snippet
        file: snippet/success
      - load_var: failure_snippet
        file: snippet/failure
      - task: get-git-sha-for-release-tag
        file: pay-ci/ci/tasks/get-git-sha-for-release-tag.yml
        params:
          APP_NAME: connector
          APPLICATION_IMAGE_TAG: ((.:application_image_tag))
      - load_var: git-sha
        file: git-sha/git-sha
      - task: tag-pact
        file: pay-ci/ci/tasks/pact-tag.yml
        params:
          GIT_SHA: ((.:git-sha))
          APP_NAME: connector
          PACT_TAG: production-fargate
    <<: *put_success_slack_notification
    <<: *put_failure_slack_notification

  - name: deploy-toolbox-to-prod
    plan:
      - get: toolbox-ecr-registry-prod
        trigger: true
      - get: telegraf-ecr-registry-prod
        trigger: true
      - get: nginx-proxy-ecr-registry-prod
        trigger: true
      - get: pay-infra
      - get: pay-ci
      - load_var: application_image_tag
        file: toolbox-ecr-registry-prod/tag
      - load_var: telegraf_image_tag
        file: telegraf-ecr-registry-prod/tag
      - load_var: nginx_image_tag
        file: nginx-proxy-ecr-registry-prod/tag
      - task: create-notification-snippets
        file: pay-ci/ci/tasks/create-notification-snippets.yml
        params:
          APP_NAME: toolbox
          ACTION_NAME: Deployment
          <<: *snippet_params_all_versions
      - load_var: success_snippet
        file: snippet/success
      - load_var: failure_snippet
        file: snippet/failure
      - load_var: start_snippet
        file: snippet/start
      - <<: *put_start_slack_notification
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_prod_account_id)):role/concourse
          AWS_ROLE_SESSION_NAME: terraform-prod-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - task: check-release-versions
        file: pay-ci/ci/tasks/check-release-versions.yml
        params:
          <<: *check_release_versions_params
          APP_NAME: toolbox
      - task: deploy-to-prod
        file: pay-ci/ci/tasks/deploy-app.yml
        params:
          APP_NAME: toolbox
          <<: *deploy_params
      - task: wait-for-deploy
        file: pay-ci/ci/tasks/wait-for-deploy.yml
        params:
          APP_NAME: toolbox
          <<: *wait_for_deploy_params
    <<: *put_success_slack_notification_p1
    <<: *put_failure_slack_notification

  - name: smoke-test-toolbox-on-prod
    plan:
      - get: toolbox-ecr-registry-prod
        trigger: true
        passed: [deploy-toolbox-to-prod]
      - get: pay-ci
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_deploy_account_id)):role/concourse_trigger_canary
          AWS_ROLE_SESSION_NAME: trigger-canary-deploy-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - in_parallel:
          <<: *smoke-test-run-all-on-production

  - name: deploy-frontend-to-prod
    plan:
      - get: frontend-ecr-registry-prod
      - get: nginx-forward-proxy-ecr-registry-prod
      - get: nginx-proxy-ecr-registry-prod
      - get: telegraf-ecr-registry-prod
      - get: pay-infra
      - get: pay-ci
      - load_var: application_image_tag
        file: frontend-ecr-registry-prod/tag
      - load_var: nginx_image_tag
        file: nginx-proxy-ecr-registry-prod/tag
      - load_var: nginx_forward_proxy_image_tag
        file: nginx-forward-proxy-ecr-registry-prod/tag
      - load_var: telegraf_image_tag
        file: telegraf-ecr-registry-prod/tag
      - task: create-notification-snippets
        file: pay-ci/ci/tasks/create-notification-snippets.yml
        params:
          APP_NAME: frontend
          ACTION_NAME: Deployment
          <<: *snippet_params_all_versions
      - load_var: success_snippet
        file: snippet/success
      - load_var: failure_snippet
        file: snippet/failure
      - load_var: start_snippet
        file: snippet/start
      - <<: *put_start_slack_notification
      - task: get-git-sha-for-release-tag
        file: pay-ci/ci/tasks/get-git-sha-for-release-tag.yml
        params:
          APP_NAME: frontend
          APPLICATION_IMAGE_TAG: ((.:application_image_tag))
      - load_var: git-sha
        file: git-sha/git-sha
      - task: check-pact-compatibility
        file: pay-ci/ci/tasks/check-pact-compatibility.yml
        params:
          GIT_SHA: ((.:git-sha))
          APP_NAME: frontend
          PACT_TAG: production-fargate
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_prod_account_id)):role/concourse
          AWS_ROLE_SESSION_NAME: terraform-prod-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - task: check-release-versions
        file: pay-ci/ci/tasks/check-release-versions.yml
        params:
          <<: *check_release_versions_params
          APP_NAME: frontend
          NGINX_FORWARD_PROXY_IMAGE_TAG: ((.:nginx_forward_proxy_image_tag))
      - task: deploy-to-prod
        file: pay-ci/ci/tasks/deploy-frontend.yml
        params:
          APP_NAME: frontend
          NGINX_FORWARD_PROXY_IMAGE_TAG: ((.:nginx_forward_proxy_image_tag))
          <<: *deploy_params
      - task: wait-for-deploy
        file: pay-ci/ci/tasks/wait-for-deploy.yml
        params:
          APP_NAME: frontend
          NGINX_FORWARD_PROXY_IMAGE_TAG: ((.:nginx_forward_proxy_image_tag))
          <<: *wait_for_deploy_params
    <<: *put_success_slack_notification_p1
    <<: *put_failure_slack_notification

  - name: smoke-test-frontend-on-prod
    plan:
      - get: frontend-ecr-registry-prod
        trigger: true
        passed: [deploy-frontend-to-prod]
      - get: pay-ci
      - load_var: application_image_tag
        file: frontend-ecr-registry-staging/tag
      - task: create-notification-snippets
        file: pay-ci/ci/tasks/create-notification-snippets.yml
        params:
          APP_NAME: frontend
          ACTION_NAME: Smoke test
          <<: *snippet_params_app_version
      - load_var: success_snippet
        file: snippet/success
      - load_var: failure_snippet
        file: snippet/failure
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_deploy_account_id)):role/concourse_trigger_canary
          AWS_ROLE_SESSION_NAME: trigger-canary-deploy-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - in_parallel:
          <<: *smoke-test-run-all-on-production
    <<: *put_success_slack_notification
    <<: *put_failure_slack_notification

  - name: frontend-pact-tag
    plan:
      - get: frontend-ecr-registry-prod
        passed: [smoke-test-frontend-on-prod]
        trigger: true
      - load_var: application_image_tag
        file: frontend-ecr-registry-prod/tag
      - get: pay-ci
      - task: create-notification-snippets
        file: pay-ci/ci/tasks/create-notification-snippets.yml
        params:
          APP_NAME: frontend
          ACTION_NAME: Pact tag
          <<: *snippet_params_app_version
      - load_var: success_snippet
        file: snippet/success
      - load_var: failure_snippet
        file: snippet/failure
      - task: get-git-sha-for-release-tag
        file: pay-ci/ci/tasks/get-git-sha-for-release-tag.yml
        params:
          APP_NAME: frontend
          APPLICATION_IMAGE_TAG: ((.:application_image_tag))
      - load_var: git-sha
        file: git-sha/git-sha
      - task: tag-pact
        file: pay-ci/ci/tasks/pact-tag.yml
        params:
          GIT_SHA: ((.:git-sha))
          APP_NAME: frontend
          PACT_TAG: production-fargate
    <<: *put_success_slack_notification
    <<: *put_failure_slack_notification

  - name: deploy-adminusers-to-prod
    plan:
      - get: adminusers-ecr-registry-prod
        trigger: true
      - get: nginx-proxy-ecr-registry-prod
      - get: telegraf-ecr-registry-prod
      - get: pay-infra
      - get: pay-ci
      - load_var: application_image_tag
        file: adminusers-ecr-registry-prod/tag
      - load_var: nginx_image_tag
        file: nginx-proxy-ecr-registry-prod/tag
      - load_var: telegraf_image_tag
        file: telegraf-ecr-registry-prod/tag
      - task: create-notification-snippets
        file: pay-ci/ci/tasks/create-notification-snippets.yml
        params:
          APP_NAME: adminusers
          ACTION_NAME: Deployment
          <<: *snippet_params_all_versions
      - load_var: success_snippet
        file: snippet/success
      - load_var: failure_snippet
        file: snippet/failure
      - load_var: start_snippet
        file: snippet/start
      - <<: *put_start_slack_notification
      - task: get-git-sha-for-release-tag
        file: pay-ci/ci/tasks/get-git-sha-for-release-tag.yml
        params:
          APP_NAME: adminusers
          APPLICATION_IMAGE_TAG: ((.:application_image_tag))
      - load_var: git-sha
        file: git-sha/git-sha
      - task: check-pact-compatibility
        file: pay-ci/ci/tasks/check-pact-compatibility.yml
        params:
          GIT_SHA: ((.:git-sha))
          APP_NAME: adminusers
          PACT_TAG: production-fargate
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_prod_account_id)):role/concourse
          AWS_ROLE_SESSION_NAME: terraform-prod-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - task: check-release-versions
        file: pay-ci/ci/tasks/check-release-versions.yml
        params:
          <<: *check_release_versions_params
          APP_NAME: adminusers
      - task: deploy-to-prod
        file: pay-ci/ci/tasks/deploy-app.yml
        params:
          APP_NAME: adminusers
          <<: *deploy_params
      - task: wait-for-deploy
        file: pay-ci/ci/tasks/wait-for-deploy.yml
        params:
          APP_NAME: adminusers
          <<: *wait_for_deploy_params
    <<: *put_success_slack_notification_p1
    <<: *put_failure_slack_notification

  - name: smoke-test-adminusers-on-prod
    plan:
      - get: adminusers-ecr-registry-prod
        trigger: true
        passed: [deploy-adminusers-to-prod]
      - get: pay-ci
      - task: create-notification-snippets
        file: pay-ci/ci/tasks/create-notification-snippets.yml
        params:
          APP_NAME: adminusers
          ACTION_NAME: Smoke test
          <<: *snippet_params_app_version
      - load_var: success_snippet
        file: snippet/success
      - load_var: failure_snippet
        file: snippet/failure
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_deploy_account_id)):role/concourse_trigger_canary
          AWS_ROLE_SESSION_NAME: trigger-canary-deploy-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - in_parallel:
          <<: *smoke-test-run-all-on-production
    <<: *put_success_slack_notification
    <<: *put_failure_slack_notification

  - name: adminusers-pact-tag
    plan:
      - get: adminusers-ecr-registry-prod
        passed: [smoke-test-adminusers-on-prod]
        trigger: true
      - load_var: application_image_tag
        file: adminusers-ecr-registry-prod/tag
      - get: pay-ci
      - task: create-notification-snippets
        file: pay-ci/ci/tasks/create-notification-snippets.yml
        params:
          APP_NAME: adminusers
          ACTION_NAME: Pact tag
          <<: *snippet_params_app_version
      - load_var: success_snippet
        file: snippet/success
      - load_var: failure_snippet
        file: snippet/failure
      - task: get-git-sha-for-release-tag
        file: pay-ci/ci/tasks/get-git-sha-for-release-tag.yml
        params:
          APP_NAME: adminusers
          APPLICATION_IMAGE_TAG: ((.:application_image_tag))
      - load_var: git-sha
        file: git-sha/git-sha
      - task: tag-pact
        file: pay-ci/ci/tasks/pact-tag.yml
        params:
          GIT_SHA: ((.:git-sha))
          APP_NAME: adminusers
          PACT_TAG: production-fargate
    <<: *put_success_slack_notification
    <<: *put_failure_slack_notification

  - name: deploy-products-to-prod
    plan:
      - get: products-ecr-registry-prod
      - get: nginx-proxy-ecr-registry-prod
      - get: telegraf-ecr-registry-prod
      - get: pay-infra
      - get: pay-ci
      - load_var: application_image_tag
        file: products-ecr-registry-prod/tag
      - load_var: nginx_image_tag
        file: nginx-proxy-ecr-registry-prod/tag
      - load_var: telegraf_image_tag
        file: telegraf-ecr-registry-prod/tag
      - task: create-notification-snippets
        file: pay-ci/ci/tasks/create-notification-snippets.yml
        params:
          APP_NAME: products
          ACTION_NAME: Deployment
          <<: *snippet_params_all_versions
      - load_var: success_snippet
        file: snippet/success
      - load_var: failure_snippet
        file: snippet/failure
      - load_var: start_snippet
        file: snippet/start
      - <<: *put_start_slack_notification
      - task: get-git-sha-for-release-tag
        file: pay-ci/ci/tasks/get-git-sha-for-release-tag.yml
        params:
          APP_NAME: products
          APPLICATION_IMAGE_TAG: ((.:application_image_tag))
      - load_var: git-sha
        file: git-sha/git-sha
      - task: check-pact-compatibility
        file: pay-ci/ci/tasks/check-pact-compatibility.yml
        params:
          GIT_SHA: ((.:git-sha))
          APP_NAME: products
          PACT_TAG: production-fargate
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_prod_account_id)):role/concourse
          AWS_ROLE_SESSION_NAME: terraform-prod-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - task: check-release-versions
        file: pay-ci/ci/tasks/check-release-versions.yml
        params:
          <<: *check_release_versions_params
          APP_NAME: products
      - task: deploy-to-prod
        file: pay-ci/ci/tasks/deploy-app.yml
        params:
          APP_NAME: products
          <<: *deploy_params
      - task: wait-for-deploy
        file: pay-ci/ci/tasks/wait-for-deploy.yml
        params:
          APP_NAME: products
          <<: *wait_for_deploy_params
    <<: *put_success_slack_notification_p1
    <<: *put_failure_slack_notification
  - name: smoke-test-products-on-prod
    plan:
      - get: products-ecr-registry-prod
        trigger: true
        passed: [deploy-products-to-prod]
      - get: pay-ci
      - load_var: application_image_tag
        file: products-ecr-registry-staging/tag
      - task: create-notification-snippets
        file: pay-ci/ci/tasks/create-notification-snippets.yml
        params:
          APP_NAME: products
          ACTION_NAME: Smoke test
          <<: *snippet_params_app_version
      - load_var: success_snippet
        file: snippet/success
      - load_var: failure_snippet
        file: snippet/failure
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_deploy_account_id)):role/concourse_trigger_canary
          AWS_ROLE_SESSION_NAME: trigger-canary-deploy-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - in_parallel:
          <<: *smoke-test-run-all-on-production
    <<: *put_success_slack_notification
    <<: *put_failure_slack_notification

  - name: products-pact-tag
    plan:
      - get: products-ecr-registry-prod
        passed: [smoke-test-products-on-prod]
        trigger: true
      - load_var: application_image_tag
        file: products-ecr-registry-prod/tag
      - get: pay-ci
      - task: create-notification-snippets
        file: pay-ci/ci/tasks/create-notification-snippets.yml
        params:
          APP_NAME: products
          ACTION_NAME: Pact tag
          <<: *snippet_params_app_version
      - load_var: success_snippet
        file: snippet/success
      - load_var: failure_snippet
        file: snippet/failure
      - task: get-git-sha-for-release-tag
        file: pay-ci/ci/tasks/get-git-sha-for-release-tag.yml
        params:
          APP_NAME: products
          APPLICATION_IMAGE_TAG: ((.:application_image_tag))
      - load_var: git-sha
        file: git-sha/git-sha
      - task: tag-pact
        file: pay-ci/ci/tasks/pact-tag.yml
        params:
          GIT_SHA: ((.:git-sha))
          APP_NAME: products
          PACT_TAG: production-fargate
    <<: *put_success_slack_notification
    <<: *put_failure_slack_notification

  - name: deploy-products-ui-to-prod
    plan:
      - get: products-ui-ecr-registry-prod
      - get: nginx-proxy-ecr-registry-prod
      - get: telegraf-ecr-registry-prod
      - get: pay-infra
      - get: pay-ci
      - load_var: application_image_tag
        file: products-ui-ecr-registry-prod/tag
      - load_var: nginx_image_tag
        file: nginx-proxy-ecr-registry-prod/tag
      - load_var: telegraf_image_tag
        file: telegraf-ecr-registry-prod/tag
      - task: create-notification-snippets
        file: pay-ci/ci/tasks/create-notification-snippets.yml
        params:
          APP_NAME: products-ui
          ACTION_NAME: Deployment
          <<: *snippet_params_all_versions
      - load_var: success_snippet
        file: snippet/success
      - load_var: failure_snippet
        file: snippet/failure
      - load_var: start_snippet
        file: snippet/start
      - <<: *put_start_slack_notification
      - task: get-git-sha-for-release-tag
        file: pay-ci/ci/tasks/get-git-sha-for-release-tag.yml
        params:
          APP_NAME: products-ui
          APPLICATION_IMAGE_TAG: ((.:application_image_tag))
      - load_var: git-sha
        file: git-sha/git-sha
      - task: check-pact-compatibility
        file: pay-ci/ci/tasks/check-pact-compatibility.yml
        params:
          GIT_SHA: ((.:git-sha))
          APP_NAME: products-ui
          PACT_TAG: production-fargate
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_prod_account_id)):role/concourse
          AWS_ROLE_SESSION_NAME: terraform-prod-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - task: check-release-versions
        file: pay-ci/ci/tasks/check-release-versions.yml
        params:
          <<: *check_release_versions_params
          APP_NAME: products-ui
      - task: deploy-to-prod
        file: pay-ci/ci/tasks/deploy-app.yml
        params:
          APP_NAME: products-ui
          <<: *deploy_params
      - task: wait-for-deploy
        file: pay-ci/ci/tasks/wait-for-deploy.yml
        params:
          APP_NAME: products-ui
          <<: *wait_for_deploy_params
    <<: *put_success_slack_notification_p1
    <<: *put_failure_slack_notification

  - name: smoke-test-products-ui-on-prod
    plan:
      - get: products-ui-ecr-registry-prod
        trigger: true
        passed: [deploy-products-ui-to-prod]
      - get: pay-ci
      - load_var: application_image_tag
        file: products-ui-ecr-registry-staging/tag
      - task: create-notification-snippets
        file: pay-ci/ci/tasks/create-notification-snippets.yml
        params:
          APP_NAME: products-ui
          ACTION_NAME: Smoke test
          <<: *snippet_params_app_version
      - load_var: success_snippet
        file: snippet/success
      - load_var: failure_snippet
        file: snippet/failure
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_deploy_account_id)):role/concourse_trigger_canary
          AWS_ROLE_SESSION_NAME: trigger-canary-deploy-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - in_parallel:
          <<: *smoke-test-run-all-on-production
    <<: *put_success_slack_notification
    <<: *put_failure_slack_notification

  - name: products-ui-pact-tag
    plan:
      - get: products-ui-ecr-registry-prod
        passed: [smoke-test-products-ui-on-prod]
        trigger: true
      - load_var: application_image_tag
        file: products-ui-ecr-registry-prod/tag
      - get: pay-ci
      - task: create-notification-snippets
        file: pay-ci/ci/tasks/create-notification-snippets.yml
        params:
          APP_NAME: products-ui
          ACTION_NAME: Pact tag
          <<: *snippet_params_app_version
      - load_var: success_snippet
        file: snippet/success
      - load_var: failure_snippet
        file: snippet/failure
      - task: get-git-sha-for-release-tag
        file: pay-ci/ci/tasks/get-git-sha-for-release-tag.yml
        params:
          APP_NAME: products-ui
          APPLICATION_IMAGE_TAG: ((.:application_image_tag))
      - load_var: git-sha
        file: git-sha/git-sha
      - task: tag-pact
        file: pay-ci/ci/tasks/pact-tag.yml
        params:
          GIT_SHA: ((.:git-sha))
          APP_NAME: products-ui
          PACT_TAG: production-fargate
    <<: *put_success_slack_notification
    <<: *put_failure_slack_notification

  - name: deploy-publicauth-to-prod
    plan:
      - get: publicauth-ecr-registry-prod
      - get: nginx-proxy-ecr-registry-prod
      - get: telegraf-ecr-registry-prod
      - get: pay-infra
      - get: pay-ci
      - load_var: application_image_tag
        file: publicauth-ecr-registry-prod/tag
      - load_var: nginx_image_tag
        file: nginx-proxy-ecr-registry-prod/tag
      - load_var: telegraf_image_tag
        file: telegraf-ecr-registry-prod/tag
      - task: create-notification-snippets
        file: pay-ci/ci/tasks/create-notification-snippets.yml
        params:
          APP_NAME: publicauth
          ACTION_NAME: Deployment
          <<: *snippet_params_all_versions
      - load_var: success_snippet
        file: snippet/success
      - load_var: failure_snippet
        file: snippet/failure
      - load_var: start_snippet
        file: snippet/start
      - <<: *put_start_slack_notification
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_prod_account_id)):role/concourse
          AWS_ROLE_SESSION_NAME: terraform-prod-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - task: check-release-versions
        file: pay-ci/ci/tasks/check-release-versions.yml
        params:
          <<: *check_release_versions_params
          APP_NAME: publicauth
      - task: deploy-to-prod
        file: pay-ci/ci/tasks/deploy-app.yml
        params:
          APP_NAME: publicauth
          <<: *deploy_params
      - task: wait-for-deploy
        file: pay-ci/ci/tasks/wait-for-deploy.yml
        params:
          APP_NAME: publicauth
          <<: *wait_for_deploy_params
    <<: *put_success_slack_notification_p1
    <<: *put_failure_slack_notification

  - name: smoke-test-publicauth-on-prod
    plan:
      - get: publicauth-ecr-registry-prod
        trigger: true
        passed: [deploy-publicauth-to-prod]
      - get: pay-ci
      - load_var: application_image_tag
        file: publicauth-ecr-registry-staging/tag
      - task: create-notification-snippets
        file: pay-ci/ci/tasks/create-notification-snippets.yml
        params:
          APP_NAME: publicauth
          ACTION_NAME: Smoke test
          <<: *snippet_params_app_version
      - load_var: success_snippet
        file: snippet/success
      - load_var: failure_snippet
        file: snippet/failure
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_deploy_account_id)):role/concourse_trigger_canary
          AWS_ROLE_SESSION_NAME: trigger-canary-deploy-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - in_parallel:
          <<: *smoke-test-run-all-on-production
    <<: *put_success_slack_notification
    <<: *put_failure_slack_notification

  - name: deploy-cardid-to-prod
    plan:
      - get: cardid-ecr-registry-prod
      - get: nginx-proxy-ecr-registry-prod
      - get: telegraf-ecr-registry-prod
      - get: pay-infra
      - get: pay-ci
      - load_var: application_image_tag
        file: cardid-ecr-registry-prod/tag
      - load_var: nginx_image_tag
        file: nginx-proxy-ecr-registry-prod/tag
      - load_var: telegraf_image_tag
        file: telegraf-ecr-registry-prod/tag
      - task: create-notification-snippets
        file: pay-ci/ci/tasks/create-notification-snippets.yml
        params:
          APP_NAME: cardid
          ACTION_NAME: Deployment
          <<: *snippet_params_all_versions
      - load_var: success_snippet
        file: snippet/success
      - load_var: failure_snippet
        file: snippet/failure
      - load_var: start_snippet
        file: snippet/start
      - <<: *put_start_slack_notification
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_prod_account_id)):role/concourse
          AWS_ROLE_SESSION_NAME: terraform-prod-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - task: check-release-versions
        file: pay-ci/ci/tasks/check-release-versions.yml
        params:
          <<: *check_release_versions_params
          APP_NAME: cardid
      - task: deploy-to-prod
        file: pay-ci/ci/tasks/deploy-app.yml
        params:
          APP_NAME: cardid
          <<: *deploy_params
      - task: wait-for-deploy
        file: pay-ci/ci/tasks/wait-for-deploy.yml
        params:
          APP_NAME: cardid
          <<: *wait_for_deploy_params
    <<: *put_success_slack_notification_p1
    <<: *put_failure_slack_notification

  - name: smoke-test-cardid-on-prod
    plan:
      - get: cardid-ecr-registry-prod
        trigger: true
        passed: [deploy-cardid-to-prod]
      - get: pay-ci
      - load_var: application_image_tag
        file: cardid-ecr-registry-staging/tag
      - task: create-notification-snippets
        file: pay-ci/ci/tasks/create-notification-snippets.yml
        params:
          APP_NAME: cardid
          ACTION_NAME: Smoke test
          <<: *snippet_params_app_version
      - load_var: success_snippet
        file: snippet/success
      - load_var: failure_snippet
        file: snippet/failure
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_deploy_account_id)):role/concourse_trigger_canary
          AWS_ROLE_SESSION_NAME: trigger-canary-deploy-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - in_parallel:
          <<: *smoke-test-run-all-on-production
    <<: *put_success_slack_notification
    <<: *put_failure_slack_notification

  - name: deploy-publicapi-to-prod
    plan:
      - get: publicapi-ecr-registry-prod
      - get: nginx-proxy-ecr-registry-prod
      - get: telegraf-ecr-registry-prod
      - get: pay-infra
      - get: pay-ci
      - load_var: application_image_tag
        file: publicapi-ecr-registry-prod/tag
      - load_var: nginx_image_tag
        file: nginx-proxy-ecr-registry-prod/tag
      - load_var: telegraf_image_tag
        file: telegraf-ecr-registry-prod/tag
      - task: create-notification-snippets
        file: pay-ci/ci/tasks/create-notification-snippets.yml
        params:
          APP_NAME: publicapi
          ACTION_NAME: Deployment
          <<: *snippet_params_all_versions
      - load_var: success_snippet
        file: snippet/success
      - load_var: failure_snippet
        file: snippet/failure
      - load_var: start_snippet
        file: snippet/start
      - <<: *put_start_slack_notification
      - task: get-git-sha-for-release-tag
        file: pay-ci/ci/tasks/get-git-sha-for-release-tag.yml
        params:
          APP_NAME: publicapi
          APPLICATION_IMAGE_TAG: ((.:application_image_tag))
      - load_var: git-sha
        file: git-sha/git-sha
      - task: check-pact-compatibility
        file: pay-ci/ci/tasks/check-pact-compatibility.yml
        params:
          GIT_SHA: ((.:git-sha))
          APP_NAME: publicapi
          PACT_TAG: production-fargate
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_prod_account_id)):role/concourse
          AWS_ROLE_SESSION_NAME: terraform-prod-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - task: check-release-versions
        file: pay-ci/ci/tasks/check-release-versions.yml
        params:
          <<: *check_release_versions_params
          APP_NAME: publicapi
      - task: deploy-to-prod
        file: pay-ci/ci/tasks/deploy-app.yml
        params:
          APP_NAME: publicapi
          <<: *deploy_params
      - task: wait-for-deploy
        file: pay-ci/ci/tasks/wait-for-deploy.yml
        params:
          APP_NAME: publicapi
          <<: *wait_for_deploy_params
    <<: *put_success_slack_notification_p1
    <<: *put_failure_slack_notification

  - name: smoke-test-publicapi-on-prod
    plan:
      - get: publicapi-ecr-registry-prod
        trigger: true
        passed: [deploy-publicapi-to-prod]
      - get: pay-ci
      - load_var: application_image_tag
        file: publicapi-ecr-registry-staging/tag
      - task: create-notification-snippets
        file: pay-ci/ci/tasks/create-notification-snippets.yml
        params:
          APP_NAME: publicapi
          ACTION_NAME: Smoke test
          <<: *snippet_params_app_version
      - load_var: success_snippet
        file: snippet/success
      - load_var: failure_snippet
        file: snippet/failure
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_deploy_account_id)):role/concourse_trigger_canary
          AWS_ROLE_SESSION_NAME: trigger-canary-deploy-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - in_parallel:
          <<: *smoke-test-run-all-on-production
    <<: *put_success_slack_notification
    <<: *put_failure_slack_notification

  - name: publicapi-pact-tag
    plan:
      - get: publicapi-ecr-registry-prod
        passed: [smoke-test-publicapi-on-prod]
        trigger: true
      - load_var: application_image_tag
        file: publicapi-ecr-registry-prod/tag
      - get: pay-ci
      - task: create-notification-snippets
        file: pay-ci/ci/tasks/create-notification-snippets.yml
        params:
          APP_NAME: publicapi
          ACTION_NAME: Pact tag
          <<: *snippet_params_app_version
      - load_var: success_snippet
        file: snippet/success
      - load_var: failure_snippet
        file: snippet/failure
      - task: get-git-sha-for-release-tag
        file: pay-ci/ci/tasks/get-git-sha-for-release-tag.yml
        params:
          APP_NAME: publicapi
          APPLICATION_IMAGE_TAG: ((.:application_image_tag))
      - load_var: git-sha
        file: git-sha/git-sha
      - task: tag-pact
        file: pay-ci/ci/tasks/pact-tag.yml
        params:
          GIT_SHA: ((.:git-sha))
          APP_NAME: publicapi
          PACT_TAG: production-fargate
    <<: *put_success_slack_notification
    <<: *put_failure_slack_notification

  - name: deploy-ledger-to-prod
    plan:
      - get: ledger-ecr-registry-prod
        trigger: true
      - get: nginx-proxy-ecr-registry-prod
      - get: telegraf-ecr-registry-prod
      - get: pay-infra
      - get: pay-ci
      - load_var: application_image_tag
        file: ledger-ecr-registry-prod/tag
      - load_var: nginx_image_tag
        file: nginx-proxy-ecr-registry-prod/tag
      - load_var: telegraf_image_tag
        file: telegraf-ecr-registry-prod/tag
      - task: create-notification-snippets
        file: pay-ci/ci/tasks/create-notification-snippets.yml
        params:
          APP_NAME: ledger
          ACTION_NAME: Deployment
          <<: *snippet_params_all_versions
      - load_var: success_snippet
        file: snippet/success
      - load_var: failure_snippet
        file: snippet/failure
      - load_var: start_snippet
        file: snippet/start
      - <<: *put_start_slack_notification
      - task: get-git-sha-for-release-tag
        file: pay-ci/ci/tasks/get-git-sha-for-release-tag.yml
        params:
          APP_NAME: ledger
          APPLICATION_IMAGE_TAG: ((.:application_image_tag))
      - load_var: git-sha
        file: git-sha/git-sha
      - task: check-pact-compatibility
        file: pay-ci/ci/tasks/check-pact-compatibility.yml
        params:
          GIT_SHA: ((.:git-sha))
          APP_NAME: ledger
          PACT_TAG: production-fargate
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_prod_account_id)):role/concourse
          AWS_ROLE_SESSION_NAME: terraform-prod-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - task: check-release-versions
        file: pay-ci/ci/tasks/check-release-versions.yml
        params:
          <<: *check_release_versions_params
          APP_NAME: ledger
      - task: deploy-to-prod
        file: pay-ci/ci/tasks/deploy-app.yml
        params:
          APP_NAME: ledger
          <<: *deploy_params
      - task: wait-for-deploy
        file: pay-ci/ci/tasks/wait-for-deploy.yml
        params:
          APP_NAME: ledger
          <<: *wait_for_deploy_params
    <<: *put_success_slack_notification_p1
    <<: *put_failure_slack_notification

  - name: smoke-test-ledger-on-prod
    plan:
      - get: ledger-ecr-registry-prod
        trigger: true
        passed: [deploy-ledger-to-prod]
      - get: pay-ci
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_deploy_account_id)):role/concourse_trigger_canary
          AWS_ROLE_SESSION_NAME: trigger-canary-deploy-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - in_parallel:
          <<: *smoke-test-run-all-on-production
    <<: *put_success_slack_notification_p1
    <<: *put_failure_slack_notification

  - name: ledger-pact-tag
    plan:
      - get: ledger-ecr-registry-prod
        passed: [smoke-test-ledger-on-prod]
        trigger: true
      - load_var: application_image_tag
        file: ledger-ecr-registry-prod/tag
      - get: pay-ci
      - task: create-notification-snippets
        file: pay-ci/ci/tasks/create-notification-snippets.yml
        params:
          APP_NAME: ledger
          ACTION_NAME: Pact tag
          <<: *snippet_params_app_version
      - load_var: success_snippet
        file: snippet/success
      - load_var: failure_snippet
        file: snippet/failure
      - task: get-git-sha-for-release-tag
        file: pay-ci/ci/tasks/get-git-sha-for-release-tag.yml
        params:
          APP_NAME: ledger
          APPLICATION_IMAGE_TAG: ((.:application_image_tag))
      - load_var: git-sha
        file: git-sha/git-sha
      - task: tag-pact
        file: pay-ci/ci/tasks/pact-tag.yml
        params:
          GIT_SHA: ((.:git-sha))
          APP_NAME: ledger
          PACT_TAG: production-fargate
    <<: *put_success_slack_notification
    <<: *put_failure_slack_notification
