name: Github Actions - Java tests

on:
  workflow_call:
    inputs:
      publish_pacts:
        type: boolean
        required: false
        default: false
        description: Set to `true` if app is a consumer and to publish pacts
      java_version:
        type: string
        required: false
        default: 21
        description: JDK version to setup and run tests. Defaults to 21
      check_for_openapi_file_changes:
        type: boolean
        required: false
        default: true
        description: Set to `false` to disable checking for OpenAPI file changes (for publicapi)
      requires_redis_image:
        type: boolean
        required: false
        default: false
        description: Set to `true` to pull redis docker image (for publicapi)
      requires_postgres_image:
        type: boolean
        required: false
        default: true
        description: Set to `false` if app doesn't use databases (publicapi & cardId)
    secrets:
      pact_broker_username:
        required: false
        description: required if `publish_pacts` is `true`
      pact_broker_password:
        required: false
        description: required if `publish_pacts` is `true`

permissions:
  contents: read

jobs:
  integration-tests:
    name: Unit and Integration tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b
      - name: Set up JDK ${{ inputs.java_version }}
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9
        with:
          java-version: ${{ inputs.java_version }}
          distribution: 'adopt'
      - name: Cache Maven packages
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Cache pacts directory
        if: ${{ inputs.publish_pacts }}
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57
        with:
          path: target/pacts
          key: ${{ runner.os }}-build-id-${{ github.head_ref }}-${{ github.sha }}-pacts
      - name: Pull docker image dependencies
        env:
          PULL_REDIS_IMAGE: ${{ inputs.requires_redis_image }}
          PULL_POSTGRES_IMAGE: ${{ inputs.requires_postgres_image }}
        run: |
          if [ "$PULL_POSTGRES_IMAGE" = true ]; then
            docker pull postgres:15.2
          fi

          if [ "$PULL_REDIS_IMAGE" = true ]; then
            docker pull redis:7.2
          fi
      - name: Compile
        run: mvn clean compile --no-transfer-progress
      - name: Check for OpenApi file changes
        if: ${{ inputs.check_for_openapi_file_changes }}
        run: |
          if [[ $(git status --porcelain) ]]; then
            echo "Changes to the OpenApi file have not been committed. Run \`mvn compile\` on your branch to regenerate the file and then commit the changes."
            exit 1
          fi
      - name: Run unit and integration tests
        run: |
          mvn verify --no-transfer-progress

  publish-consumer-contracts:
    if: ${{ inputs.publish_pacts }}
    needs:
      - integration-tests
    runs-on: ubuntu-latest
    name: Publish consumer pacts
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b
      - name: Set up JDK ${{ inputs.java_version }}
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9
        with:
          java-version: ${{ inputs.java_version }}
          distribution: 'adopt'
      - name: Cache Maven packages
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Cache pacts directory
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57
        with:
          path: target/pacts
          key: ${{ runner.os }}-build-id-${{ github.head_ref }}-${{ github.sha }}-pacts
      - name: Check for generated pacts
        run: |
          if [ ! -d target/pacts ]; then
            echo "The pact files were not generated, this means that no pact results will be published and this build will fail to deploy"
            exit 1
          fi
      - name: Set Pact Consumer variables
        id: set-pact-consumer-variables
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            # Github actually creates a phantom merge commit on PR actions, but we want to record
            # in the pact broker something we can actually trace back to a PR, using the _actual_
            # phantom merge commit sha (github.sha) would make this essentially impossible for us
            CONSUMER_VERSION=${{ github.event.pull_request.head.sha }}
            CONSUMER_TAG=${{ github.event.pull_request.number }}
          elif [[ "${{ github.ref }}" == "refs/heads/master" ]] || [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            CONSUMER_VERSION=${{ github.sha }}
            CONSUMER_TAG=master
          else
            echo "Unknown type to get consumer tag from, failing on purpose"
            exit 1
          fi
          echo "Setting Consumer version to ${CONSUMER_VERSION}"
          echo "pact-consumer-version=${CONSUMER_VERSION}" >> $GITHUB_OUTPUT
          echo "Setting Consumer tag to ${CONSUMER_TAG}"
          echo "pact-consumer-tag=${CONSUMER_TAG}" >> $GITHUB_OUTPUT
      - name: Publish consumer pacts
        run: |
          mvn pact:publish --no-transfer-progress \
          -DPACT_BROKER_URL=https://pact-broker.deploy.payments.service.gov.uk \
          -DrunConsumerContractTests \
          -DPACT_BROKER_USERNAME=${{ secrets.pact_broker_username }} \
          -DPACT_BROKER_PASSWORD=${{ secrets.pact_broker_password }} \
          -DPACT_CONSUMER_TAG=${{ steps.set-pact-consumer-variables.outputs.pact-consumer-tag }} \
          -DPACT_CONSUMER_VERSION=${{ steps.set-pact-consumer-variables.outputs.pact-consumer-version }}
