---
resources:
  - name: perf-tests-pipeline
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-ci
      branch: master
      paths:
        - ci/pipelines/perf-tests.yml

  - name: perf-tests-git-release
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-perftests
      branch: master
      tag_regex: "alpha_release-(.*)"
      username: alphagov-pay-ci-concourse
      password: ((github-access-token))

  - name: pay-ci
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-ci
      branch: master
      username: alphagov-pay-ci-concourse
      password: ((github-access-token))

  - name: perf-tests-ecr-registry-test
    type: registry-image
    icon: docker
    source:
      repository: govukpay/perftests
      tag: latest
      aws_access_key_id: ((readonly_access_key_id))
      aws_secret_access_key: ((readonly_secret_access_key))
      aws_session_token: ((readonly_session_token))
      aws_role_arn: arn:aws:iam::((pay_aws_test_account_id)):role/concourse
      aws_ecr_registry_id: "((pay_aws_test_account_id))"
      aws_region: eu-west-1

  - name: perf-tests-ecr-release
    type: registry-image
    icon: docker
    source:
      repository: govukpay/perftests
      variant: release
      aws_access_key_id: ((readonly_access_key_id))
      aws_secret_access_key: ((readonly_secret_access_key))
      aws_session_token: ((readonly_session_token))
      aws_role_arn: arn:aws:iam::((pay_aws_test_account_id)):role/concourse
      aws_ecr_registry_id: "((pay_aws_test_account_id))"
      aws_region: eu-west-1

  - name: perf-tests-dockerhub
    type: registry-image
    icon: docker
    source:
      repository: govukpay/perftests
      tag: latest-master
      password: ((docker-password))
      username: ((docker-username))

  - name: slack-notification
    type: slack-notification
    source:
      url: https://hooks.slack.com/services/((slack-notification-secret))

  - name: paas
    type: cf-cli
    icon: cloud-upload-outline
    source:
      api: https://api.cloud.service.gov.uk
      org: govuk-pay
      space: build
      username: ((cf-username))
      password: ((cf-password))
      cf_cli_version: 7

resource_types:
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource
      tag: latest

  - name: cf-cli
    type: registry-image
    source:
      repository: nulldriver/cf-cli-resource

groups:
  - name: perf-tests
    jobs:
      - run-perf-test
  - name: perf-tests-build
    jobs:
      - build-and-push-perf-tests
  - name: update-perf-tests-pipeline
    jobs:
      - update-perf-tests-pipeline

jobs:
  - name: run-perf-test
    serial: true
    serial_groups: [run-perf-test]
    plan:
      - in_parallel:
        - get: perf-tests-ecr-release
        - get: pay-ci
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_test_account_id)):role/pay-cd-pay-dev-codebuild-executor-perf-tests-test-perf-1
          AWS_ROLE_SESSION_NAME: perf-tests-test-assume-role
      - in_parallel:
        - load_var: role
          file: assume-role/assume-role.json
          format: json
        - load_var: release-tag
          file: perf-tests-ecr-release/tag
      - in_parallel:
        - task: scale-up-ledger
          file: pay-ci/ci/tasks/scale-fargate-service.yml
          params:
            SERVICE_NAME: ledger
            SCALE_DIRECTION: out
            DESIRED_HEALTHY_INSTANCES: 5
            AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
            AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
            AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
        - put: scale-up-stubs
          resource: paas
          params:
            command: scale
            app_name: pay-stubs
            instances: 5
        - task: prepare-codebuild
          config:
            platform: linux
            image_resource:
              type: registry-image
              source:
                repository: alpine
                tag: latest
            outputs:
              - name: run-codebuild-configuration
            run:
              path: ash
              args:
                - -euo
                - pipefail
                - -c
                - |
                  echo "Installing jq"
                  apk add --update --no-cache --quiet --no-progress jq

                  cat <<EOF > base.json
                  {
                    "projectName": "perf-tests-test-perf-1",
                    "sourceVersion": "",
                    "secondarySourcesVersions": {},
                    "environmentVariables": {
                      "PERF_TESTS_VERSION": "((.:release-tag))"
                    }
                  }
                  EOF

                  for TEST_SUITE in PaymentSimulation SearchPaymentsSimulation PublicAuthSimulation SelfServiceSimulation; do
                    echo "$TEST_SUITE"
                    echo "------------------------------------------------------------------"
                    jq <base.json ".environmentVariables.GATLING_CLASS = \"uk.gov.pay.$TEST_SUITE\"" | tee "./run-codebuild-configuration/perf-tests-$TEST_SUITE.json"
                    echo
                  done
#      - task: public-auth-simulation-perf-test
#        file: pay-ci/ci/tasks/run-codebuild.yml
#        params:
#          PATH_TO_CONFIG: "../../../../run-codebuild-configuration/perf-tests-PublicAuthSimulation.json"
#          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
#          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
#          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
      - task: search-payments-simulation-perf-test
        file: pay-ci/ci/tasks/run-codebuild.yml
        params:
          PATH_TO_CONFIG: "../../../../run-codebuild-configuration/perf-tests-SearchPaymentsSimulation.json"
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
      - task: self-service-simulation-perf-test
        file: pay-ci/ci/tasks/run-codebuild.yml
        params:
          PATH_TO_CONFIG: "../../../../run-codebuild-configuration/perf-tests-SelfServiceSimulation.json"
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
      - task: payment-simulation-perf-test
        file: pay-ci/ci/tasks/run-codebuild.yml
        params:
          PATH_TO_CONFIG: "../../../../run-codebuild-configuration/perf-tests-PaymentSimulation.json"
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
      - in_parallel:
        - put: scale-down-stubs
          resource: paas
          params:
            command: scale
            app_name: pay-stubs
            instances: 1
        - task: scale-down-ledger
          file: pay-ci/ci/tasks/scale-fargate-service.yml
          params:
            SERVICE_NAME: ledger
            SCALE_DIRECTION: in
            DESIRED_HEALTHY_INSTANCES: 1
            AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
            AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
            AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
    on_failure:
      in_parallel:
        - put: scale-down-stubs
          resource: paas
          params:
            command: scale
            app_name: pay-stubs
            instances: 1
        - task: scale-down-ledger
          file: pay-ci/ci/tasks/scale-fargate-service.yml
          params:
            SERVICE_NAME: ledger
            SCALE_DIRECTION: in
            DESIRED_HEALTHY_INSTANCES: 1
            AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
            AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
            AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
    on_abort:
      in_parallel:
        - put: scale-down-stubs
          resource: paas
          params:
            command: scale
            app_name: pay-stubs
            instances: 1
        - task: scale-down-ledger
          file: pay-ci/ci/tasks/scale-fargate-service.yml
          params:
            SERVICE_NAME: ledger
            SCALE_DIRECTION: in
            DESIRED_HEALTHY_INSTANCES: 1
            AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
            AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
            AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))

  - name: build-and-push-perf-tests
    plan:
      - in_parallel:
        - get: perf-tests-git-release
          trigger: true
        - get: pay-ci
      - task: parse-release-tag
        file: pay-ci/ci/tasks/parse-release-tag.yml
        input_mapping:
          git-release: perf-tests-git-release
      - in_parallel:
        - load_var: release-number
          file: tags/release-number
        - load_var: release-name
          file: perf-tests-git-release/.git/ref
        - load_var: release-sha
          file: tags/release-sha
      - task: build-perf-tests-image
        privileged: true
        params:
          LABEL_release_number: ((.:release-number))
          LABEL_release_name: ((.:release-name))
          LABEL_release_sha: ((.:release-sha))            
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: concourse/oci-build-task
          inputs:
            - name: perf-tests-git-release
              path: .
          outputs:
            - name: image
          run:
            path: build
      - in_parallel:
        - put: perf-tests-ecr-registry-test
          params:
            image: image/image.tar
            additional_tags: tags/tags
          get_params:
            skip_download: true
        - put: perf-tests-dockerhub
          params:
            image: image/image.tar
            additional_tags: tags/tags
          get_params:
            skip_download: true
    on_failure:
      put: slack-notification
      attempts: 10
      params:
        channel: '#govuk-pay-announce'
        silent: true
        text: ':red-circle: Failed to build and push pay-perftests image - <https://pay-cd.deploy.payments.service.gov.uk/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|Concourse build #$BUILD_NAME>'
        icon_emoji: ":concourse:"
        username: pay-concourse
    on_success:
      put: slack-notification
      attempts: 10
      params:
        channel: '#govuk-pay-activity'
        silent: true
        text: ':green-circle: Built and pushed pay-perftests image - <https://pay-cd.deploy.payments.service.gov.uk/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|Concourse build #$BUILD_NAME>'
        icon_emoji: ":concourse:"
        username: pay-concourse

  - name: update-perf-tests-pipeline
    plan:
      - get: perf-tests-pipeline
        trigger: true
      - set_pipeline: perf-tests
        file: perf-tests-pipeline/ci/pipelines/perf-tests.yml
