definitions:
  aws_assumed_role_creds: &aws_assumed_role_creds
    AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
    AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
    AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))

  wait_for_deploy_params: &wait_for_deploy_params
    <<: *aws_assumed_role_creds
    APPLICATION_IMAGE_TAG: ((.:application_image_tag))
    NGINX_IMAGE_TAG: ((.:nginx_image_tag))
    TELEGRAF_IMAGE_TAG: ((.:telegraf_image_tag))
    ENVIRONMENT: test-perf-1

  deploy_params: &deploy_params
    <<: *aws_assumed_role_creds
    APPLICATION_IMAGE_TAG: ((.:application_image_tag))
    NGINX_IMAGE_TAG: ((.:nginx_image_tag))
    TELEGRAF_IMAGE_TAG: ((.:telegraf_image_tag))
    ACCOUNT: test
    ENVIRONMENT: test-perf-1

  check_release_versions_params: &check_release_versions_params
    <<: *aws_assumed_role_creds
    AWS_REGION: "eu-west-1"
    CLUSTER_NAME: "test-perf-1-fargate"
    APPLICATION_IMAGE_TAG: ((.:application_image_tag))
    TELEGRAF_IMAGE_TAG: ((.:telegraf_image_tag))
    NGINX_IMAGE_TAG: ((.:nginx_image_tag))

  aws_test_config: &aws_test_config
    aws_access_key_id: ((readonly_access_key_id))
    aws_secret_access_key: ((readonly_secret_access_key))
    aws_session_token: ((readonly_session_token))
    aws_role_arn: arn:aws:iam::((pay_aws_test_account_id)):role/concourse
    aws_ecr_registry_id: "((pay_aws_test_account_id))"
    aws_region: eu-west-1

  put_start_slack_notification: &put_start_slack_notification
    put: slack-notification
    params:
      channel: '#govuk-pay-announce'
      icon_emoji: ":fargate:"
      username: pay-concourse
      text: "((.:start_snippet)) |
            <https://pay-cd.deploy.payments.service.gov.uk/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|Concourse build #$BUILD_NAME>"

  put_success_slack_notification: &put_success_slack_notification
    on_success:
      put: slack-notification
      params:
        channel: '#govuk-pay-activity'
        icon_emoji: ":fargate:"
        username: pay-concourse
        text: "((.:success_snippet)) \n\n
              <https://pay-cd.deploy.payments.service.gov.uk/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|Concourse build #$BUILD_NAME>"
    
  put_failure_slack_notification: &put_failure_slack_notification
    on_failure:
      put: slack-notification
      params:
        channel: '#govuk-pay-announce'
        icon_emoji: ":fargate:"
        username: pay-concourse
        text: "((.:failure_snippet)) \n
              - <https://pay-cd.deploy.payments.service.gov.uk/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|Concourse build #$BUILD_NAME>"

  put_db_migration_slack_notification: &put_db_migration_slack_notification
    put: slack-notification
    params:
      channel: '#govuk-pay-announce'
      icon_emoji: ":postgres:"
      username: pay-concourse
      text: ":postgres: starting $BUILD_JOB_NAME on staging-2\n
            - <https://pay-cd.deploy.payments.service.gov.uk/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|Concourse build #$BUILD_NAME>"

  snippet_params_all_versions: &snippet_params_all_versions
    ENV: test-perf-1
    APPLICATION_IMAGE_TAG: ((.:application_image_tag))
    TELEGRAF_IMAGE_TAG: ((.:telegraf_image_tag))
    NGINX_IMAGE_TAG: ((.:nginx_image_tag))
  
  snippet_params_app_version: &snippet_params_app_version
    ENV: test-perf-1
    APPLICATION_IMAGE_TAG: ((.:application_image_tag))

resources:
  - name: deploy-to-perf-pipeline-definition
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-ci
      branch: master 
      paths:
        - ci/pipelines/deploy-to-perf.yml
  - name: pay-ci
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-ci
      branch: master
  - name: pay-infra
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-infra
      branch: master
      username: alphagov-pay-ci
      password: ((github-access-token))
  - name: adminusers-ecr-registry-perf
    type: registry-image
    icon: docker
    source:
      repository: govukpay/adminusers
      variant: perf
      <<: *aws_test_config
  - name: telegraf-ecr-registry-perf
    type: registry-image
    icon: docker
    source:
      repository: govukpay/telegraf
      variant: perf
      <<: *aws_test_config
  # - name: notifications-ecr-registry-perf
  #   type: registry-image
  #   icon: docker
  #   source:
  #     repository: govukpay/notifications
  #     variant: perf
  #     <<: *aws_test_config
  - name: nginx-proxy-ecr-registry-perf
    type: registry-image
    icon: docker
    source:
      repository: govukpay/docker-nginx-proxy
      variant: perf
      <<: *aws_test_config
  # - name: nginx-forward-proxy-ecr-registry-perf
  #   type: registry-image
  #   icon: docker
  #   source:
  #     repository: govukpay/nginx-forward-proxy
  #     variant: perf
  #     <<: *aws_test_config
  - name: slack-notification
    type: slack-notification
    source:
      url: https://hooks.slack.com/services/((slack-notification-secret))

resource_types:
  - name: registry-image
    type: registry-image
    source:
      repository: concourse/registry-image-resource
      tag: "1.4.1"
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource
      tag: latest

groups:
  - name: adminusers
    jobs:
      - deploy-adminusers-to-perf
  - name: update-deploy-to-perf-pipeline
    jobs:
      - update-deploy-to-perf-pipeline

jobs:
  - name: update-deploy-to-perf-pipeline
    plan:
      - get: deploy-to-perf-pipeline-definition
        trigger: true
      - set_pipeline: deploy-to-perf
        file: deploy-to-perf-pipeline-definition/ci/pipelines/deploy-to-perf.yml

  - name: deploy-adminusers-to-perf
    serial: true
    plan:
      - get: adminusers-ecr-registry-perf
        trigger: true
      - get: nginx-proxy-ecr-registry-perf
        trigger: true
      - get: telegraf-ecr-registry-perf
        trigger: true
      - get: pay-infra
      - get: pay-ci
      - load_var: application_image_tag
        file: adminusers-ecr-registry-perf/tag
      - load_var: nginx_image_tag
        file: nginx-proxy-ecr-registry-perf/tag
      - load_var: telegraf_image_tag
        file: telegraf-ecr-registry-perf/tag
      - task: create-notification-snippets
        file: pay-ci/ci/tasks/create-notification-snippets.yml
        params:
          APP_NAME: adminusers
          ACTION_NAME: Deployment
          <<: *snippet_params_all_versions
      - load_var: success_snippet
        file: snippet/success
      - load_var: failure_snippet
        file: snippet/failure
      - load_var: start_snippet
        file: snippet/start
      - <<: *put_start_slack_notification
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_test_account_id)):role/concourse
          AWS_ROLE_SESSION_NAME: terraform-test-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - task: check-release-versions
        file: pay-ci/ci/tasks/check-release-versions.yml
        params:
          <<: *check_release_versions_params
          APP_NAME: adminusers
      - task: deploy-to-perf
        file: pay-ci/ci/tasks/deploy-app.yml
        params:
          APP_NAME: adminusers
          <<: *deploy_params
      - task: wait-for-deploy
        file: pay-ci/ci/tasks/wait-for-deploy.yml
        params:
          APP_NAME: adminusers
          <<: *wait_for_deploy_params
    <<: *put_success_slack_notification
    <<: *put_failure_slack_notification
