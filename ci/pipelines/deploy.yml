---
groups:
  - name: Adminusers
    jobs:
      - build-adminusers
      - deploy-adminusers-staging
      - migrate-adminusers-db-staging
      - card-payment-smoke-tests-staging
      - direct-debit-smoke-tests-staging

  - name: Card Connector
    jobs:
      - build-card-connector
      - deploy-card-connector-staging
      - migrate-card-connector-db-staging
      - card-payment-smoke-tests-staging

  - name: Card ID
    jobs:
      - build-cardid
      - deploy-cardid-staging
      - deploy-cardid-data-staging
      - card-payment-smoke-tests-staging

  - name: Card Frontend
    jobs:
      - build-card-frontend
      - deploy-card-frontend-staging
      - card-payment-smoke-tests-staging

  - name: Direct Debit Connector
    jobs:
      - build-directdebit-connector
      - deploy-directdebit-connector-staging
      - migrate-directdebit-connector-db-staging
      - direct-debit-smoke-tests-staging

  - name: Direct Debit Frontend
    jobs:
      - build-directdebit-frontend
      - deploy-directdebit-frontend-staging
      - direct-debit-smoke-tests-staging

  - name: Ledger
    jobs:
      - build-ledger
      - deploy-ledger-staging
      - migrate-ledger-db-staging
      - card-payment-smoke-tests-staging
      - direct-debit-smoke-tests-staging

  - name: Products
    jobs:
      - build-products
      - deploy-products-staging
      - migrate-products-db-staging
      - products-smoke-test-staging

  - name: Products UI
    jobs:
      - build-products-ui
      - deploy-products-ui-staging
      - products-smoke-test-staging

  - name: Public API
    jobs:
      - build-publicapi
      - deploy-publicapi-staging
      - card-payment-smoke-tests-staging
      - direct-debit-smoke-tests-staging

  - name: PublicAuth
    jobs:
      - build-publicauth
      - deploy-publicauth-staging
      - migrate-publicauth-db-staging
      - card-payment-smoke-tests-staging
      - direct-debit-smoke-tests-staging

  - name: Other Services
    jobs:
      - build-toolbox
      - build-selfservice
      - deploy-selfservice-staging
      - deploy-notifications-staging
      - deploy-toolbox-staging
      - deploy-sqs-staging
      - update-pipeline

  - name: Smoke Tests
    jobs:
      - deploy-selenium-hub
      - deploy-smoke-tests-staging
      - smoke-tests-staging-network-policies
      - smoke-test-user-staging
      - card-payment-smoke-tests-staging
      - direct-debit-smoke-tests-staging
      - products-smoke-test-staging

  - name: Carbon Relay
    jobs:
      - deploy-carbon-relay-staging

  - name: PaaS Metric Exporter
    jobs:
      - deploy-metric-exporter-staging

resource_types:
  - name: cf-cli
    type: docker-image
    source:
      repository: nulldriver/cf-cli-resource
  - name: concourse-pipeline
    type: docker-image
    source:
      repository: concourse/concourse-pipeline-resource
  - name: travis
    type: docker-image
    source:
      repository: rbakergds/travis-resource
      tag: latest

resources:
  - name: omnibus
    type: git
    icon: github-circle
    source:
      uri: https://github.com/alphagov/pay-omnibus
      branch: master

  - name: every-10-minutes
    type: time
    icon: clock-outline
    source:
      interval: 10m

  - name: paas-staging
    type: cf-cli
    icon: cloud-upload-outline
    source:
      api: https://api.cloud.service.gov.uk
      org: govuk-pay
      space: staging
      username: ((paas-ireland-username))
      password: ((paas-ireland-password))

  - name: deploy-pipeline
    type: concourse-pipeline
    icon: pipe
    source:
      teams:
        - name: pay-deploy
          username: pay-deploy
          password: ((readonly_local_user_password))

  - name: carbon-relay-source
    type: git
    icon: github-circle
    source:
      uri: https://github.com/alphagov/pay-omnibus
      branch: master
      paths:
        - paas/carbon-relay/**

  # Git Repositories
  - &git-repo
    name: toolbox-source
    type: git
    icon: github-circle
    source: &git-repo-source
      uri: https://github.com/alphagov/pay-toolbox
      branch: master

  - <<: *git-repo
    name: card-frontend-source
    source:
      <<: *git-repo-source
      uri: https://github.com/alphagov/pay-frontend

  - <<: *git-repo
    name: products-ui-source
    source:
      <<: *git-repo-source
      uri: https://github.com/alphagov/pay-products-ui

  - <<: *git-repo
    name: selfservice-source
    source:
      <<: *git-repo-source
      uri: https://github.com/alphagov/pay-selfservice

  - <<: *git-repo
    name: dd-frontend-source
    source:
      <<: *git-repo-source
      uri: https://github.com/alphagov/pay-direct-debit-frontend

  - <<: *git-repo
    name: dd-connector-source
    source:
      <<: *git-repo-source
      uri: https://github.com/alphagov/pay-direct-debit-connector

  - <<: *git-repo
    name: card-connector-source
    source:
      <<: *git-repo-source
      uri: https://github.com/alphagov/pay-connector

  - <<: *git-repo
    name: publicapi-source
    source:
      <<: *git-repo-source
      uri: https://github.com/alphagov/pay-publicapi

  - <<: *git-repo
    name: publicauth-source
    source:
      <<: *git-repo-source
      uri: https://github.com/alphagov/pay-publicauth

  - <<: *git-repo
    name: adminusers-source
    source:
      <<: *git-repo-source
      uri: https://github.com/alphagov/pay-adminusers

  - <<: *git-repo
    name: products-source
    source:
      <<: *git-repo-source
      uri: https://github.com/alphagov/pay-products

  - <<: *git-repo
    name: ledger-source
    source:
      <<: *git-repo-source
      uri: https://github.com/alphagov/pay-ledger

  - <<: *git-repo
    name: cardid-source
    source:
      <<: *git-repo-source
      uri: https://github.com/alphagov/pay-cardid

  - <<: *git-repo
    name: metric-exporter-source
    source:
      uri: https://github.com/alphagov/paas-metric-exporter
      branch: master

  # Github Releases
  - name: git-card-frontend-pre-release
    type: github-release
    source: &github-release-source
      owner: alphagov
      access_token: ((github-access-token))
      tag_filter: "paas_release-(.*)"
      order_by: version
      repository: pay-frontend
      pre_release: true
      release: false

  - name: git-directdebit-frontend-pre-release
    type: github-release
    source:
      <<: *github-release-source
      repository: pay-direct-debit-frontend

  - name: git-selfservice-pre-release
    type: github-release
    source:
      <<: *github-release-source
      repository: pay-selfservice

  - name: git-products-ui-pre-release
    type: github-release
    source:
      <<: *github-release-source
      repository: pay-products-ui

  - name: git-card-connector-pre-release
    type: github-release
    source:
      <<: *github-release-source
      repository: pay-connector

  - name: git-publicauth-pre-release
    type: github-release
    source:
      <<: *github-release-source
      repository: pay-publicauth

  - name: git-publicapi-pre-release
    type: github-release
    source:
      <<: *github-release-source
      repository: pay-publicapi

  - name: cardid-data-source
    type: git
    icon: github-circle
    source:
      username: alphagov-pay-ci
      password: ((github-access-token))
      uri: https://github.com/alphagov/pay-cardid-data
      branch: master

  - name: git-cardid-pre-release
    type: github-release
    source:
      <<: *github-release-source
      repository: pay-cardid

  - name: git-directdebit-connector-pre-release
    type: github-release
    source:
      <<: *github-release-source
      repository: pay-direct-debit-connector

  - name: git-ledger-pre-release
    type: github-release
    source:
      <<: *github-release-source
      repository: pay-ledger

  - name: git-products-pre-release
    type: github-release
    source:
      <<: *github-release-source
      repository: pay-products

  - name: git-adminusers-pre-release
    type: github-release
    source:
      <<: *github-release-source
      repository: pay-adminusers

  - name: git-toolbox-pre-release
    type: github-release
    source:
      <<: *github-release-source
      repository: pay-toolbox

  - &image
    name: notifications
    type: docker-image
    icon: docker
    source: &image-source
      repository: govukpay/notifications
      tag: latest-master
      username: ((docker-username))
      password: ((docker-password))

  - name: paas-smoke-tests
    type: cf-cli
    icon: cloud-upload-outline
    source:
      api: https://api.cloud.service.gov.uk
      org: govuk-pay
      space: smoke-tests
      username: ((paas-ireland-username))
      password: ((paas-ireland-password))

  - name: endtoend-container
    type: registry-image
    icon: docker
    source:
      repository: govukpay/endtoend
      tag: latest-master
      username: ((docker-username))
      password: ((docker-password))

x-cf-creds: &cf-creds
  CF_API: https://api.cloud.service.gov.uk
  CF_USERNAME: ((paas-ireland-username))
  CF_PASSWORD: ((paas-ireland-password))
  CF_ORG: govuk-pay

jobs:
  - name: update-pipeline
    plan:
      - get: omnibus
        trigger: true
      - put: deploy-pipeline
        params:
          pipelines:
            - name: deploy
              team: pay-deploy
              config_file: omnibus/ci/pipelines/deploy.yml

  # Build Jobs
  - name: build-card-frontend
    plan:
      - get: omnibus
      - get: src
        resource: card-frontend-source
        trigger: true
      - task: calculate-release-number
        file: omnibus/ci/tasks/calculate-release-number.yml
      - task: build-app
        file: omnibus/ci/tasks/node-build.yml
        params:
          APP_NAME: pay-frontend
      - put: release
        resource: git-card-frontend-pre-release
        params: &release-params
          name: release-info/name
          tag: release-info/name
          globs:
            - build-output/*
          commitish: src/.git/ref

  - name: build-toolbox
    plan:
      - get: omnibus
      - get: src
        resource: toolbox-source
        trigger: true
      - task: calculate-release-number
        file: omnibus/ci/tasks/calculate-release-number.yml
      - task: build-app
        file: omnibus/ci/tasks/node-build.yml
        params:
          APP_NAME: pay-toolbox
      - put: release
        resource: git-toolbox-pre-release
        params: 
          <<: *release-params

  - name: build-products-ui
    plan:
      - get: omnibus
      - get: src
        resource: products-ui-source
        trigger: true
      - task: calculate-release-number
        file: omnibus/ci/tasks/calculate-release-number.yml
      - task: build-app
        file: omnibus/ci/tasks/node-build.yml
        params:
          APP_NAME: pay-products-ui
      - put: release
        resource: git-products-ui-pre-release
        params: 
          <<: *release-params

  - name: build-selfservice
    plan:
      - get: omnibus
      - get: src
        resource: selfservice-source
        trigger: true
      - task: calculate-release-number
        file: omnibus/ci/tasks/calculate-release-number.yml
      - task: build-app
        file: omnibus/ci/tasks/node-build.yml
        params:
          APP_NAME: pay-selfservice
      - put: release
        resource: git-selfservice-pre-release
        params: 
          <<: *release-params

  - name: build-directdebit-frontend
    plan:
      - get: omnibus
      - get: src
        resource: dd-frontend-source
        trigger: true
      - task: calculate-release-number
        file: omnibus/ci/tasks/calculate-release-number.yml
      - task: build-app
        file: omnibus/ci/tasks/node-build.yml
        params:
          APP_NAME: pay-direct-debit-frontend
      - put: release
        resource: git-directdebit-frontend-pre-release
        params: 
          <<: *release-params

  - name: build-directdebit-connector
    plan:
      - get: omnibus
      - get: src
        resource: dd-connector-source
        trigger: true
      - task: calculate-release-number
        file: omnibus/ci/tasks/calculate-release-number.yml
      - task: build-app
        file: omnibus/ci/tasks/maven-build.yml
        params:
          APP_NAME: pay-direct-debit-connector
      - put: release
        resource: git-directdebit-connector-pre-release
        params: 
          <<: *release-params

  - name: build-card-connector
    plan:
      - get: omnibus
      - get: src
        resource: card-connector-source
        trigger: true
      - task: calculate-release-number
        file: omnibus/ci/tasks/calculate-release-number.yml
      - task: build-app
        file: omnibus/ci/tasks/maven-build.yml
        params:
          APP_NAME: pay-connector
      - put: release
        resource: git-card-connector-pre-release
        params: 
          <<: *release-params

  - name: build-publicapi
    plan:
      - get: omnibus
      - get: src
        resource: publicapi-source
        trigger: true
      - task: calculate-release-number
        file: omnibus/ci/tasks/calculate-release-number.yml
      - task: build-app
        file: omnibus/ci/tasks/maven-build.yml
        params:
          APP_NAME: pay-publicapi
      - put: release
        resource: git-publicapi-pre-release
        params: 
          <<: *release-params

  - name: build-publicauth
    plan:
      - get: omnibus
      - get: src
        resource: publicauth-source
        trigger: true
      - task: calculate-release-number
        file: omnibus/ci/tasks/calculate-release-number.yml
      - task: build-app
        file: omnibus/ci/tasks/maven-build.yml
        params:
          APP_NAME: pay-publicauth
      - put: release
        resource: git-publicauth-pre-release
        params: 
          <<: *release-params

  - name: build-adminusers
    plan:
      - get: omnibus
      - get: src
        resource: adminusers-source
        trigger: true
      - task: calculate-release-number
        file: omnibus/ci/tasks/calculate-release-number.yml
      - task: build-app
        file: omnibus/ci/tasks/maven-build.yml
        params:
          APP_NAME: pay-adminusers
      - put: release
        resource: git-adminusers-pre-release
        params:
          name: release-info/name
          tag: release-info/name
          globs:
            - build-output/*
          commitish: src/.git/ref

  - name: build-products
    plan:
      - get: omnibus
      - get: src
        resource: products-source
        trigger: true
      - task: calculate-release-number
        file: omnibus/ci/tasks/calculate-release-number.yml
      - task: build-app
        file: omnibus/ci/tasks/maven-build.yml
        params:
          APP_NAME: pay-products
      - put: release
        resource: git-products-pre-release
        params:
          <<: *release-params

  - name: build-ledger
    plan:
      - get: omnibus
      - get: src
        resource: ledger-source
        trigger: true
      - task: calculate-release-number
        file: omnibus/ci/tasks/calculate-release-number.yml
      - task: build-app
        file: omnibus/ci/tasks/maven-build.yml
        params:
          APP_NAME: pay-ledger
      - put: release
        resource: git-ledger-pre-release
        params:
          <<: *release-params

  - name: build-cardid
    plan:
      - get: omnibus
      - get: src
        resource: cardid-source
        trigger: true
        params:
          submodules: none
      - task: calculate-release-number
        file: omnibus/ci/tasks/calculate-release-number.yml
      - task: build-app
        file: omnibus/ci/tasks/maven-build.yml
        params:
          APP_NAME: pay-cardid
      - put: release
        resource: git-cardid-pre-release
        params:
          <<: *release-params

  # Deploy Jobs
  - name: deploy-adminusers-staging
    serial_groups: [adminusers-stg]
    plan:
      - get: omnibus
      - get: git-adminusers-pre-release
        passed: [build-adminusers]
        trigger: true
      - task: extract-adminusers-artefact
        file: omnibus/ci/tasks/extract-artefact.yml
        input_mapping: { git-release: git-adminusers-pre-release }
      - task: deploy-to-paas-staging
        file: omnibus/ci/tasks/cf-v3-deploy.yml
        params: &app-deploy-config
          <<: *cf-creds
          CF_SPACE: staging
          APP_NAME: adminusers
          APP_PATH: artefact/target/pay-*-allinone.jar
          MANIFEST: artefact/manifest.yml
          VARS_FILE: omnibus/paas/env_variables/staging.yml
          ZDT: true

  - name: deploy-cardid-data-staging
    serial_groups: [cardid-data-stg]
    plan:
      - get: omnibus
      - get: cardid-data-source
        trigger: true
      - task: deploy-to-paas-staging
        file: omnibus/ci/tasks/cf-v3-deploy.yml
        params:
          <<: *cf-creds
          APP_NAME: cardid-data
          APP_PATH: cardid-data-source/sources
          MANIFEST: cardid-data-source/manifest.yml
          ZDT: true

  - name: deploy-cardid-staging
    serial_groups: [cardid-stg]
    plan:
      - get: omnibus
      - get: cardid-data-source
        passed: [deploy-cardid-data-staging]
        trigger: true
      - get: git-cardid-pre-release
        passed: [build-cardid]
        trigger: true
      - task: extract-cardid-artefact
        file: omnibus/ci/tasks/extract-artefact.yml
        input_mapping: { git-release: git-cardid-pre-release }
      - task: deploy-to-paas-staging
        file: omnibus/ci/tasks/cf-v3-deploy.yml
        params:
          <<: *app-deploy-config
          APP_NAME: cardid
          CF_SPACE: staging-cde
          ZDT: true

  - name: deploy-directdebit-frontend-staging
    serial_groups: [directdebit-frontend-stg]
    plan:
      - get: omnibus
      - get: git-directdebit-frontend-pre-release
        passed: [build-directdebit-frontend]
        trigger: true
      - task: extract-directdebit-frontend-artefact
        file: omnibus/ci/tasks/extract-artefact.yml
        input_mapping: { git-release: git-directdebit-frontend-pre-release }
      - task: deploy-to-paas-staging
        file: omnibus/ci/tasks/cf-v3-deploy.yml
        params:
          <<: *app-deploy-config
          APP_NAME: directdebit-frontend
          APP_PATH: artefact
          ZDT: true

  - name: deploy-card-connector-staging
    serial_groups: [card-connector-stg]
    plan:
      - get: omnibus
      - get: git-card-connector-pre-release
        passed: [build-card-connector]
        trigger: true
      - task: extract-card-connector-artefact
        file: omnibus/ci/tasks/extract-artefact.yml
        input_mapping: { git-release: git-card-connector-pre-release }
      - task: deploy-to-paas-staging
        file: omnibus/ci/tasks/cf-v3-deploy.yml
        params:
          <<: *app-deploy-config
          APP_NAME: card-connector
          CF_SPACE: staging-cde
          ZDT: true

  - name: deploy-card-frontend-staging
    serial_groups: [card-frontend-stg]
    plan:
      - get: omnibus
      - get: git-card-frontend-pre-release
        passed: [build-card-frontend]
        trigger: true
      - task: extract-card-frontend-artefact
        file: omnibus/ci/tasks/extract-artefact.yml
        input_mapping: { git-release: git-card-frontend-pre-release }
      - task: deploy-to-paas-staging
        file: omnibus/ci/tasks/cf-v3-deploy.yml
        params:
          <<: *app-deploy-config
          APP_NAME: card-frontend
          CF_SPACE: staging-cde
          APP_PATH: artefact
          ZDT: true

  - name: deploy-directdebit-connector-staging
    serial_groups: [directdebit-connector-stg]
    plan:
      - get: omnibus
      - get: git-directdebit-connector-pre-release
        passed: [build-directdebit-connector]
        trigger: true
      - task: extract-directdebit-connector-artefact
        file: omnibus/ci/tasks/extract-artefact.yml
        input_mapping: { git-release: git-directdebit-connector-pre-release }
      - task: deploy-to-paas-staging
        file: omnibus/ci/tasks/cf-v3-deploy.yml
        params:
          <<: *app-deploy-config
          APP_NAME: directdebit-connector
          ZDT: true

  - name: deploy-ledger-staging
    serial_groups: [ledger-stg]
    plan:
      - get: omnibus
      - get: git-ledger-pre-release
        passed: [build-ledger]
        trigger: true
      - task: extract-ledger-artefact
        file: omnibus/ci/tasks/extract-artefact.yml
        input_mapping: { git-release: git-ledger-pre-release }
      - task: deploy-to-paas-staging
        file: omnibus/ci/tasks/cf-v3-deploy.yml
        params:
          <<: *app-deploy-config
          APP_NAME: ledger
          ZDT: true

  - name: deploy-products-staging
    serial_groups: [products-stg]
    plan:
      - get: omnibus
      - get: git-products-pre-release
        passed: [build-products]
        trigger: true
      - task: extract-products-artefact
        file: omnibus/ci/tasks/extract-artefact.yml
        input_mapping: { git-release: git-products-pre-release }
      - task: deploy-to-paas-staging
        file: omnibus/ci/tasks/cf-v3-deploy.yml
        params:
          <<: *app-deploy-config
          APP_NAME: products
          ZDT: true

  - name: deploy-products-ui-staging
    serial_groups: [products-ui-stg]
    plan:
      - get: omnibus
      - get: git-products-ui-pre-release
        passed: [build-products-ui]
        trigger: true
      - task: extract-products-ui-artefact
        file: omnibus/ci/tasks/extract-artefact.yml
        input_mapping: { git-release: git-products-ui-pre-release }
      - task: deploy-to-paas-staging
        file: omnibus/ci/tasks/cf-v3-deploy.yml
        params:
          <<: *app-deploy-config
          APP_NAME: products-ui
          APP_PATH: artefact
          ZDT: true

  - name: deploy-publicapi-staging
    serial_groups: [publicapi-stg]
    plan:
      - get: omnibus
      - get: git-publicapi-pre-release
        passed: [build-publicapi]
        trigger: true
      - task: extract-publicapi-artefact
        file: omnibus/ci/tasks/extract-artefact.yml
        input_mapping: { git-release: git-publicapi-pre-release }
      - task: deploy-to-paas-staging
        file: omnibus/ci/tasks/cf-v3-deploy.yml
        params:
          <<: *app-deploy-config
          APP_NAME: publicapi
          ZDT: true

  - name: deploy-publicauth-staging
    serial_groups: [publicauth-stg]
    plan:
      - get: omnibus
      - get: git-publicauth-pre-release
        passed: [build-publicauth]
        trigger: true
      - task: extract-publicauth-artefact
        file: omnibus/ci/tasks/extract-artefact.yml
        input_mapping: { git-release: git-publicauth-pre-release }
      - task: deploy-to-paas-staging
        file: omnibus/ci/tasks/cf-v3-deploy.yml
        params:
          <<: *app-deploy-config
          APP_NAME: publicauth
          ZDT: true

  - name: deploy-selfservice-staging
    serial_groups: [selfservice-stg]
    plan:
      - get: omnibus
      - get: git-selfservice-pre-release
        passed: [build-selfservice]
        trigger: true
      - task: download-selfservice-artefact
        file: omnibus/ci/tasks/extract-artefact.yml
        input_mapping: { git-release: git-selfservice-pre-release }
      - task: deploy-to-paas-staging
        file: omnibus/ci/tasks/cf-v3-deploy.yml
        params:
          <<: *app-deploy-config
          APP_NAME: selfservice
          APP_PATH: artefact
          ZDT: true

  - name: deploy-carbon-relay-staging
    serial_groups: [carbon-relay-stg]
    plan:
      - get: carbon-relay-source
        trigger: true
      - get: omnibus
      - task: deploy-to-paas-staging
        file: omnibus/ci/tasks/cf-v3-deploy.yml
        params:
          <<: *app-deploy-config
          APP_NAME: carbon-relay
          MANIFEST: omnibus/paas/carbon-relay/manifest.yml
          APP_PATH: omnibus/paas/carbon-relay
          ZDT: true

  - name: deploy-toolbox-staging
    serial_groups: [toolbox-stg]
    plan:
      - get: omnibus
      - get: git-toolbox-pre-release
        passed: [build-toolbox]
        trigger: true
      - task: download-toolbox-artefact
        file: omnibus/ci/tasks/extract-artefact.yml
        input_mapping: { git-release: git-toolbox-pre-release }
      - task: deploy-to-paas-staging
        file: omnibus/ci/tasks/cf-v3-deploy.yml
        params:
          <<: *app-deploy-config
          APP_NAME: selfservice
          APP_PATH: artefact
          ZDT: true

  - name: deploy-notifications-staging
    serial_groups: [notifications-stg]
    plan:
      - get: omnibus
      - get: notifications
        trigger: true
        params:
          skip_download: true
      - task: deploy-to-paas-staging
        file: omnibus/ci/tasks/cf-v3-deploy.yml
        params:
          <<: *cf-creds
          APP_NAME: notifications 
          CF_SPACE: staging
          MANIFEST: omnibus/paas/pay-apps.yml
          CF_DOCKER_PASSWORD: ((docker-password))
          DOCKER_USERNAME: ((docker-username))
          VARS_FILE: omnibus/paas/env_variables/staging.yml
          ZDT: true

  - name: deploy-sqs-staging
    plan:
      - get: omnibus
      - put: app
        resource: paas-staging
        params:
          command: push
          docker_password: ((docker-password))
          docker-username: ((docker-username))
          app_name: sqs
          manifest: omnibus/paas/fake-sqs.yml
          vars:
            space: staging

  - name: deploy-metric-exporter-staging
    serial_groups: [metric-exporter-stg]
    plan:
      - get: omnibus
      - get: metric-exporter-source
      - task: copy-custom-env-map
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: alpine
          inputs:
            - name: omnibus
            - name: metric-exporter-source
          outputs:
            - name: metric-exporter-source
          run:
            path: cp
            args: ["omnibus/paas/metric-exporter/env-map.yml", "metric-exporter-source"]
      - task: deploy-to-paas-staging
        file: omnibus/ci/tasks/cf-v3-deploy.yml
        input_mapping: { artefact: "metric-exporter-source" }
        params:
          <<: *app-deploy-config
          APP_NAME: metric-exporter          
          CF_SPACE: staging
          MANIFEST: omnibus/paas/metric-exporter/manifest.yml
          APP_PATH: metric-exporter-source

  # Smoke Tests
  - name: deploy-selenium-hub
    serial_groups: [selenium-stg]
    serial: true
    plan:
      - get: omnibus
      - put: paas-smoke-tests
        params: &push-app
          command: push
          app_name: selenium-hub
          manifest: omnibus/paas/smoke-test-apps.yml
          vars_files:
            - omnibus/paas/env_variables/staging-smoke-tests.yml

  - name: deploy-smoke-tests-staging
    serial_groups: [smoke-tests-stg]
    plan:
      - get: omnibus
      - get: endtoend-container
        trigger: true
      - put: paas-smoke-tests
        params:
          <<: *push-app
          docker_password: ((docker-password))
          docker_username: ((docker-username))
          docker_image: govukpay/endtoend:latest-master
          app_name: smoke-tests-staging

  - name: smoke-tests-staging-network-policies
    serial_groups: [selenium-stg, smoke-tests-stg]
    plan:
      - get: omnibus
        passed: [deploy-selenium-hub, deploy-smoke-tests-staging]
      - get: endtoend-container
        passed: [deploy-smoke-tests-staging]
        trigger: true
      - put: apply-network-policies
        resource: paas-smoke-tests
        params:
          command: add-network-policy
          source_app: smoke-tests-staging
          destination_app: selenium-hub
          port: 4444
          protocol: tcp

  - name: smoke-test-user-staging
    serial_groups:
      - card-connector-stg
      - directdebit-connector-stg
      - publicapi-stg
      - publicauth-stg
      - adminusers-stg
      - products-stg
      - smoke-tests-stg
    plan:
      - get: omnibus
      - get: endtoend-container
        passed: [deploy-smoke-tests-staging]
        trigger: true
      - task: create-service
        file: omnibus/ci/tasks/smoke-test-user.yml
        params:
          <<: *cf-creds
          CF_SPACE: staging
          CF_SPACE_CDE: staging-cde
          CF_SPACE_TOOLS: smoke-tests
          SMOKE_TEST_APP: smoke-tests-staging
          SERVICE_NAME: smoke-test-user-staging

  - name: card-payment-smoke-tests-staging
    serial_groups: [cardid-stg, card-connector-stg, card-frontend-stg, ledger-stg, publicapi-stg, publicauth-stg]
    build_log_retention:
      builds: 1000
    plan:
      - get: omnibus
      - get: endtoend-container
        passed: [deploy-smoke-tests-staging, smoke-test-user-staging]
        trigger: true
      - get: every-10-minutes
        trigger: true
      - &trigger-test
        get: git-card-connector-pre-release
        passed: [migrate-card-connector-db-staging]
        trigger: true
        params:
          skip_download: true
      - <<: *trigger-test
        get: git-adminusers-pre-release
        passed: [migrate-adminusers-db-staging]
      - <<: *trigger-test
        get: git-cardid-pre-release
        passed: [deploy-cardid-staging]
      - <<: *trigger-test
        get: git-card-frontend-pre-release
        passed: [deploy-card-frontend-staging]
      - <<: *trigger-test
        get: git-ledger-pre-release
        passed: [migrate-ledger-db-staging]
      - <<: *trigger-test
        get: git-publicapi-pre-release
        passed: [deploy-publicapi-staging]
      - <<: *trigger-test
        get: git-publicauth-pre-release
        passed: [migrate-publicauth-db-staging]
      - task: run card smoke test
        file: omnibus/ci/tasks/cf-task.yml
        params: &smoke-test-params
          <<: *cf-creds
          CF_SPACE: smoke-tests
          COMMAND: cf ssh smoke-tests-staging -c /app/bin/smoke-cardp1
        on_success:
          task: notify hg
          file: omnibus/ci/tasks/send-hg-metric.yml
          params: 
            METRIC_NAME: ci.concourse.hosted-graphite.test
            METRIC_VALUE: 1
  - name: direct-debit-smoke-tests-staging
    serial_groups: [adminusers-stg, directdebit-connector-stg, directdebit-frontend-stg, ledger-stg, publicapi-stg, publicauth-stg]
    build_log_retention:
      builds: 1000
    plan:
      - get: omnibus
      - get: endtoend-container
        passed: [deploy-smoke-tests-staging, smoke-test-user-staging]
        trigger: true
      - get: every-10-minutes
        trigger: true
      - <<: *trigger-test
        get: git-adminusers-pre-release
        passed: [migrate-adminusers-db-staging]
      - <<: *trigger-test
        get: git-directdebit-connector-pre-release
        passed: [migrate-directdebit-connector-db-staging]
      - <<: *trigger-test
        get: git-directdebit-frontend-pre-release
        passed: [deploy-directdebit-frontend-staging]
      - <<: *trigger-test
        get: git-ledger-pre-release
        passed: [migrate-ledger-db-staging]
      - <<: *trigger-test
        get: git-publicapi-pre-release
        passed: [deploy-publicapi-staging]
      - <<: *trigger-test
        get: git-publicauth-pre-release
        passed: [migrate-publicauth-db-staging]
      - &direct-debit-smoke-test-task
        task: run direct debit smoke test
        file: omnibus/ci/tasks/cf-task.yml
        params:
          <<: *smoke-test-params
          COMMAND: cf ssh smoke-tests-staging -c /app/bin/smoke-directdebitp1

  - name: products-smoke-test-staging
    serial_groups: [products-stg, products-ui-stg]
    build_log_retention:
      builds: 1000
    plan:
      - get: omnibus
      - get: endtoend-container
        passed: [deploy-smoke-tests-staging, smoke-test-user-staging]
        trigger: true
      - get: every-10-minutes
        trigger: true
      - <<: *trigger-test
        get: git-products-pre-release
        passed: [migrate-products-db-staging]
      - <<: *trigger-test
        get: git-products-ui-pre-release
        passed: [deploy-products-ui-staging]
      - task: run products smoke test
        file: omnibus/ci/tasks/cf-task.yml
        params:
          <<: *smoke-test-params
          COMMAND: cf ssh smoke-tests-staging -c /app/bin/smoke-products

  # Database Migrations
  - name: migrate-adminusers-db-staging
    plan:
      - get: omnibus
      - get: git-adminusers-pre-release
        passed: [deploy-adminusers-staging]
        trigger: true
      - &run-migration
        task: run-migration
        file: omnibus/ci/tasks/cf-task.yml
        input_mapping: { workdir: omnibus }
        params:
          &migration-params
          <<: *cf-creds
          CF_SPACE: staging
          COMMAND: workdir/ci/scripts/migrate_database.sh
          APP_NAME: adminusers
          APP_PACKAGE: uk.gov.pay.adminusers.app.AdminUsersApp
    
  - name: migrate-card-connector-db-staging
    plan:
      - get: omnibus
      - get: git-card-connector-pre-release
        passed: [deploy-card-connector-staging]
        trigger: true
      - <<: *run-migration
        params:
          <<: *migration-params
          CF_SPACE: staging-cde
          APP_NAME: card-connector
          APP_PACKAGE: uk.gov.pay.connector.app.ConnectorApp

  - name: migrate-directdebit-connector-db-staging
    plan:
      - get: omnibus
      - get: git-directdebit-connector-pre-release
        passed: [deploy-directdebit-connector-staging]
        trigger: true
      - <<: *run-migration
        params:
          <<: *migration-params
          APP_NAME: directdebit-connector
          APP_PACKAGE: uk.gov.pay.directdebit.DirectDebitConnectorApp

  - name: migrate-ledger-db-staging
    plan:
      - get: omnibus
      - get: git-ledger-pre-release
        passed: [deploy-ledger-staging]
        trigger: true
      - <<: *run-migration
        params:
          <<: *migration-params
          APP_NAME: ledger
          APP_PACKAGE: uk.gov.pay.ledger.app.LedgerApp
  
  - name: migrate-products-db-staging
    plan:
      - get: omnibus
      - get: git-products-pre-release
        passed: [deploy-products-staging]
        trigger: true
      - <<: *run-migration
        params:
          <<: *migration-params
          APP_NAME: products
          APP_PACKAGE: uk.gov.pay.products.ProductsApplication

  - name: migrate-publicauth-db-staging
    plan:
      - get: omnibus
      - get: git-publicauth-pre-release
        passed: [deploy-publicauth-staging]
        trigger: true
      - <<: *run-migration
        params:
          <<: *migration-params
          APP_NAME: publicauth
          APP_PACKAGE: uk.gov.pay.publicauth.app.PublicAuthApp
                
