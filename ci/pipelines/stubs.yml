---
resource_types:
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource
      tag: latest

resources:
  - name: stubs-pipeline
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-ci
      branch: master
      paths:
        - ci/pipelines/stubs.yml

  - name: pay-ci
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-ci
      branch: master

  - name: pay-infra
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-infra
      branch: master
      username: alphagov-pay-ci-concourse
      password: ((github-access-token))

  - name: stubs-ecr-registry-deploy
    type: registry-image
    icon: docker
    source:
      repository: govukpay/stubs
      variant: release
      aws_access_key_id: ((readonly_access_key_id))
      aws_secret_access_key: ((readonly_secret_access_key))
      aws_session_token: ((readonly_session_token))
      aws_role_arn: arn:aws:iam::((pay_aws_deploy_account_id)):role/concourse
      aws_ecr_registry_id: "((pay_aws_deploy_account_id))"
      aws_region: eu-west-1

  - name: slack-notification
    type: slack-notification
    source:
      url: https://hooks.slack.com/services/((slack-notification-secret))

jobs:
  - name: set-pipeline
    plan:
      - get: stubs-pipeline
        trigger: true
      - set_pipeline: stubs
        file: stubs-pipeline/ci/pipelines/stubs.yml

  - name: deploy-stubs
    plan:
      - get: pay-ci
      - get: pay-infra
      - get: stubs-ecr-registry-deploy
        trigger: true
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_deploy_account_id)):role/pay-concourse-stubs-deploy-tooling
          AWS_ROLE_SESSION_NAME: terraform-deploy-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - load_var: stubs_image_tag
        file: stubs-ecr-registry-deploy/tag
      - file: pay-ci/ci/tasks/find-terraform-version.yml
        params:
          TERRAFORM_ROOT: pay-infra/provisioning/terraform/deployments/deploy/deploy-tooling/environment/stubs
        task: find-terraform-version
      - file: terraform-version/.terraform-version
        load_var: terraform-version
      - task: deploy-stubs
        file: pay-ci/ci/tasks/deploy-stubs.yml
        params:
          ACCOUNT: deploy
          ENVIRONMENT: deploy-tooling
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
          STUBS_IMAGE_TAG: ((.:stubs_image_tag))
      - task: wait-for-deploy
        file: pay-ci/ci/tasks/wait-for-deploy.yml
        params:
          ACCOUNT: deploy
          APP_NAME: stubs
          ENVIRONMENT: deploy-tooling
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
    on_failure:
      put: slack-notification
      attempts: 10
      params:
        channel: "#govuk-pay-starling"
        silent: true
        text: ":red-circle: Failed to deploy stubs image - <https://pay-cd.deploy.payments.service.gov.uk/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|Concourse build #$BUILD_NAME>"
        icon_emoji: ":concourse:"
        username: pay-concourse
    on_success:
      put: slack-notification
      attempts: 10
      params:
        channel: "#govuk-pay-activity"
        silent: true
        text: ":green-circle: Deployed stubs image - <https://pay-cd.deploy.payments.service.gov.uk/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|Concourse build #$BUILD_NAME>"
        icon_emoji: ":concourse:"
        username: pay-concourse
