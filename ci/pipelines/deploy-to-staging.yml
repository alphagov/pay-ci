definitions:
  aws_assumed_role_creds: &aws_assumed_role_creds
    AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
    AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
    AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))

  wait_for_deploy_params: &wait_for_deploy_params
    <<: *aws_assumed_role_creds
    TAG: ((.:tag))
    ENVIRONMENT: staging-2

  deploy_params: &deploy_params
    <<: *aws_assumed_role_creds
    TAG: ((.:tag))
    ACCOUNT: staging
    ENVIRONMENT: staging-2
    
  aws_production_config: &aws_production_config
    aws_access_key_id: ((readonly_access_key_id))
    aws_secret_access_key: ((readonly_secret_access_key))
    aws_session_token: ((readonly_session_token))
    aws_role_arn: arn:aws:iam::((pay_aws_prod_account_id)):role/concourse
    aws_ecr_registry_id: "((pay_aws_prod_account_id))"
    aws_region: eu-west-1
  
  aws_staging_config: &aws_staging_config
    aws_access_key_id: ((readonly_access_key_id))
    aws_secret_access_key: ((readonly_secret_access_key))
    aws_session_token: ((readonly_session_token))
    aws_role_arn: arn:aws:iam::((pay_aws_staging_account_id)):role/concourse
    aws_ecr_registry_id: "((pay_aws_staging_account_id))"
    aws_region: eu-west-1

resources:
  - name: deploy-to-staging-pipeline-definition
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-ci
      branch: master 
      paths:
        - ci/pipelines/deploy-to-staging.yml
  - name: pay-ci
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-ci
      branch: master
  - name: pay-infra
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-infra
      branch: master
      username: alphagov-pay-ci
      password: ((github-access-token))
  - name: toolbox-ecr-registry-staging
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/toolbox
      variant: release
      <<: *aws_staging_config
  - name: toolbox-ecr-registry-prod
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/toolbox
      <<: *aws_production_config
  - name: frontend-ecr-registry-staging
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/frontend
      variant: release
      <<: *aws_staging_config
  - name: frontend-ecr-registry-prod
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/frontend
      <<: *aws_production_config
  - name: adminusers-ecr-registry-staging
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/adminusers
      variant: release
      <<: *aws_staging_config
  - name: adminusers-ecr-registry-prod
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/adminusers
      <<: *aws_production_config
  - name: products-ecr-registry-staging
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/products
      variant: release
      <<: *aws_staging_config
  - name: products-ecr-registry-prod
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/products
      <<: *aws_production_config
  - name: products-ui-ecr-registry-staging
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/products-ui
      variant: release
      <<: *aws_staging_config
  - name: products-ui-ecr-registry-prod
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/products-ui
      <<: *aws_production_config
  - name: publicauth-ecr-registry-staging
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/publicauth
      variant: release
      <<: *aws_staging_config
  - name: publicauth-ecr-registry-prod
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/publicauth
      <<: *aws_production_config
  - name: cardid-ecr-registry-staging
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/cardid
      variant: release
      <<: *aws_staging_config
  - name: cardid-ecr-registry-prod
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/cardid
      <<: *aws_production_config
  - name: connector-ecr-registry-staging
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/connector
      variant: release
      <<: *aws_staging_config
  - name: connector-ecr-registry-prod
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/connector
      <<: *aws_production_config
  - name: selfservice-ecr-registry-staging
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/selfservice
      variant: release
      <<: *aws_staging_config
  - name: selfservice-ecr-registry-prod
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/selfservice
      <<: *aws_production_config
  - name: publicapi-ecr-registry-staging
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/publicapi
      variant: release
      <<: *aws_staging_config
  - name: publicapi-ecr-registry-prod
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/publicapi
      <<: *aws_production_config
  - name: ledger-ecr-registry-staging
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/ledger
      variant: release
      <<: *aws_staging_config
  - name: ledger-ecr-registry-prod
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/ledger
      <<: *aws_production_config
  - name: telegraf-ecr-registry-staging
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/telegraf
      variant: release
      <<: *aws_staging_config
  - name: telegraf-ecr-registry-prod
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/telegraf
      <<: *aws_production_config
  - name: nginx-proxy-ecr-registry-staging
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/docker-nginx-proxy
      variant: release
      <<: *aws_staging_config
  - name: nginx-proxy-ecr-registry-prod
    type: registry-image-resource-1-1-0
    icon: docker
    source:
      repository: govukpay/docker-nginx-proxy
      <<: *aws_production_config

resource_types:
  - name: registry-image-resource-1-1-0
    type: registry-image
    source:
      repository: concourse/registry-image-resource
      tag: "1.1.0"

groups:
  - name: update-deploy-to-staging-pipeline
    jobs:
      - update-deploy-to-staging-pipeline
  - name: toolbox
    jobs:
      - deploy-toolbox-to-staging
      - smoke-test-toolbox-on-staging
      - push-toolbox-to-production-ecr
  - name: frontend
    jobs:
      - deploy-frontend-to-staging
      - smoke-test-frontend-on-staging
      - frontend-pact-tag
      - push-frontend-to-production-ecr
  - name: adminusers
    jobs:
      - deploy-adminusers-to-staging
      - smoke-test-adminusers-on-staging
      - adminusers-pact-tag
      - push-adminusers-to-production-ecr
  - name: products
    jobs:
      - deploy-products-to-staging
      - smoke-test-products-on-staging
      - products-pact-tag
      - push-products-to-production-ecr
  - name: products-ui
    jobs:
      - deploy-products-ui-to-staging
      - smoke-test-products-ui-on-staging
      - products-ui-pact-tag
      - push-products-ui-to-production-ecr
  - name: publicauth
    jobs:
      - deploy-publicauth-to-staging
      - smoke-test-publicauth-on-staging
      - push-publicauth-to-production-ecr
  - name: cardid
    jobs:
      - deploy-cardid-to-staging
      - smoke-test-cardid-on-staging
      - push-cardid-to-production-ecr
  - name: connector
    jobs:
      - deploy-connector-to-staging
      - smoke-test-connector-on-staging
      - connector-pact-tag
      - push-connector-to-production-ecr
  - name: selfservice
    jobs:
      - deploy-selfservice-to-staging
      - smoke-test-selfservice-on-staging
      - selfservice-pact-tag
      - push-selfservice-to-production-ecr
  - name: publicapi
    jobs:
      - deploy-publicapi-to-staging
      - smoke-test-publicapi-on-staging
      - publicapi-pact-tag
      - push-publicapi-to-production-ecr
  - name: ledger
    jobs:
      - deploy-ledger-to-staging
      - smoke-test-ledger-on-staging
      - ledger-pact-tag
      - push-ledger-to-production-ecr
  - name: telegraf
    jobs:
      - deploy-toolbox-to-staging
      - push-telegraf-to-production-ecr
  - name: nginx-proxy
    jobs:
      - deploy-toolbox-to-staging
      - push-nginx-proxy-to-production-ecr

jobs:
  - name: update-deploy-to-staging-pipeline
    plan:
      - get: deploy-to-staging-pipeline-definition
        trigger: true
      - set_pipeline: deploy-to-staging
        file: deploy-to-staging-pipeline-definition/ci/pipelines/deploy-to-staging.yml
        
  - name: deploy-selfservice-to-staging
    plan:
      - get: selfservice-ecr-registry-staging
        trigger: true
      - get: pay-infra
      - get: pay-ci
      - load_var: tag
        file: selfservice-ecr-registry-staging/tag
      - task: get-git-sha-for-release-tag
        file: pay-ci/ci/tasks/get-git-sha-for-release-tag.yml
        params:
          APP_NAME: selfservice
          TAG: ((.:tag))
      - load_var: git-sha
        file: git-sha/git-sha
      - task: check-pact-compatibility
        file: pay-ci/ci/tasks/check-pact-compatibility.yml
        params:
          GIT_SHA: ((.:git-sha))
          APP_NAME: selfservice
          PACT_TAG: staging-fargate
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_staging_account_id)):role/concourse
          AWS_ROLE_SESSION_NAME: terraform-staging-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - task: deploy-to-staging
        file: pay-ci/ci/tasks/deploy-app.yml
        params:
          APP_NAME: selfservice
          <<: *deploy_params
      - task: wait-for-deploy
        file: pay-ci/ci/tasks/wait-for-deploy.yml
        params:
          APP_NAME: selfservice
          <<: *wait_for_deploy_params
  - name: smoke-test-selfservice-on-staging
    plan:
      - get: selfservice-ecr-registry-staging
        trigger: true
        passed: [deploy-selfservice-to-staging]
      - task: smoke-test-on-staging
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: govukpay/concourse-runner
          run:
            path: /bin/bash
            args:
            - -ec
            - |
              echo "Imagine we just smoked on staging."
  - name: selfservice-pact-tag
    plan:
      - get: selfservice-ecr-registry-staging
        passed: [smoke-test-selfservice-on-staging]
        trigger: true
      - load_var: tag
        file: selfservice-ecr-registry-staging/tag
      - get: pay-ci
      - task: get-git-sha-for-release-tag
        file: pay-ci/ci/tasks/get-git-sha-for-release-tag.yml
        params:
          APP_NAME: selfservice
          TAG: ((.:tag))
      - load_var: git-sha
        file: git-sha/git-sha
      - task: tag-pact
        file: pay-ci/ci/tasks/pact-tag.yml
        params:
          GIT_SHA: ((.:git-sha))
          APP_NAME: selfservice
          PACT_TAG: staging-fargate

  - name: push-selfservice-to-production-ecr
    plan:
      - get: selfservice-ecr-registry-staging
        params:
          format: oci
        trigger: true
        passed: [smoke-test-selfservice-on-staging]
      - put: selfservice-ecr-registry-prod
        params:
          image: selfservice-ecr-registry-staging/image.tar
          additional_tags: selfservice-ecr-registry-staging/tag

  - name: deploy-connector-to-staging
    plan:
      - get: connector-ecr-registry-staging
      - get: pay-infra
      - get: pay-ci
      - load_var: tag
        file: connector-ecr-registry-staging/tag
      - task: get-git-sha-for-release-tag
        file: pay-ci/ci/tasks/get-git-sha-for-release-tag.yml
        params:
          APP_NAME: connector
          TAG: ((.:tag))
      - load_var: git-sha
        file: git-sha/git-sha
      - task: check-pact-compatibility
        file: pay-ci/ci/tasks/check-pact-compatibility.yml
        params:
          GIT_SHA: ((.:git-sha))
          APP_NAME: connector
          PACT_TAG: staging-fargate
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_staging_account_id)):role/concourse
          AWS_ROLE_SESSION_NAME: terraform-staging-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - task: deploy-to-staging
        file: pay-ci/ci/tasks/deploy-app.yml
        params:
          APP_NAME: connector
          <<: *deploy_params
      - task: wait-for-deploy
        file: pay-ci/ci/tasks/wait-for-deploy.yml
        params:
          APP_NAME: connector
          <<: *wait_for_deploy_params
  - name: smoke-test-connector-on-staging
    plan:
      - get: connector-ecr-registry-staging
        trigger: true
        passed: [deploy-connector-to-staging]
      - task: smoke-test-on-staging
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: govukpay/concourse-runner
          run:
            path: /bin/bash
            args:
            - -ec
            - |
              echo "Imagine we just smoked on staging."
  - name: connector-pact-tag
    plan:
      - get: connector-ecr-registry-staging
        passed: [smoke-test-connector-on-staging]
        trigger: true
      - load_var: tag
        file: connector-ecr-registry-staging/tag
      - get: pay-ci
      - task: get-git-sha-for-release-tag
        file: pay-ci/ci/tasks/get-git-sha-for-release-tag.yml
        params:
          APP_NAME: connector
          TAG: ((.:tag))
      - load_var: git-sha
        file: git-sha/git-sha
      - task: tag-pact
        file: pay-ci/ci/tasks/pact-tag.yml
        params:
          GIT_SHA: ((.:git-sha))
          APP_NAME: connector
          PACT_TAG: staging-fargate

  - name: push-connector-to-production-ecr
    plan:
      - get: connector-ecr-registry-staging
        params:
          format: oci
        trigger: true
        passed: [smoke-test-connector-on-staging]
      - put: connector-ecr-registry-prod
        params:
          image: connector-ecr-registry-staging/image.tar
          additional_tags: connector-ecr-registry-staging/tag

  - name: deploy-toolbox-to-staging
    plan:
      - get: toolbox-ecr-registry-staging
        trigger: true
      - get: telegraf-ecr-registry-staging
        trigger: true
      - get: nginx-proxy-ecr-registry-staging
        trigger: true
      - get: pay-infra
      - get: pay-ci
      - load_var: tag
        file: toolbox-ecr-registry-staging/tag
      - load_var: telegraf_image_tag
        file: telegraf-ecr-registry-staging/tag
      - load_var: nginx_image_tag
        file: nginx-proxy-ecr-registry-staging/tag
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_staging_account_id)):role/concourse
          AWS_ROLE_SESSION_NAME: terraform-staging-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - task: deploy-to-staging
        config:
          platform: linux
          inputs:
            - name: pay-infra
          image_resource:
            type: registry-image
            source:
              repository: hashicorp/terraform
              tag: 0.13.4
          params:
            APP_NAME: toolbox
            APP_IMAGE_TAG: ((.:tag))
            TELEGRAF_IMAGE_TAG: ((.:telegraf_image_tag))
            NGINX_IMAGE_TAG: ((.:nginx_image_tag))
            ACCOUNT: staging
            ENVIRONMENT: staging-2
            AWS_REGION: eu-west-1
            <<: *aws_assumed_role_creds
          run:
            path: /bin/sh
            args:
              - -ec
              - |
                cd pay-infra/provisioning/terraform/deployments/${ACCOUNT}/${ENVIRONMENT}/microservices_v2/${APP_NAME}
                terraform init
                terraform apply \
                  -var application_image_tag=${APP_IMAGE_TAG} \
                  -var telegraf_image_tag=${TELEGRAF_IMAGE_TAG} \
                  -var nginx_image_tag=${NGINX_IMAGE_TAG} \
                  -auto-approve
      - task: wait-for-deploy
        file: pay-ci/ci/tasks/wait-for-deploy.yml
        params:
          APP_NAME: toolbox
          <<: *wait_for_deploy_params
  - name: smoke-test-toolbox-on-staging
    plan:
      - get: toolbox-ecr-registry-staging
        trigger: true
        passed: [deploy-toolbox-to-staging]
      - task: smoke-test-on-staging
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: govukpay/concourse-runner
          run:
            path: /bin/bash
            args:
            - -ec
            - |
              echo "Imagine we just smoked on staging."
  - name: push-toolbox-to-production-ecr
    plan:
      - get: toolbox-ecr-registry-staging
        params:
          format: oci
        trigger: true
        passed: [smoke-test-toolbox-on-staging]
      - put: toolbox-ecr-registry-prod
        params:
          image: toolbox-ecr-registry-staging/image.tar
          additional_tags: toolbox-ecr-registry-staging/tag

  - name: deploy-frontend-to-staging
    plan:
      - get: frontend-ecr-registry-staging
      - get: pay-infra
      - get: pay-ci
      - load_var: tag
        file: frontend-ecr-registry-staging/tag
      - task: get-git-sha-for-release-tag
        file: pay-ci/ci/tasks/get-git-sha-for-release-tag.yml
        params:
          APP_NAME: frontend
          TAG: ((.:tag))
      - load_var: git-sha
        file: git-sha/git-sha
      - task: check-pact-compatibility
        file: pay-ci/ci/tasks/check-pact-compatibility.yml
        params:
          GIT_SHA: ((.:git-sha))
          APP_NAME: frontend
          PACT_TAG: staging-fargate
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_staging_account_id)):role/concourse
          AWS_ROLE_SESSION_NAME: terraform-staging-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - task: deploy-to-staging
        file: pay-ci/ci/tasks/deploy-app.yml
        params:
          APP_NAME: frontend
          <<: *deploy_params
      - task: wait-for-deploy
        file: pay-ci/ci/tasks/wait-for-deploy.yml
        params:
          APP_NAME: frontend
          <<: *wait_for_deploy_params
  - name: smoke-test-frontend-on-staging
    plan:
      - get: frontend-ecr-registry-staging
        trigger: true
        passed: [deploy-frontend-to-staging]
      - task: smoke-test-on-staging
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: govukpay/concourse-runner
          run:
            path: /bin/bash
            args:
            - -ec
            - |
              echo "Imagine we just smoked on staging."
  - name: frontend-pact-tag
    plan:
      - get: frontend-ecr-registry-staging
        passed: [smoke-test-frontend-on-staging]
        trigger: true
      - load_var: tag
        file: frontend-ecr-registry-staging/tag
      - get: pay-ci
      - task: get-git-sha-for-release-tag
        file: pay-ci/ci/tasks/get-git-sha-for-release-tag.yml
        params:
          APP_NAME: frontend
          TAG: ((.:tag))
      - load_var: git-sha
        file: git-sha/git-sha
      - task: tag-pact
        file: pay-ci/ci/tasks/pact-tag.yml
        params:
          GIT_SHA: ((.:git-sha))
          APP_NAME: frontend
          PACT_TAG: staging-fargate
  - name: push-frontend-to-production-ecr
    plan:
      - get: frontend-ecr-registry-staging
        params:
          format: oci
        trigger: true
        passed: [frontend-pact-tag]
      - put: frontend-ecr-registry-prod
        params:
          image: frontend-ecr-registry-staging/image.tar
          additional_tags: frontend-ecr-registry-staging/tag
          
  - name: deploy-adminusers-to-staging
    plan:
      - get: adminusers-ecr-registry-staging
        trigger: true
      - get: pay-infra
      - get: pay-ci
      - load_var: tag
        file: adminusers-ecr-registry-staging/tag
      - task: get-git-sha-for-release-tag
        file: pay-ci/ci/tasks/get-git-sha-for-release-tag.yml
        params:
          APP_NAME: adminusers
          TAG: ((.:tag))
      - load_var: git-sha
        file: git-sha/git-sha
      - task: check-pact-compatibility
        file: pay-ci/ci/tasks/check-pact-compatibility.yml
        params:
          GIT_SHA: ((.:git-sha))
          APP_NAME: adminusers
          PACT_TAG: staging-fargate
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_staging_account_id)):role/concourse
          AWS_ROLE_SESSION_NAME: terraform-staging-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - task: deploy-to-staging
        file: pay-ci/ci/tasks/deploy-app.yml
        params:
          APP_NAME: adminusers
          <<: *deploy_params
      - task: wait-for-deploy
        file: pay-ci/ci/tasks/wait-for-deploy.yml
        params:
          APP_NAME: adminusers
          <<: *wait_for_deploy_params
  - name: smoke-test-adminusers-on-staging
    plan:
      - get: adminusers-ecr-registry-staging
        trigger: true
        passed: [deploy-adminusers-to-staging]
      - task: smoke-test-on-staging
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: govukpay/concourse-runner
          run:
            path: /bin/bash
            args:
            - -ec
            - |
              echo "Imagine we just smoked on staging."
  - name: adminusers-pact-tag
    plan:
      - get: adminusers-ecr-registry-staging
        passed: [smoke-test-adminusers-on-staging]
        trigger: true
      - load_var: tag
        file: adminusers-ecr-registry-staging/tag
      - get: pay-ci
      - task: get-git-sha-for-release-tag
        file: pay-ci/ci/tasks/get-git-sha-for-release-tag.yml
        params:
          APP_NAME: adminusers
          TAG: ((.:tag))
      - load_var: git-sha
        file: git-sha/git-sha
      - task: tag-pact
        file: pay-ci/ci/tasks/pact-tag.yml
        params:
          GIT_SHA: ((.:git-sha))
          APP_NAME: adminusers
          PACT_TAG: staging-fargate
  - name: push-adminusers-to-production-ecr
    plan:
      - get: adminusers-ecr-registry-staging
        params:
          format: oci
        trigger: true
        passed: [adminusers-pact-tag]
      - put: adminusers-ecr-registry-prod
        params:
          image: adminusers-ecr-registry-staging/image.tar
          additional_tags: adminusers-ecr-registry-staging/tag
          
  - name: deploy-products-to-staging
    plan:
      - get: products-ecr-registry-staging
      - get: pay-infra
      - get: pay-ci
      - load_var: tag
        file: products-ecr-registry-staging/tag
      - task: get-git-sha-for-release-tag
        file: pay-ci/ci/tasks/get-git-sha-for-release-tag.yml
        params:
          APP_NAME: products
          TAG: ((.:tag))
      - load_var: git-sha
        file: git-sha/git-sha
      - task: check-pact-compatibility
        file: pay-ci/ci/tasks/check-pact-compatibility.yml
        params:
          GIT_SHA: ((.:git-sha))
          APP_NAME: products
          PACT_TAG: staging-fargate
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_staging_account_id)):role/concourse
          AWS_ROLE_SESSION_NAME: terraform-staging-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - task: deploy-to-staging
        file: pay-ci/ci/tasks/deploy-app.yml
        params:
          APP_NAME: products
          <<: *deploy_params
      - task: wait-for-deploy
        file: pay-ci/ci/tasks/wait-for-deploy.yml
        params:
          APP_NAME: products
          <<: *wait_for_deploy_params
  - name: smoke-test-products-on-staging
    plan:
      - get: products-ecr-registry-staging
        trigger: true
        passed: [deploy-products-to-staging]
      - task: smoke-test-on-staging
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: govukpay/concourse-runner
          run:
            path: /bin/bash
            args:
            - -ec
            - |
              echo "Imagine we just smoked on staging."
  - name: products-pact-tag
    plan:
      - get: products-ecr-registry-staging
        passed: [smoke-test-products-on-staging]
        trigger: true
      - load_var: tag
        file: products-ecr-registry-staging/tag
      - get: pay-ci
      - task: get-git-sha-for-release-tag
        file: pay-ci/ci/tasks/get-git-sha-for-release-tag.yml
        params:
          APP_NAME: products
          TAG: ((.:tag))
      - load_var: git-sha
        file: git-sha/git-sha
      - task: tag-pact
        file: pay-ci/ci/tasks/pact-tag.yml
        params:
          GIT_SHA: ((.:git-sha))
          APP_NAME: products
          PACT_TAG: staging-fargate
  - name: push-products-to-production-ecr
    plan:
      - get: products-ecr-registry-staging
        params:
          format: oci
        trigger: true
        passed: [products-pact-tag]
      - put: products-ecr-registry-prod
        params:
          image: products-ecr-registry-staging/image.tar
          additional_tags: products-ecr-registry-staging/tag
          
  - name: deploy-products-ui-to-staging
    plan:
      - get: products-ui-ecr-registry-staging
      - get: pay-infra
      - get: pay-ci
      - load_var: tag
        file: products-ui-ecr-registry-staging/tag
      - task: get-git-sha-for-release-tag
        file: pay-ci/ci/tasks/get-git-sha-for-release-tag.yml
        params:
          APP_NAME: products-ui
          TAG: ((.:tag))
      - load_var: git-sha
        file: git-sha/git-sha
      - task: check-pact-compatibility
        file: pay-ci/ci/tasks/check-pact-compatibility.yml
        params:
          GIT_SHA: ((.:git-sha))
          APP_NAME: products-ui
          PACT_TAG: staging-fargate
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_staging_account_id)):role/concourse
          AWS_ROLE_SESSION_NAME: terraform-staging-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - task: deploy-to-staging
        file: pay-ci/ci/tasks/deploy-app.yml
        params:
          APP_NAME: products-ui
          <<: *deploy_params
      - task: wait-for-deploy
        file: pay-ci/ci/tasks/wait-for-deploy.yml
        params:
          APP_NAME: products-ui
          <<: *wait_for_deploy_params
  - name: smoke-test-products-ui-on-staging
    plan:
      - get: products-ui-ecr-registry-staging
        trigger: true
        passed: [deploy-products-ui-to-staging]
      - task: smoke-test-on-staging
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: govukpay/concourse-runner
          run:
            path: /bin/bash
            args:
            - -ec
            - |
              echo "Imagine we just smoked on staging."
  - name: products-ui-pact-tag
    plan:
      - get: products-ui-ecr-registry-staging
        passed: [smoke-test-products-ui-on-staging]
        trigger: true
      - load_var: tag
        file: products-ui-ecr-registry-staging/tag
      - get: pay-ci
      - task: get-git-sha-for-release-tag
        file: pay-ci/ci/tasks/get-git-sha-for-release-tag.yml
        params:
          APP_NAME: products-ui
          TAG: ((.:tag))
      - load_var: git-sha
        file: git-sha/git-sha
      - task: tag-pact
        file: pay-ci/ci/tasks/pact-tag.yml
        params:
          GIT_SHA: ((.:git-sha))
          APP_NAME: products-ui
          PACT_TAG: staging-fargate
  - name: push-products-ui-to-production-ecr
    plan:
      - get: products-ui-ecr-registry-staging
        params:
          format: oci
        trigger: true
        passed: [products-ui-pact-tag]
      - put: products-ui-ecr-registry-prod
        params:
          image: products-ui-ecr-registry-staging/image.tar
          additional_tags: products-ui-ecr-registry-staging/tag
          
  - name: deploy-publicauth-to-staging
    plan:
      - get: publicauth-ecr-registry-staging
      - get: pay-infra
      - get: pay-ci
      - load_var: tag
        file: publicauth-ecr-registry-staging/tag
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_staging_account_id)):role/concourse
          AWS_ROLE_SESSION_NAME: terraform-staging-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - task: deploy-to-staging
        file: pay-ci/ci/tasks/deploy-app.yml
        params:
          APP_NAME: publicauth
          <<: *deploy_params
      - task: wait-for-deploy
        file: pay-ci/ci/tasks/wait-for-deploy.yml
        params:
          APP_NAME: publicauth
          <<: *wait_for_deploy_params
  - name: smoke-test-publicauth-on-staging
    plan:
      - get: publicauth-ecr-registry-staging
        trigger: true
        passed: [deploy-publicauth-to-staging]
      - task: smoke-test-on-staging
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: govukpay/concourse-runner
          run:
            path: /bin/bash
            args:
            - -ec
            - |
              echo "Imagine we just smoked on staging."
  - name: push-publicauth-to-production-ecr
    plan:
      - get: publicauth-ecr-registry-staging
        params:
          format: oci
        trigger: true
        passed: [smoke-test-publicauth-on-staging]
      - put: publicauth-ecr-registry-prod
        params:
          image: publicauth-ecr-registry-staging/image.tar
          additional_tags: publicauth-ecr-registry-staging/tag

  - name: deploy-cardid-to-staging
    plan:
      - get: cardid-ecr-registry-staging
      - get: pay-infra
      - get: pay-ci
      - load_var: tag
        file: cardid-ecr-registry-staging/tag
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_staging_account_id)):role/concourse
          AWS_ROLE_SESSION_NAME: terraform-staging-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - task: deploy-to-staging
        file: pay-ci/ci/tasks/deploy-app.yml
        params:
          APP_NAME: cardid
          <<: *deploy_params
      - task: wait-for-deploy
        file: pay-ci/ci/tasks/wait-for-deploy.yml
        params:
          APP_NAME: cardid
          <<: *wait_for_deploy_params
  - name: smoke-test-cardid-on-staging
    plan:
      - get: cardid-ecr-registry-staging
        trigger: true
        passed: [deploy-cardid-to-staging]
      - task: smoke-test-on-staging
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: govukpay/concourse-runner
          run:
            path: /bin/bash
            args:
            - -ec
            - |
              echo "Imagine we just smoked on staging."
  - name: push-cardid-to-production-ecr
    plan:
      - get: cardid-ecr-registry-staging
        params:
          format: oci
        trigger: true
        passed: [smoke-test-cardid-on-staging]
      - put: cardid-ecr-registry-prod
        params:
          image: cardid-ecr-registry-staging/image.tar
          additional_tags: cardid-ecr-registry-staging/tag
          
  - name: deploy-publicapi-to-staging
    plan:
      - get: publicapi-ecr-registry-staging
      - get: pay-infra
      - get: pay-ci
      - load_var: tag
        file: publicapi-ecr-registry-staging/tag
      - task: get-git-sha-for-release-tag
        file: pay-ci/ci/tasks/get-git-sha-for-release-tag.yml
        params:
          APP_NAME: publicapi
          TAG: ((.:tag))
      - load_var: git-sha
        file: git-sha/git-sha
      - task: check-pact-compatibility
        file: pay-ci/ci/tasks/check-pact-compatibility.yml
        params:
          GIT_SHA: ((.:git-sha))
          APP_NAME: publicapi
          PACT_TAG: staging-fargate
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_staging_account_id)):role/concourse
          AWS_ROLE_SESSION_NAME: terraform-staging-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - task: deploy-to-staging
        file: pay-ci/ci/tasks/deploy-app.yml
        params:
          APP_NAME: publicapi
          <<: *deploy_params
      - task: wait-for-deploy
        file: pay-ci/ci/tasks/wait-for-deploy.yml
        params:
          APP_NAME: publicapi
          <<: *wait_for_deploy_params
  - name: smoke-test-publicapi-on-staging
    plan:
      - get: publicapi-ecr-registry-staging
        trigger: true
        passed: [deploy-publicapi-to-staging]
      - task: smoke-test-on-staging
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: govukpay/concourse-runner
          run:
            path: /bin/bash
            args:
            - -ec
            - |
              echo "Imagine we just smoked on staging."
  - name: publicapi-pact-tag
    plan:
      - get: publicapi-ecr-registry-staging
        passed: [smoke-test-publicapi-on-staging]
        trigger: true
      - load_var: tag
        file: publicapi-ecr-registry-staging/tag
      - get: pay-ci
      - task: get-git-sha-for-release-tag
        file: pay-ci/ci/tasks/get-git-sha-for-release-tag.yml
        params:
          APP_NAME: publicapi
          TAG: ((.:tag))
      - load_var: git-sha
        file: git-sha/git-sha
      - task: tag-pact
        file: pay-ci/ci/tasks/pact-tag.yml
        params:
          GIT_SHA: ((.:git-sha))
          APP_NAME: publicapi
          PACT_TAG: staging-fargate
          
  - name: push-publicapi-to-production-ecr
    plan:
      - get: publicapi-ecr-registry-staging
        params:
          format: oci
        trigger: true
        passed: [smoke-test-publicapi-on-staging]
      - put: publicapi-ecr-registry-prod
        params:
          image: publicapi-ecr-registry-staging/image.tar
          additional_tags: publicapi-ecr-registry-staging/tag
  - name: deploy-ledger-to-staging
    plan:
      - get: ledger-ecr-registry-staging
        trigger: true
      - get: pay-infra
      - get: pay-ci
      - load_var: tag
        file: ledger-ecr-registry-staging/tag
      - task: get-git-sha-for-release-tag
        file: pay-ci/ci/tasks/get-git-sha-for-release-tag.yml
        params:
          APP_NAME: ledger
          TAG: ((.:tag))
      - load_var: git-sha
        file: git-sha/git-sha
      - task: check-pact-compatibility
        file: pay-ci/ci/tasks/check-pact-compatibility.yml
        params:
          GIT_SHA: ((.:git-sha))
          APP_NAME: ledger
          PACT_TAG: staging-fargate
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_staging_account_id)):role/concourse
          AWS_ROLE_SESSION_NAME: terraform-staging-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - task: deploy-to-staging
        file: pay-ci/ci/tasks/deploy-app.yml
        params:
          APP_NAME: ledger
          <<: *deploy_params
      - task: wait-for-deploy
        file: pay-ci/ci/tasks/wait-for-deploy.yml
        params:
          APP_NAME: ledger
          <<: *wait_for_deploy_params
  - name: smoke-test-ledger-on-staging
    plan:
      - get: ledger-ecr-registry-staging
        trigger: true
        passed: [deploy-ledger-to-staging]
      - task: smoke-test-on-staging
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: govukpay/concourse-runner
          run:
            path: /bin/bash
            args:
            - -ec
            - |
              echo "Imagine we just smoked on staging."
  - name: ledger-pact-tag
    plan:
      - get: ledger-ecr-registry-staging
        passed: [smoke-test-ledger-on-staging]
        trigger: true
      - load_var: tag
        file: ledger-ecr-registry-staging/tag
      - get: pay-ci
      - task: get-git-sha-for-release-tag
        file: pay-ci/ci/tasks/get-git-sha-for-release-tag.yml
        params:
          APP_NAME: ledger
          TAG: ((.:tag))
      - load_var: git-sha
        file: git-sha/git-sha
      - task: tag-pact
        file: pay-ci/ci/tasks/pact-tag.yml
        params:
          GIT_SHA: ((.:git-sha))
          APP_NAME: ledger
          PACT_TAG: staging-fargate
          
  - name: push-ledger-to-production-ecr
    plan:
      - get: ledger-ecr-registry-staging
        params:
          format: oci
        trigger: true
        passed: [smoke-test-ledger-on-staging]
      - put: ledger-ecr-registry-prod
        params:
          image: ledger-ecr-registry-staging/image.tar
          additional_tags: ledger-ecr-registry-staging/tag
  - name: push-telegraf-to-production-ecr
    plan:
      - get: telegraf-ecr-registry-staging
        params:
          format: oci
        trigger: true
        passed: [deploy-toolbox-to-staging]
      - put: telegraf-ecr-registry-prod
        params:
          image: telegraf-ecr-registry-staging/image.tar
          additional_tags: telegraf-ecr-registry-staging/tag
  - name: push-nginx-proxy-to-production-ecr
    plan:
      - get: nginx-proxy-ecr-registry-staging
        params:
          format: oci
        trigger: true
        passed: [deploy-toolbox-to-staging]
      - put: nginx-proxy-ecr-registry-prod
        params:
          image: nginx-proxy-ecr-registry-staging/image.tar
          additional_tags: nginx-proxy-ecr-registry-staging/tag