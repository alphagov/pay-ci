---
resources:
  - name: endtoend-src
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-endtoend
      branch: master
      username: alphagov-pay-ci
      password: ((github-access-token))

  - name: reverse-proxy-src
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-scripts
      branch: master
      username: alphagov-pay-ci
      password: ((github-access-token))
      paths:
        # Should trigger on any changes to this folder
        - images/proxy/*

  - name: stubs-src
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-stubs
      branch: master
      username: alphagov-pay-ci
      password: ((github-access-token))

  - name: pay-infra-src
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-infra
      branch: master
      username: alphagov-pay-ci
      password: ((github-access-token))

  - name: endtoend-ecr-registry-test
    type: registry-image
    icon: docker
    source:
      repository: govukpay/endtoend
      variant: release
      aws_access_key_id: ((readonly_access_key_id))
      aws_secret_access_key: ((readonly_secret_access_key))
      aws_session_token: ((readonly_session_token))
      aws_role_arn: arn:aws:iam::((pay_aws_test_account_id)):role/concourse
      # Hardcode the test account registry ID for now. Needs to be a string, not a number
      aws_ecr_registry_id: "((pay_aws_test_account_id))"
      aws_region: eu-west-1
      tag: latest

  - name: endtoend-dockerhub
    type: registry-image
    icon: docker
    source:
      repository: govukpay/endtoend
      tag: latest-master
      password: ((docker-password))
      username: ((docker-username))

  - name: reverse-proxy-ecr-registry-test
    type: registry-image
    icon: docker
    source:
      repository: govukpay/reverse-proxy
      variant: release
      aws_access_key_id: ((readonly_access_key_id))
      aws_secret_access_key: ((readonly_secret_access_key))
      aws_session_token: ((readonly_session_token))
      aws_role_arn: arn:aws:iam::((pay_aws_test_account_id)):role/concourse
      # Hardcode the test account registry ID for now. Needs to be a string, not a number
      aws_ecr_registry_id: "((pay_aws_test_account_id))"
      aws_region: eu-west-1
      tag: latest

  - name: reverse-proxy-dockerhub
    type: registry-image
    icon: docker
    source:
      repository: govukpay/reverse-proxy
      tag: latest-master
      password: ((docker-password))
      username: ((docker-username))

  - name: stubs-ecr-registry-test
    type: registry-image
    icon: docker
    source:
      repository: govukpay/stubs
      variant: release
      aws_access_key_id: ((readonly_access_key_id))
      aws_secret_access_key: ((readonly_secret_access_key))
      aws_session_token: ((readonly_session_token))
      aws_role_arn: arn:aws:iam::((pay_aws_test_account_id)):role/concourse
      # Hardcode the test account registry ID for now. Needs to be a string, not a number
      aws_ecr_registry_id: "((pay_aws_test_account_id))"
      aws_region: eu-west-1
      tag: latest

  - name: stubs-dockerhub
    type: registry-image
    icon: docker
    source:
      repository: govukpay/stubs
      tag: latest-master
      password: ((docker-password))
      username: ((docker-username))

  - name: monday-morning
    icon: alarm
    type: time
    source:
      start: "17:00"
      stop: "19:30"
      days: [Monday]
      location: Europe/London

  - name: pay-ci
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-ci
      # branch: master
      branch: pp-9305-sync-dockerhub-images


# Builds the Docker images used by end-to-end tests and pushes to ECR (and Dockerhub)
jobs:
  - name: build-and-push-endtoend-to-test-ecr
    plan:
      - get: endtoend-src
        trigger: true
      - task: build-endtoend-image
        privileged: true
        params:
          CONTEXT: endtoend-src
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: vito/oci-build-task
          inputs:
            - name: endtoend-src
          outputs:
            - name: image
          run:
            path: build
      - in_parallel:
          - put: endtoend-ecr-registry-test
            params:
              image: image/image.tar
          - put: endtoend-dockerhub
            params:
              image: image/image.tar

  - name: build-and-push-reverse-proxy-to-test-ecr
    plan:
      - get: reverse-proxy-src
        trigger: true
      - get: pay-infra-src
      - task: find-and-compile-naxsi-rules
        config:
          container_limits: { }
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: govukpay/concourse-runner
          inputs:
            - name: pay-infra-src
            - name: reverse-proxy-src
          outputs:
            - name: reverse-proxy-src
          run:
            path: /bin/sh
            args:
              - -ec
              - |
                cd reverse-proxy-src/images/proxy
                mkdir target

                # Search pay-infra files for naxsi rules and copy to current 'target' directory
                # See https://github.com/alphagov/pay-scripts/blob/master/images/proxy/build-latest-master.sh
                prod_naxsi_rules_source=../../../pay-infra-src/provisioning/terraform/modules/pay_microservices_v2
                find "$prod_naxsi_rules_source" -name \*.naxsi -exec cp {} target \;
      - task: build-reverse-proxy-image
        privileged: true
        params:
          CONTEXT: reverse-proxy-src/images/proxy/
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: vito/oci-build-task
          inputs:
          - name: reverse-proxy-src
          outputs:
          - name: image
          run:
            path: build
      - in_parallel:
        - put: reverse-proxy-ecr-registry-test
          params:
            image: image/image.tar
        - put: reverse-proxy-dockerhub
          params:
            image: image/image.tar

  - name: build-and-push-stubs-to-test-ecr
    plan:
      - get: stubs-src
        trigger: true
      - task: build-stubs-image
        privileged: true
        params:
          CONTEXT: stubs-src
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: vito/oci-build-task
          inputs:
          - name: stubs-src
          outputs:
          - name: image
          run:
            path: build
      - in_parallel:
        - put: stubs-ecr-registry-test
          params:
            image: image/image.tar
        - put: stubs-dockerhub
          params:
            image: image/image.tar

  - name: sync-images-from-dockerhub-to-ecr
    plan:
      - get: monday-morning
        trigger: true
      - get: pay-ci
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_test_account_id)):role/concourse
          AWS_ROLE_SESSION_NAME: concourse-sync-dockerhub-to-ecr-test
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - task: sync-images
        privileged: true
        file: pay-ci/ci/tasks/sync-images-dockerhub-to-ecr.yml
        params:
          AWS_ACCOUNT_ID: ((pay_aws_test_account_id))
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))

          DOCKERHUB_USERNAME: ((docker-username))
          DOCKERHUB_PASSWORD: ((docker-password))

          SYNC_IMAGES: "postgres:11-alpine,roribio16/alpine-sqs:latest,selenium/standalone-chrome:3.141.59-iron"
