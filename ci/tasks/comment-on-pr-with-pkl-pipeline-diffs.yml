---
platform: linux
image_resource:
  type: registry-image
  source:
    repository: governmentdigitalservice/pay-concourse-runner
params:
  GITHUB_TOKEN:
  CONCOURSE_TEAM:
  FLY_PASSWORD:
inputs:
  - name: pay-ci
  - name: pkl-pipeline-pr
outputs:
  - name: diffs
run:
  path: ash
  args:
    - -c
    - |
      set -euo pipefail

      apk add --no-cache --no-progress github-cli

      export MASTER="pay-ci"
      export PR="pkl-pipeline-pr"

      GITHUB_PR_URL=$(jq -r '.[] | select(.name == "url") | .value' < "$PR/.git/resource/metadata.json")

      mkdir -p "diffs/${CONCOURSE_TEAM}/"

      FAILED_EVALUATIONS=""

      for DIR in "$MASTER" "$PR"; do
        echo "Generting YML from PKL in $DIR"

        if [ ! -d "$DIR/ci/pkl-pipelines/${CONCOURSE_TEAM}" ]; then
          mkdir -p "$DIR/ci/pkl-pipelines/${CONCOURSE_TEAM}"
        fi

        cd "$DIR/ci/pkl-pipelines/${CONCOURSE_TEAM}" >> /dev/null 2>&1

        if [ "$(find . -mindepth 1 -maxdepth 1 -type f -name '*.pkl' | wc -l)" -gt 0 ]; then
          find . -mindepth 1 -maxdepth 1 -type f -name '*.pkl' | while read -r PKL_FILE; do
            echo "Generating YML for $PKL_FILE"
            YAML_FILE=$(echo "$PKL_FILE" | sed -E 's/\.pkl$/.yml/')
            if ! pkl eval "$PKL_FILE" > "$YAML_FILE"; then
              FAILED_EVALUATIONS="$FAILED_EVALUATIONS\n$PKL_FILE"
            fi
          done
        fi

        cd - >> /dev/null 2>&1
      done

      if [ -n "$FAILED_EVALUATIONS" ]; then
        echo "ERROR: Some pkl pipelines were not able to be evaluated. The following pipelines failed:"
        echo 
        echo "$FAILED_EVALUATIONS"
        echo
        exit 1
      fi

      YAML_FILES_TO_DIFF=$(
        find \
          "$MASTER/ci/pkl-pipelines/$CONCOURSE_TEAM" \
          "$PR/ci/pkl-pipelines/$CONCOURSE_TEAM" \
          -maxdepth 1 -type f -name '*.yml'
      )

      if [ "$(echo "$YAML_FILES_TO_DIFF" | wc -l)" -eq 0 ]; then
        echo "No YAML files to diff"
        exit 0
      fi

      echo "Generating diffs"
      NO_DIFF_TMPFILE=$(mktemp)

      echo "$YAML_FILES_TO_DIFF" | cut -f 5 -d '/' | sort | uniq | while read -r PIPELINE_YAML; do
        if diff -uN "$MASTER/ci/pkl-pipelines/$CONCOURSE_TEAM/$PIPELINE_YAML" "$PR/ci/pkl-pipelines/$CONCOURSE_TEAM/$PIPELINE_YAML" >>/dev/null 2>&1; then
          echo "No diff in $PIPELINE_YAML"
          echo "$PIPELINE_YAML" >> "$NO_DIFF_TMPFILE"
        else
          echo "Diff in $PIPELINE_YAML"
          set +e
          diff -uN "$MASTER/ci/pkl-pipelines/$CONCOURSE_TEAM/$PIPELINE_YAML" "$PR/ci/pkl-pipelines/$CONCOURSE_TEAM/$PIPELINE_YAML" > "diffs/${PIPELINE_YAML}"
          set -e
        fi
      done

      echo "Logging into concourse with fly"
      fly -t "$CONCOURSE_TEAM" login -c "https://pay-cd.deploy.payments.service.gov.uk" -u pay-dev -p "$FLY_PASSWORD" --team-name "$CONCOURSE_TEAM"

      echo "Commenting on PR"
      cd diffs >>/dev/null 2>&1

      if [ "$(find . -mindepth 1 -maxdepth 1 -type f -name '*.yml' | wc -l)" -eq 0 ]; then
        gh pr comment "$GITHUB_PR_URL" --body "**No YAML differences detected between PR and master pkl files**"

        exit 0
      fi

      find . -maxdepth 1 -mindepth 1 -type f -name '*.yml' | while read -r DIFF_FILE; do
        TMPFILE=$(mktemp)

        PIPELINE_NAME=$(basename "$DIFF_FILE" | sed -E 's/\.yml$//')

        if [ ! -f "../$PR/ci/pkl-pipelines/$CONCOURSE_TEAM/$DIFF_FILE" ]; then
          {
            echo "\`$DIFF_FILE\` has been deleted. Would require you to run:"
            echo
            echo '```diff'
            echo "\$ fly -t \"$CONCOURSE_TEAM\" destroy-pipeline -p \"$PIPELINE_NAME\""
            echo '```'
          } >> "$TMPFILE"
        else
          {
            echo "<details><summary>Diff of $DIFF_FILE</summary>"
            echo
            echo '```diff'
            cat "$DIFF_FILE"
            echo '```'
            echo "</details>"
          } >> "$TMPFILE"

          DRY_RUN_TMPFILE=$(mktemp)
          # NOTE: The sed expressions in here removes the ansi escape codes that the very naughty
          # fly cli puts into the output despite being in --no-color mode.
          # sed -E 's/^ +\x8+//'     CTRL+H character
          # sed -E 's/\x1B\[1m//'    ANSI Enable Bold character
          # sed -E 's/\x1B\[0m//'    ANSI disable Bold character
          fly --target "$CONCOURSE_TEAM" \
            set-pipeline \
            --no-color \
            --dry-run \
            --config "../$PR/ci/pkl-pipelines/$CONCOURSE_TEAM/$DIFF_FILE" \
            --pipeline "$PIPELINE_NAME" \
            | sed -E 's/^ +\x8+//' \
            | sed -E 's/\x1B\[1m//' \
            | sed -E 's/\x1B\[0m//' \
            > "$DRY_RUN_TMPFILE"

          if grep "no changes to apply" "$DRY_RUN_TMPFILE" >>/dev/null 2>&1 && [ "$(wc -l "$DRY_RUN_TMPFILE")" -eq 1 ]; then
            {
              echo
              echo "**Set-pipeline dry-run for $PIPELINE_NAME in team $CONCOURSE_TEAM for file $DIFF_FILE shows no changes**"
              echo
            } >> "$TMPFILE"
          else
            {
              echo "<details><summary>Concourse set-pipeline dry-run for \`$DIFF_FILE\`</summary>"
              echo
              echo '```diff'
              cat "$DRY_RUN_TMPFILE"
              echo '```'
            } >> "$TMPFILE"
          fi
        fi

        gh pr comment "$GITHUB_PR_URL" --body-file "$TMPFILE"
        # Sleep so we don't get rate limited by the github API
        sleep 1
      done

      if [ "$(wc -l <"$NO_DIFF_TMPFILE")" -gt 0 ];then
        TMPFILE=$(mktemp)

        {
          echo "The following files had no diff in the YAML between the main branch and this PR:"
          echo
          echo '```'
          cat "$NO_DIFF_TMPFILE"
          echo '```'
        } >> "$TMPFILE"

        gh pr comment "$GITHUB_PR_URL" --body-file "$TMPFILE"
      fi
