import "package://pkg.pkl-lang.org/github.com/alphagov/pkl-concourse-pipeline/pkl-concourse-pipeline@0.0.4#/Pipeline.pkl"

import "./shared_resources_for_deploy_pipelines.pkl"

local class RunCodeBuildStep extends Pipeline.TaskStep {
  hidden _appName: String
  hidden arch: "amd64" | "armv8" | "manifest"

  task = "run-codebuild-\(_appName)-\(arch)"
  attempts = 3
  file = "pay-ci/ci/tasks/run-codebuild.yml"
  params {
    ["PATH_TO_CONFIG"] = "../../../../run-codebuild-configuration/\(_appName)-\(arch).json"
    ...shared_resources_for_deploy_pipelines.getAWSAssumeRoleCreds()
  }
}

function multiArchCandidateBuild(appName: String): Listing<Pipeline.Step> = new {
  new Pipeline.TaskStep {
    task = "prepare-codebuild"
    file = "pay-ci/ci/tasks/prepare-codebuild-multiarch.yml"
    params {
      ["PROJECT_TO_BUILD"] = appName
      ...shared_resources_for_deploy_pipelines.getAWSAssumeRoleCreds()
      ["RELEASE_NUMBER"] = "((.:release-number))"
      ["RELEASE_NAME"] = "((.:release-name))"
      ["RELEASE_SHA"] = "((.:release-sha))"
      ["BUILD_DATE"] = "((.:date))"
    }
  }

  new Pipeline.InParallelStep {
    in_parallel = new Pipeline.InParallelConfig {
      steps = new Listing<Pipeline.Step> {
        new RunCodeBuildStep { _appName = appName arch = "amd64" }
        new RunCodeBuildStep { _appName = appName arch = "armv8" }
      }
    }
  }
  new RunCodeBuildStep { _appName = appName arch = "manifest" }
}

class RetagMultiArchImageInECR extends Pipeline.TaskStep {
  hidden repo: String
  hidden newTag: String
  hidden sourceTag: String = "((.:candidate_image_tag))"
  hidden account: "dev" | "test" | "staging" | "production" | "deploy" = "test"

  task = "retag-candidate-as-\(if (newTag.contains("release")) "release" else newTag)-in-ecr"
  file = "pay-ci/ci/tasks/manifest-retag.yml"
  params = new {
    ["DOCKER_LOGIN_ECR"] = "1"
    ["AWS_ACCOUNT_ID"] = "((pay_aws_\(account)_account_id))"
    ["SOURCE_MANIFEST"] = "((pay_aws_\(account)_account_id)).dkr.ecr.eu-west-1.amazonaws.com/govukpay/\(repo):\(sourceTag)"
    ["NEW_MANIFEST"] = "((pay_aws_\(account)_account_id)).dkr.ecr.eu-west-1.amazonaws.com/govukpay/\(repo):\(newTag)"
    ["AWS_ACCESS_KEY_ID"] = "((.:retag-role.AWS_ACCESS_KEY_ID))"
    ["AWS_SECRET_ACCESS_KEY"] = "((.:retag-role.AWS_SECRET_ACCESS_KEY))"
    ["AWS_SESSION_TOKEN"] = "((.:retag-role.AWS_SESSION_TOKEN))"
  }
}

class RetagMultiArchImageInDockerhubAsLatestMaster extends Pipeline.TaskStep {
  hidden repo: String
  hidden newTag: String = "latest-master"
  hidden sourceTag: String = "((.:candidate_image_tag))"

  task = "retag-candidate-as-\(newTag)-in-dockerhub"
  file = "pay-ci/ci/tasks/manifest-retag.yml"
  params = new {
    ["SOURCE_MANIFEST"] = "\(repo):\(sourceTag)"
    ["NEW_MANIFEST"] = "\(repo):latest-master"
  }
}