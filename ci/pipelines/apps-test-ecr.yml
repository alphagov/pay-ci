aws_test_config: &aws_test_config
  aws_access_key_id: ((readonly_access_key_id))
  aws_secret_access_key: ((readonly_secret_access_key))
  aws_session_token: ((readonly_session_token))
  # Need to create the role for the concourse user to assume in the test account
  aws_role_arn: arn:aws:iam::((pay_aws_test_account_id)):role/concourse
  # Hardcode the test account registry ID for now. Needs to be a string, not a number
  aws_ecr_registry_id: "((pay_aws_test_account_id))"
  aws_region: eu-west-1

aws_staging_config: &aws_staging_config
  aws_access_key_id: ((readonly_access_key_id))
  aws_secret_access_key: ((readonly_secret_access_key))
  aws_session_token: ((readonly_session_token))
  aws_role_arn: arn:aws:iam::((pay_aws_staging_account_id)):role/concourse
  aws_ecr_registry_id: "((pay_aws_staging_account_id))"
  aws_region: eu-west-1

resources:
  - name: apps-test-ecr
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-ci
      branch: master
      paths:
        - ci/pipelines/apps-test-ecr.yml
  - name: pay-ci
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-ci
      branch: master
      
  # Github Releases
  - name: toolbox-git-release
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-toolbox
      branch: master
      tag_regex: "alpha_release-(.*)"
  - name: frontend-git-release
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-frontend
      branch: master
      tag_regex: "alpha_release-(.*)"
  - name: adminusers-git-release
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-adminusers
      branch: master
      tag_regex: "alpha_release-(.*)"
  - name: cardid-git-release
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-cardid
      branch: master
      tag_regex: "alpha_release-(.*)"
  - name: connector-git-release
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-connector
      branch: master
      tag_regex: "alpha_release-(.*)"
  - name: ledger-git-release
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-ledger
      branch: master
      tag_regex: "alpha_release-(.*)"
  - name: products-git-release
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-products
      branch: master
      tag_regex: "alpha_release-(.*)"
  - name: products-ui-git-release
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-products-ui
      branch: master
      tag_regex: "alpha_release-(.*)"
  - name: publicauth-git-release
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-publicauth
      branch: master
      tag_regex: "alpha_release-(.*)"
  - name: publicapi-git-release
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-publicapi
      branch: master
      tag_regex: "alpha_release-(.*)"
  - name: selfservice-git-release
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-selfservice
      branch: master
      tag_regex: "alpha_release-(.*)"
  - name: nginx-proxy-git-release
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-nginx-proxy
      branch: master
      tag_regex: "alpha_release-(.*)"
  - name: pay-infra
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/pay-infra
      branch: master
      username: alphagov-pay-ci
      password: ((github-access-token))
  - name: nginx-forward-proxy-dockerhub-release
    type: updated-registry-image
    icon: docker
    source:
      variant: alpine
      repository: govukpay/nginx-forward-proxy
      username: ((docker-username))
      password: ((docker-password))

  # ECR registry resources
  - name: toolbox-ecr-registry-test
    type: dev-registry-image
    icon: docker
    source:
      repository: govukpay/toolbox
      variant: release
      <<: *aws_test_config
  - name: frontend-ecr-registry-test
    type: dev-registry-image
    icon: docker
    source:
      repository: govukpay/frontend
      variant: release
      <<: *aws_test_config
  - name: adminusers-ecr-registry-test
    type: dev-registry-image
    icon: docker
    source:
      repository: govukpay/adminusers
      variant: release
      <<: *aws_test_config
  - name: cardid-ecr-registry-test
    type: dev-registry-image
    icon: docker
    source:
      repository: govukpay/cardid
      variant: release
      <<: *aws_test_config
  - name: connector-ecr-registry-test
    type: dev-registry-image
    icon: docker
    source:
      repository: govukpay/connector
      variant: release
      <<: *aws_test_config
  - name: ledger-ecr-registry-test
    type: dev-registry-image
    icon: docker
    source:
      repository: govukpay/ledger
      variant: release
      <<: *aws_test_config
  - name: products-ecr-registry-test
    type: dev-registry-image
    icon: docker
    source:
      repository: govukpay/products
      variant: release
      <<: *aws_test_config
  - name: products-ui-ecr-registry-test
    type: dev-registry-image
    icon: docker
    source:
      repository: govukpay/products-ui
      variant: release
      <<: *aws_test_config
  - name: publicapi-ecr-registry-test
    type: dev-registry-image
    icon: docker
    source:
      repository: govukpay/publicapi
      variant: release
      <<: *aws_test_config
  - name: publicauth-ecr-registry-test
    type: dev-registry-image
    icon: docker
    source:
      repository: govukpay/publicauth
      variant: release
      <<: *aws_test_config
  - name: selfservice-ecr-registry-test
    type: dev-registry-image
    icon: docker
    source:
      repository: govukpay/selfservice
      variant: release
      <<: *aws_test_config
  - name: nginx-proxy-ecr-registry-test
    type: dev-registry-image
    icon: docker
    source:
      repository: govukpay/docker-nginx-proxy
      <<: *aws_test_config
  - name: nginx-forward-proxy-ecr-registry-test
    type: dev-registry-image
    icon: docker
    source:
      repository: govukpay/nginx-forward-proxy
      <<: *aws_test_config
  - name: toolbox-ecr-registry-staging
    type: dev-registry-image
    icon: docker
    source:
      repository: govukpay/toolbox
      <<: *aws_staging_config
  - name: frontend-ecr-registry-staging
    type: dev-registry-image
    icon: docker
    source:
      repository: govukpay/frontend
      <<: *aws_staging_config
  - name: adminusers-ecr-registry-staging
    type: dev-registry-image
    icon: docker
    source:
      repository: govukpay/adminusers
      <<: *aws_staging_config
  - name: connector-ecr-registry-staging
    type: dev-registry-image
    icon: docker
    source:
      repository: govukpay/connector
      <<: *aws_staging_config
  - name: ledger-ecr-registry-staging
    type: dev-registry-image
    icon: docker
    source:
      repository: govukpay/ledger
      <<: *aws_staging_config
  - name: products-ecr-registry-staging
    type: dev-registry-image
    icon: docker
    source:
      repository: govukpay/products
      <<: *aws_staging_config
  - name: products-ui-ecr-registry-staging
    type: dev-registry-image
    icon: docker
    source:
      repository: govukpay/products-ui
      <<: *aws_staging_config
  - name: publicapi-ecr-registry-staging
    type: dev-registry-image
    icon: docker
    source:
      repository: govukpay/publicapi
      <<: *aws_staging_config
  - name: publicauth-ecr-registry-staging
    type: dev-registry-image
    icon: docker
    source:
      repository: govukpay/publicauth
      <<: *aws_staging_config
  - name: selfservice-ecr-registry-staging
    type: dev-registry-image
    icon: docker
    source:
      repository: govukpay/selfservice
      <<: *aws_staging_config
  - name: cardid-ecr-registry-staging
    type: dev-registry-image
    icon: docker
    source:
      repository: govukpay/cardid
      <<: *aws_staging_config


resource_types:
  # Custom resource type - this has been merged to the
  # https://github.com/concourse/registry-image-resource repo,
  # however is not yet in a stable release. Using this custom
  # resource type allows us to support the ECR registry_id parameter
  # This can be removed once registry_id is in stable release of 'registry-image'.
  - name: dev-registry-image
    type: registry-image
    source:
      repository: concourse/registry-image-resource
      username: ((docker-username))
      password: ((docker-password))
      tag: dev
  - name: updated-registry-image
    type: registry-image
    source:
      repository: concourse/registry-image-resource
      tag: "1.1.0"

groups:
  - name: pipeline-meta-update
    jobs:
      - update-apps-test-ecr-pipeline
  - name: toolbox
    jobs:
      - push-toolbox-to-test-ecr
      - deploy-toolbox
      - smoke-test-toolbox
      - push-toolbox-to-staging-ecr
  - name: frontend
    jobs:
      - push-frontend-to-test-ecr
      - deploy-frontend
      - smoke-test-frontend
      - push-frontend-to-staging-ecr
  - name: adminusers
    jobs:
      - push-adminusers-to-test-ecr
      - deploy-adminusers
      - smoke-test-adminusers
      - push-adminusers-to-staging-ecr
  - name: connector
    jobs:
      - push-connector-to-test-ecr
      - deploy-connector
      - smoke-test-connector
      - push-connector-to-staging-ecr
  - name: ledger
    jobs:
      - push-ledger-to-test-ecr
      - deploy-ledger
      - smoke-test-ledger
      - push-ledger-to-staging-ecr
  - name: products
    jobs:
      - push-products-to-test-ecr
      - deploy-products
      - smoke-test-products
      - push-products-to-staging-ecr
  - name: products-ui
    jobs:
      - push-products-ui-to-test-ecr
      - deploy-products-ui
      - smoke-test-products-ui
      - push-products-ui-to-staging-ecr
  - name: publicapi
    jobs:
      - push-publicapi-to-test-ecr
      - deploy-publicapi
      - smoke-test-publicapi
      - push-publicapi-to-staging-ecr
  - name: publicauth
    jobs:
      - push-publicauth-to-test-ecr
      - deploy-publicauth
      - smoke-test-publicauth
      - push-publicauth-to-staging-ecr
  - name: selfservice
    jobs:
      - push-selfservice-to-test-ecr
      - deploy-selfservice
      - smoke-test-selfservice
      - push-selfservice-to-staging-ecr
  - name: cardid
    jobs:
      - push-cardid-to-test-ecr
      - deploy-cardid
      - smoke-test-cardid
      - push-cardid-to-staging-ecr
  - name: nginx-proxy
    jobs:
      - nginx-proxy-image-to-test-ecr
  - name: nginx-forward-proxy
    jobs:
      - nginx-forward-proxy-image-to-test-ecr

definitions:
  - &pull-image-from-dockerhub
    task: pull-image-from-dockerhub
    privileged: true
    file: pay-ci/ci/tasks/pull-image-from-dockerhub.yml
    params:
      DOCKER_USERNAME: updateThisValue
      DOCKER_AUTH_TOKEN: updateThisValue
      DOCKER_REPOSITORY: updateThisValue
      APP_GIT_DIR: updateThisValue

docker_credentials: &docker_credentials
  DOCKER_USERNAME: ((docker-username))
  DOCKER_AUTH_TOKEN: ((docker-password))

jobs:
  - name: update-apps-test-ecr-pipeline
    plan:
      - get: apps-test-ecr
        trigger: true
      - set_pipeline: apps-test-ecr
        file: apps-test-ecr/ci/pipelines/apps-test-ecr.yml
  - name: push-toolbox-to-test-ecr
    plan:
      - get: pay-ci
      - get: toolbox-git-release
        trigger: true
      # Temporarily fetch image from Dockerhub until Concourse can build its own
      - <<: *pull-image-from-dockerhub
        params:
          DOCKER_REPOSITORY: govukpay/toolbox
          APP_GIT_DIR: toolbox-git-release
          <<: *docker_credentials
      - task: parse-release-tag
        file: pay-ci/ci/tasks/parse-release-tag.yml
        input_mapping:
          git-release: toolbox-git-release
      - put: toolbox-ecr-registry-test
        params:
          image: image/image.tar
          additional_tags: tags/tags
  - name: deploy-toolbox
    plan:
      - get: toolbox-ecr-registry-test
        trigger: true
      - get: pay-infra
      - get: pay-ci
      - load_var: tag
        file: toolbox-ecr-registry-test/tag
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_test_account_id)):role/concourse
          AWS_ROLE_SESSION_NAME: terraform-staging-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - task: deploy-to-test
        file: pay-ci/ci/tasks/deploy-app.yml
        params:
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
          TAG: ((.:tag))
          APP_NAME: toolbox
      - task: wait-for-deploy
        file: pay-ci/ci/tasks/wait-for-deploy.yml
        params:
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
          APP_NAME: toolbox
          TAG: ((.:tag))
  - name: smoke-test-toolbox
    plan:
      - get: toolbox-ecr-registry-test
        trigger: true
        passed: [deploy-toolbox]
      - task: smoke-test-on-test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: govukpay/concourse-runner
          run:
            path: /bin/bash
            args:
              - -ec
              - |
                echo "Imagine we just smoked on test."
  - name: push-toolbox-to-staging-ecr
    plan:
      - get: toolbox-ecr-registry-test
        params:
          format: oci
        trigger: true
        passed: [smoke-test-toolbox]
      - put: toolbox-ecr-registry-staging
        params:
          image: toolbox-ecr-registry-test/image.tar
          additional_tags: toolbox-ecr-registry-test/tag

  - name: push-frontend-to-test-ecr
    plan:
      - get: pay-ci
      - get: frontend-git-release
        trigger: true
      # Temporarily fetch image from Dockerhub until Concourse can build its own
      - <<: *pull-image-from-dockerhub
        params:
          DOCKER_REPOSITORY: govukpay/frontend
          APP_GIT_DIR: frontend-git-release
          <<: *docker_credentials
      - task: parse-release-tag
        file: pay-ci/ci/tasks/parse-release-tag.yml
        input_mapping:
          git-release: frontend-git-release
      - put: frontend-ecr-registry-test
        params:
          image: image/image.tar
          additional_tags: tags/tags
  - name: deploy-frontend
    plan:
      - get: frontend-ecr-registry-test
        trigger: true
      - get: pay-infra
      - get: pay-ci
      - load_var: tag
        file: frontend-ecr-registry-test/tag
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_test_account_id)):role/concourse
          AWS_ROLE_SESSION_NAME: terraform-staging-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - task: deploy-to-test
        file: pay-ci/ci/tasks/deploy-app.yml
        params:
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
          TAG: ((.:tag))
          APP_NAME: frontend
      - task: wait-for-deploy
        file: pay-ci/ci/tasks/wait-for-deploy.yml
        params:
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
          APP_NAME: frontend
          TAG: ((.:tag))
  - name: smoke-test-frontend
    plan:
      - get: frontend-ecr-registry-test
        trigger: true
        passed: [deploy-frontend]
      - task: smoke-test-on-test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: govukpay/concourse-runner
          run:
            path: /bin/bash
            args:
              - -ec
              - |
                echo "Imagine we just smoked on test."
  - name: push-frontend-to-staging-ecr
    plan:
      - get: frontend-ecr-registry-test
        params:
          format: oci
        trigger: true
        passed: [smoke-test-frontend]
      - put: frontend-ecr-registry-staging
        params:
          image: frontend-ecr-registry-test/image.tar
          additional_tags: frontend-ecr-registry-test/tag

  - name: push-adminusers-to-test-ecr
    plan:
      - get: pay-ci
      - get: adminusers-git-release
        trigger: true
      # Temporarily fetch image from Dockerhub until Concourse can build its own
      - <<: *pull-image-from-dockerhub
        params:
          DOCKER_REPOSITORY: govukpay/adminusers
          APP_GIT_DIR: adminusers-git-release
          <<: *docker_credentials
      - task: parse-release-tag
        file: pay-ci/ci/tasks/parse-release-tag.yml
        input_mapping:
          git-release: adminusers-git-release
      - put: adminusers-ecr-registry-test
        params:
          image: image/image.tar
          additional_tags: tags/tags
  - name: deploy-adminusers
    plan:
      - get: adminusers-ecr-registry-test
        trigger: true
      - get: pay-infra
      - get: pay-ci
      - load_var: tag
        file: adminusers-ecr-registry-test/tag
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_test_account_id)):role/concourse
          AWS_ROLE_SESSION_NAME: terraform-staging-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - task: deploy-to-test
        file: pay-ci/ci/tasks/deploy-app.yml
        params:
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
          TAG: ((.:tag))
          APP_NAME: adminusers
      - task: wait-for-deploy
        file: pay-ci/ci/tasks/wait-for-deploy.yml
        params:
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
          APP_NAME: adminusers
          TAG: ((.:tag))
  - name: smoke-test-adminusers
    plan:
      - get: adminusers-ecr-registry-test
        trigger: true
        passed: [deploy-adminusers]
      - task: smoke-test-on-test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: govukpay/concourse-runner
          run:
            path: /bin/bash
            args:
              - -ec
              - |
                echo "Imagine we just smoked on test."
  - name: push-adminusers-to-staging-ecr
    plan:
      - get: adminusers-ecr-registry-test
        params:
          format: oci
        trigger: true
        passed: [smoke-test-adminusers]
      - put: adminusers-ecr-registry-staging
        params:
          image: adminusers-ecr-registry-test/image.tar
          additional_tags: adminusers-ecr-registry-test/tag

  - name: push-connector-to-test-ecr
    plan:
      - get: pay-ci
      - get: connector-git-release
        trigger: true
      # Temporarily fetch image from Dockerhub until Concourse can build its own
      - <<: *pull-image-from-dockerhub
        params:
          DOCKER_REPOSITORY: govukpay/connector
          APP_GIT_DIR: connector-git-release
          <<: *docker_credentials
      - task: parse-release-tag
        file: pay-ci/ci/tasks/parse-release-tag.yml
        input_mapping:
          git-release: connector-git-release
      - put: connector-ecr-registry-test
        params:
          image: image/image.tar
          additional_tags: tags/tags
  - name: deploy-connector
    plan:
      - get: connector-ecr-registry-test
        trigger: true
      - get: pay-infra
      - get: pay-ci
      - load_var: tag
        file: connector-ecr-registry-test/tag
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_test_account_id)):role/concourse
          AWS_ROLE_SESSION_NAME: terraform-staging-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - task: deploy-to-test
        file: pay-ci/ci/tasks/deploy-app.yml
        params:
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
          TAG: ((.:tag))
          APP_NAME: connector
      - task: wait-for-deploy
        file: pay-ci/ci/tasks/wait-for-deploy.yml
        params:
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
          APP_NAME: connector
          TAG: ((.:tag))
  - name: smoke-test-connector
    plan:
      - get: connector-ecr-registry-test
        trigger: true
        passed: [deploy-connector]
      - task: smoke-test-on-test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: govukpay/concourse-runner
          run:
            path: /bin/bash
            args:
              - -ec
              - |
                echo "Imagine we just smoked on test."
  - name: push-connector-to-staging-ecr
    plan:
      - get: connector-ecr-registry-test
        params:
          format: oci
        trigger: true
        passed: [smoke-test-connector]
      - put: connector-ecr-registry-staging
        params:
          image: connector-ecr-registry-test/image.tar
          additional_tags: connector-ecr-registry-test/tag
  - name: push-ledger-to-test-ecr
    plan:
      - get: pay-ci
      - get: ledger-git-release
        trigger: true
      # Temporarily fetch image from Dockerhub until Concourse can build its own
      - <<: *pull-image-from-dockerhub
        params:
          DOCKER_REPOSITORY: govukpay/ledger
          APP_GIT_DIR: ledger-git-release
          <<: *docker_credentials
      - task: parse-release-tag
        file: pay-ci/ci/tasks/parse-release-tag.yml
        input_mapping:
          git-release: ledger-git-release
      - put: ledger-ecr-registry-test
        params:
          image: image/image.tar
          additional_tags: tags/tags
  - name: deploy-ledger
    plan:
      - get: ledger-ecr-registry-test
        trigger: true
      - get: pay-infra
      - get: pay-ci
      - load_var: tag
        file: ledger-ecr-registry-test/tag
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_test_account_id)):role/concourse
          AWS_ROLE_SESSION_NAME: terraform-staging-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - task: deploy-to-test
        file: pay-ci/ci/tasks/deploy-app.yml
        params:
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
          TAG: ((.:tag))
          APP_NAME: ledger
      - task: wait-for-deploy
        file: pay-ci/ci/tasks/wait-for-deploy.yml
        params:
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
          APP_NAME: ledger
          TAG: ((.:tag))
  - name: smoke-test-ledger
    plan:
      - get: ledger-ecr-registry-test
        trigger: true
        passed: [deploy-ledger]
      - task: smoke-test-on-test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: govukpay/concourse-runner
          run:
            path: /bin/bash
            args:
              - -ec
              - |
                echo "Imagine we just smoked on test."
  - name: push-ledger-to-staging-ecr
    plan:
      - get: ledger-ecr-registry-test
        params:
          format: oci
        trigger: true
        passed: [smoke-test-ledger]
      - put: ledger-ecr-registry-staging
        params:
          image: ledger-ecr-registry-test/image.tar
          additional_tags: ledger-ecr-registry-test/tag
  - name: push-products-to-test-ecr
    plan:
      - get: pay-ci
      - get: products-git-release
        trigger: true
      # Temporarily fetch image from Dockerhub until Concourse can build its own
      - <<: *pull-image-from-dockerhub
        params:
          DOCKER_REPOSITORY: govukpay/products
          APP_GIT_DIR: products-git-release
          <<: *docker_credentials
      - task: parse-release-tag
        file: pay-ci/ci/tasks/parse-release-tag.yml
        input_mapping:
          git-release: products-git-release
      - put: products-ecr-registry-test
        params:
          image: image/image.tar
          additional_tags: tags/tags
  - name: deploy-products
    plan:
      - get: products-ecr-registry-test
        trigger: true
      - get: pay-infra
      - get: pay-ci
      - load_var: tag
        file: products-ecr-registry-test/tag
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_test_account_id)):role/concourse
          AWS_ROLE_SESSION_NAME: terraform-staging-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - task: deploy-to-test
        file: pay-ci/ci/tasks/deploy-app.yml
        params:
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
          TAG: ((.:tag))
          APP_NAME: products
      - task: wait-for-deploy
        file: pay-ci/ci/tasks/wait-for-deploy.yml
        params:
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
          APP_NAME: products
          TAG: ((.:tag))
  - name: smoke-test-products
    plan:
      - get: products-ecr-registry-test
        trigger: true
        passed: [deploy-products]
      - task: smoke-test-on-test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: govukpay/concourse-runner
          run:
            path: /bin/bash
            args:
              - -ec
              - |
                echo "Imagine we just smoked on test."
  - name: push-products-to-staging-ecr
    plan:
      - get: products-ecr-registry-test
        params:
          format: oci
        trigger: true
        passed: [smoke-test-products]
      - put: products-ecr-registry-staging
        params:
          image: products-ecr-registry-test/image.tar
          additional_tags: products-ecr-registry-test/tag
  - name: push-products-ui-to-test-ecr
    plan:
      - get: pay-ci
      - get: products-ui-git-release
        trigger: true
      # Temporarily fetch image from Dockerhub until Concourse can build its own
      - <<: *pull-image-from-dockerhub
        params:
          DOCKER_REPOSITORY: govukpay/products-ui
          APP_GIT_DIR: products-ui-git-release
          <<: *docker_credentials
      - task: parse-release-tag
        file: pay-ci/ci/tasks/parse-release-tag.yml
        input_mapping:
          git-release: products-ui-git-release
      - put: products-ui-ecr-registry-test
        params:
          image: image/image.tar
          additional_tags: tags/tags
  - name: deploy-products-ui
    plan:
      - get: products-ui-ecr-registry-test
        trigger: true
      - get: pay-infra
      - get: pay-ci
      - load_var: tag
        file: products-ui-ecr-registry-test/tag
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_test_account_id)):role/concourse
          AWS_ROLE_SESSION_NAME: terraform-staging-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - task: deploy-to-test
        file: pay-ci/ci/tasks/deploy-app.yml
        params:
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
          TAG: ((.:tag))
          APP_NAME: products-ui
      - task: wait-for-deploy
        file: pay-ci/ci/tasks/wait-for-deploy.yml
        params:
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
          APP_NAME: products-ui
          TAG: ((.:tag))
  - name: smoke-test-products-ui
    plan:
      - get: products-ui-ecr-registry-test
        trigger: true
        passed: [deploy-products-ui]
      - task: smoke-test-on-test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: govukpay/concourse-runner
          run:
            path: /bin/bash
            args:
              - -ec
              - |
                echo "Imagine we just smoked on test."
  - name: push-products-ui-to-staging-ecr
    plan:
      - get: products-ui-ecr-registry-test
        params:
          format: oci
        trigger: true
        passed: [smoke-test-products-ui]
      - put: products-ui-ecr-registry-staging
        params:
          image: products-ui-ecr-registry-test/image.tar
          additional_tags: products-ui-ecr-registry-test/tag
  - name: push-publicapi-to-test-ecr
    plan:
      - get: pay-ci
      - get: publicapi-git-release
        trigger: true
      # Temporarily fetch image from Dockerhub until Concourse can build its own
      - <<: *pull-image-from-dockerhub
        params:
          DOCKER_REPOSITORY: govukpay/publicapi
          APP_GIT_DIR: publicapi-git-release
          <<: *docker_credentials
      - task: parse-release-tag
        file: pay-ci/ci/tasks/parse-release-tag.yml
        input_mapping:
          git-release: publicapi-git-release
      - put: publicapi-ecr-registry-test
        params:
          image: image/image.tar
          additional_tags: tags/tags
  - name: deploy-publicapi
    plan:
      - get: publicapi-ecr-registry-test
        trigger: true
      - get: pay-infra
      - get: pay-ci
      - load_var: tag
        file: publicapi-ecr-registry-test/tag
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_test_account_id)):role/concourse
          AWS_ROLE_SESSION_NAME: terraform-staging-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - task: deploy-to-test
        file: pay-ci/ci/tasks/deploy-app.yml
        params:
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
          TAG: ((.:tag))
          APP_NAME: publicapi
      - task: wait-for-deploy
        file: pay-ci/ci/tasks/wait-for-deploy.yml
        params:
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
          APP_NAME: publicapi
          TAG: ((.:tag))
  - name: smoke-test-publicapi
    plan:
      - get: publicapi-ecr-registry-test
        trigger: true
        passed: [deploy-publicapi]
      - task: smoke-test-on-test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: govukpay/concourse-runner
          run:
            path: /bin/bash
            args:
              - -ec
              - |
                echo "Imagine we just smoked on test."
  - name: push-publicapi-to-staging-ecr
    plan:
      - get: publicapi-ecr-registry-test
        params:
          format: oci
        trigger: true
        passed: [smoke-test-publicapi]
      - put: publicapi-ecr-registry-staging
        params:
          image: publicapi-ecr-registry-test/image.tar
          additional_tags: publicapi-ecr-registry-test/tag
  - name: push-publicauth-to-test-ecr
    plan:
      - get: pay-ci
      - get: publicauth-git-release
        trigger: true
      # Temporarily fetch image from Dockerhub until Concourse can build its own
      - <<: *pull-image-from-dockerhub
        params:
          DOCKER_REPOSITORY: govukpay/publicauth
          APP_GIT_DIR: publicauth-git-release
          <<: *docker_credentials
      - task: parse-release-tag
        file: pay-ci/ci/tasks/parse-release-tag.yml
        input_mapping:
          git-release: publicauth-git-release
      - put: publicauth-ecr-registry-test
        params:
          image: image/image.tar
          additional_tags: tags/tags
  - name: deploy-publicauth
    plan:
      - get: publicauth-ecr-registry-test
        trigger: true
      - get: pay-infra
      - get: pay-ci
      - load_var: tag
        file: publicauth-ecr-registry-test/tag
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_test_account_id)):role/concourse
          AWS_ROLE_SESSION_NAME: terraform-staging-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - task: deploy-to-test
        file: pay-ci/ci/tasks/deploy-app.yml
        params:
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
          TAG: ((.:tag))
          APP_NAME: publicauth
      - task: wait-for-deploy
        file: pay-ci/ci/tasks/wait-for-deploy.yml
        params:
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
          APP_NAME: publicauth
          TAG: ((.:tag))
  - name: smoke-test-publicauth
    plan:
      - get: publicauth-ecr-registry-test
        trigger: true
        passed: [deploy-publicauth]
      - task: smoke-test-on-test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: govukpay/concourse-runner
          run:
            path: /bin/bash
            args:
              - -ec
              - |
                echo "Imagine we just smoked on test."
  - name: push-publicauth-to-staging-ecr
    plan:
      - get: publicauth-ecr-registry-test
        params:
          format: oci
        trigger: true
        passed: [smoke-test-publicauth]
      - put: publicauth-ecr-registry-staging
        params:
          image: publicauth-ecr-registry-test/image.tar
          additional_tags: publicauth-ecr-registry-test/tag
  - name: push-selfservice-to-test-ecr
    plan:
      - get: pay-ci
      - get: selfservice-git-release
        trigger: true
      # Temporarily fetch image from Dockerhub until Concourse can build its own
      - <<: *pull-image-from-dockerhub
        params:
          DOCKER_REPOSITORY: govukpay/selfservice
          APP_GIT_DIR: selfservice-git-release
          <<: *docker_credentials
      - task: parse-release-tag
        file: pay-ci/ci/tasks/parse-release-tag.yml
        input_mapping:
          git-release: selfservice-git-release
      - put: selfservice-ecr-registry-test
        params:
          image: image/image.tar
          additional_tags: tags/tags
  - name: deploy-selfservice
    plan:
      - get: selfservice-ecr-registry-test
        trigger: true
      - get: pay-infra
      - get: pay-ci
      - load_var: tag
        file: selfservice-ecr-registry-test/tag
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_test_account_id)):role/concourse
          AWS_ROLE_SESSION_NAME: terraform-staging-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - task: deploy-to-test
        file: pay-ci/ci/tasks/deploy-app.yml
        params:
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
          TAG: ((.:tag))
          APP_NAME: selfservice
      - task: wait-for-deploy
        file: pay-ci/ci/tasks/wait-for-deploy.yml
        params:
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
          APP_NAME: selfservice
          TAG: ((.:tag))
  - name: smoke-test-selfservice
    plan:
      - get: selfservice-ecr-registry-test
        trigger: true
        passed: [deploy-selfservice]
      - task: smoke-test-on-test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: govukpay/concourse-runner
          run:
            path: /bin/bash
            args:
              - -ec
              - |
                echo "Imagine we just smoked on test."
  - name: push-selfservice-to-staging-ecr
    plan:
      - get: selfservice-ecr-registry-test
        params:
          format: oci
        trigger: true
        passed: [smoke-test-selfservice]
      - put: selfservice-ecr-registry-staging
        params:
          image: selfservice-ecr-registry-test/image.tar
          additional_tags: selfservice-ecr-registry-test/tag

  - name: push-cardid-to-test-ecr
    plan:
      - get: pay-ci
      - get: cardid-git-release
        trigger: true
        params:
          submodules: none
      - task: update-submodule
        config:
          container_limits: {}
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: govukpay/concourse-runner
          inputs:
            - name: cardid-git-release
          params:
            GH_ACCESS_TOKEN: ((github-access-token))
          outputs:
            - name: image
          run:
            path: bash
            dir: cardid-git-release
            args:
              - -ec
              - |
                # cardid-data submodule's url is defined as ssh yet concourse
                # is using oauth. Furthermore we need to avoid the password
                # prompt from the git cli. Therefore rewrite the url for https
                # and add the token. The risk of setting the token in the url is
                # mitigated since these files are not committed, the container is ephemeral
                # and anyone with access to read the files could read the token from
                # environment variable. Furthermore we redact the token from the
                # files after the update.
                sed -i "s/git@github.com:/https:\/\/${GH_ACCESS_TOKEN}@github.com\//" .gitmodules
                git submodule init -q data
                git submodule update data
                sed -i "s/${GH_ACCESS_TOKEN}/token_redacted/" .gitmodules
                sed -i "s/${GH_ACCESS_TOKEN}/token_redacted/" .git/config
    # Temporarily fetch image from Dockerhub until Concourse can build its own
      - <<: *pull-image-from-dockerhub
        params:
          DOCKER_REPOSITORY: govukpay/cardid
          APP_GIT_DIR: cardid-git-release
          <<: *docker_credentials
      - task: parse-release-tag
        file: pay-ci/ci/tasks/parse-release-tag.yml
        input_mapping:
         git-release: cardid-git-release
      - put: cardid-ecr-registry-test
        params:
         image: image/image.tar
         additional_tags: tags/tags
  - name: deploy-cardid
    plan:
      - get: cardid-ecr-registry-test
        trigger: true
      - get: pay-infra
      - get: pay-ci
      - load_var: tag
        file: cardid-ecr-registry-test/tag
      - task: assume-role
        file: pay-ci/ci/tasks/assume-role.yml
        params:
          AWS_ROLE_ARN: arn:aws:iam::((pay_aws_test_account_id)):role/concourse
          AWS_ROLE_SESSION_NAME: terraform-staging-assume-role
      - load_var: role
        file: assume-role/assume-role.json
        format: json
      - task: deploy-to-test
        file: pay-ci/ci/tasks/deploy-app.yml
        params:
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
          TAG: ((.:tag))
          APP_NAME: cardid
      - task: wait-for-deploy
        file: pay-ci/ci/tasks/wait-for-deploy.yml
        params:
          AWS_ACCESS_KEY_ID: ((.:role.AWS_ACCESS_KEY_ID))
          AWS_SECRET_ACCESS_KEY: ((.:role.AWS_SECRET_ACCESS_KEY))
          AWS_SESSION_TOKEN: ((.:role.AWS_SESSION_TOKEN))
          APP_NAME: cardid
          TAG: ((.:tag))
  - name: smoke-test-cardid
    plan:
      - get: cardid-ecr-registry-test
        trigger: true
        passed: [deploy-cardid]
      - task: smoke-test-on-test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: govukpay/concourse-runner
          run:
            path: /bin/bash
            args:
              - -ec
              - |
                echo "Imagine we just smoked on test."
  - name: push-cardid-to-staging-ecr
    plan:
      - get: cardid-ecr-registry-test
        params:
          format: oci
        trigger: true
        passed: [smoke-test-cardid]
      - put: cardid-ecr-registry-staging
        params:
          image: cardid-ecr-registry-test/image.tar
          additional_tags: cardid-ecr-registry-test/tag
  - name: nginx-proxy-image-to-test-ecr
    plan:
      - get: apps-test-ecr
      - get: nginx-proxy-git-release
        trigger: true
      # Temporarily fetch image from Dockerhub until Concourse can build its own
      - <<: *pull-image-from-dockerhub
        params:
          DOCKER_REPOSITORY: govukpay/docker-nginx-proxy
          APP_GIT_DIR: nginx-proxy-git-release
          <<: *docker_credentials
      - put: nginx-proxy-ecr-registry-test
        params:
          image: image/image.tar
          additional_tags: nginx-proxy-git-release/.git/HEAD
  - name: nginx-forward-proxy-image-to-test-ecr
    plan:
      - get: apps-test-ecr
      - get: nginx-forward-proxy-dockerhub-release
        trigger: true
        params:
          format: oci
      # Temporarily fetch image from Dockerhub until Concourse can build its own
      - put: nginx-forward-proxy-ecr-registry-test
        params:
          image: nginx-forward-proxy-dockerhub-release/image.tar
          additional_tags: nginx-forward-proxy-dockerhub-release/tag
